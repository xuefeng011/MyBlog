{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/uploads/favicon.ico","path":"uploads/favicon.ico","modified":1,"renderable":0},{"_id":"source/uploads/nodejs1.jpg","path":"uploads/nodejs1.jpg","modified":1,"renderable":0},{"_id":"source/uploads/pic.png","path":"uploads/pic.png","modified":1,"renderable":0},{"_id":"themes/maupassant/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/maupassant/.travis.yml","hash":"f8da426b97088e4caa5226cff219a5d95087961f","modified":1475894457998},{"_id":"themes/maupassant/LICENSE","hash":"b7ea1dbb2fed3410d78bc7c125e1d80927b56981","modified":1475894458002},{"_id":"themes/maupassant/README.md","hash":"6130714a17439ba73812c7e7f8305924965223a6","modified":1475920083300},{"_id":"themes/maupassant/_config.yml","hash":"d95b0ef04f705d2ab13b96416975900355db2ce2","modified":1476238384284},{"_id":"themes/maupassant/package.json","hash":"04ca87ea475f37841d3610fe5806feb8022416c3","modified":1475894458164},{"_id":"source/_posts/css3新特性.md","hash":"298243243e3031bdff2702e57a637b49c054bde5","modified":1487560768456},{"_id":"source/_posts/flagcount.md","hash":"7799e338d29991697609aafbd39afdab23ea4e49","modified":1487560778620},{"_id":"source/_posts/git_map.md","hash":"b05a2156f7e58abe63e51f08eb4a860d6df3e739","modified":1487560253495},{"_id":"source/_posts/heroku.md","hash":"c7c66d1bbcc0eb2b4337b18764b9ecbd767d5477","modified":1487560257118},{"_id":"source/_posts/markdown.md","hash":"8c4095749d1cb8a5430bac9f1a212e43d6ae242e","modified":1487560261381},{"_id":"source/_posts/nodejs_map","hash":"e541d6ecaeaf21b886843008c8d00c1fd00b5210","modified":1487560112849},{"_id":"source/_posts/react_map.md","hash":"111fe5abd353e7a4910afdd9d8cd15503f2474c2","modified":1487560117727},{"_id":"source/_posts/redis.md","hash":"97e7cb5f776e35bcd56687572ffc182a1b3f2a54","modified":1487560268180},{"_id":"source/about/index.md","hash":"8da4f55ad269832a7267706947a0c231f2b48710","modified":1476237889620},{"_id":"source/uploads/appShare.js","hash":"b4251dfb583e690324982cfa5b773f2266549469","modified":1475912260104},{"_id":"source/uploads/favicon.ico","hash":"230b37cef533ca4c6fe324c87bd36b4a56986d32","modified":1475205592269},{"_id":"source/uploads/nodejs1.jpg","hash":"83922ec4605cd6b93de9abfb1e8454c8b5856bea","modified":1475976167760},{"_id":"source/uploads/pic.png","hash":"230b37cef533ca4c6fe324c87bd36b4a56986d32","modified":1475205592269},{"_id":"source/uploads/分享.js","hash":"0101c40fe3d1e67dd2f1d06806ae79d1f7e01433","modified":1475914329628},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"25d1d8cd8113045a7603c14af1ea1539fc6456ed","modified":1475894458015},{"_id":"themes/maupassant/languages/en.yml","hash":"6c5fc2cec7e44306d97bc7902e9765389d21c363","modified":1475894458018},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"3cc9312fbdba4a8f8e8254804121e4724c719bcc","modified":1475894458021},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"3a50568f200b9c1258415b53727e42c6b6c7ea0b","modified":1475894458025},{"_id":"themes/maupassant/languages/ko.yml","hash":"a454bcec60113507bc1d593a699849822386c196","modified":1475894458028},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"41f7c09365cbd5ba1b8906191ee07bc75094185a","modified":1475894458032},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"46659764e31c7866af436d98d4fabb9da122037a","modified":1475894458035},{"_id":"themes/maupassant/layout/archive.jade","hash":"d70d1ed241b1a431a2434768d02bb2de03070f70","modified":1475894458134},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"baa6072d381a54f2436365846649799a4a277803","modified":1475894458137},{"_id":"themes/maupassant/layout/base.jade","hash":"070a19d90f373aab5727b95938f023cbd48edb5c","modified":1475894458141},{"_id":"themes/maupassant/layout/index.jade","hash":"3fe1f0c5021ac696ed9846ecb1c75d285fa46708","modified":1475916730718},{"_id":"themes/maupassant/layout/page.jade","hash":"1e98aa785073dc1bbfe70f2863bc19fe287483b9","modified":1475894458148},{"_id":"themes/maupassant/layout/post.jade","hash":"f68f483242409f501bbc8b50ff129edd981087e2","modified":1475894458153},{"_id":"themes/maupassant/layout/single-column.jade","hash":"4be14ac93c154216e174fe0c4c05608c26f59c42","modified":1475894458156},{"_id":"themes/maupassant/layout/timeline.jade","hash":"ee1e8e4e8fdf61c6d19f1f7fe31ab50ab1465a8d","modified":1475894458161},{"_id":"themes/maupassant/maupassant/.travis.yml","hash":"f8da426b97088e4caa5226cff219a5d95087961f","modified":1475894457998},{"_id":"themes/maupassant/maupassant/LICENSE","hash":"b7ea1dbb2fed3410d78bc7c125e1d80927b56981","modified":1475894458002},{"_id":"themes/maupassant/maupassant/README.md","hash":"6130714a17439ba73812c7e7f8305924965223a6","modified":1475920083300},{"_id":"themes/maupassant/maupassant/_config.yml","hash":"d735bc5955b36ebbcc17b993d6a79951a090b7cb","modified":1476238369962},{"_id":"themes/maupassant/maupassant/package.json","hash":"04ca87ea475f37841d3610fe5806feb8022416c3","modified":1475894458164},{"_id":"themes/maupassant/source/favicon.ico","hash":"230b37cef533ca4c6fe324c87bd36b4a56986d32","modified":1475205592269},{"_id":"source/_h5/hdzq/index.html","hash":"201cdc9911df261ade53ce8a1e3f9ab7d613079b","modified":1474964066044},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"7e69266c3d1b9d872617046ca0630998200072fd","modified":1475894458046},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"b3a0b0ce0642f2bfe9df94b075c0c2a083871e1b","modified":1475894458052},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"c917ed2d59600544b0d0b66fb6e13cbf01ac7d02","modified":1475894733522},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"9e44f6d32f2449b4109c33118f8285fa2fc7b023","modified":1475894458061},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"ac6e3a92bf18ab6bbd0e041b6796b295bae963ee","modified":1475894458065},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"234a792e64ba208fa97d2f99772ece23056a53ec","modified":1475894458068},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"03ad0c49ae6f8a999ae35b38d08e25775f51f52a","modified":1475894458071},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"b11d9e6000449838b17f508429f29ffb60f53096","modified":1475894458075},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"6145b483b271bba05ad1db7c039fe352a768215b","modified":1475894458078},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"eb91a3baf9411188c7c8130f63a674f541ca9c81","modified":1475894458081},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7707b4c718a935882ee986d0bb0078e50cdbea64","modified":1475894458085},{"_id":"themes/maupassant/layout/_widget/flagcounter.jade","hash":"403c25556d4887c4102b1559dff429d14ce2ae1d","modified":1475975319122},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"2a1dd6a0e2befd073e3347347994d8dcd2047879","modified":1475894458089},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"0b9e78e7f20bc69690e05f2e0c956bded9058a84","modified":1475894458093},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"770b6c41cbf7969ed33adf87eec3be6f50a0911b","modified":1475894458124},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"c5301ca7f2ec24d790fd7f35f69f8fd8acbdb725","modified":1475894458127},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"37f236365b153fc40324391e5a602d6d50014e18","modified":1475894458130},{"_id":"themes/maupassant/maupassant/languages/de-DE.yml","hash":"25d1d8cd8113045a7603c14af1ea1539fc6456ed","modified":1475894458015},{"_id":"themes/maupassant/maupassant/languages/en.yml","hash":"6c5fc2cec7e44306d97bc7902e9765389d21c363","modified":1475894458018},{"_id":"themes/maupassant/maupassant/languages/es-ES.yml","hash":"3cc9312fbdba4a8f8e8254804121e4724c719bcc","modified":1475894458021},{"_id":"themes/maupassant/maupassant/languages/fr-FR.yml","hash":"3a50568f200b9c1258415b53727e42c6b6c7ea0b","modified":1475894458025},{"_id":"themes/maupassant/maupassant/languages/ko.yml","hash":"a454bcec60113507bc1d593a699849822386c196","modified":1475894458028},{"_id":"themes/maupassant/maupassant/languages/zh-CN.yml","hash":"41f7c09365cbd5ba1b8906191ee07bc75094185a","modified":1475894458032},{"_id":"themes/maupassant/maupassant/languages/zh-TW.yml","hash":"46659764e31c7866af436d98d4fabb9da122037a","modified":1475894458035},{"_id":"themes/maupassant/maupassant/layout/archive.jade","hash":"d70d1ed241b1a431a2434768d02bb2de03070f70","modified":1475894458134},{"_id":"themes/maupassant/maupassant/layout/base-without-sidebar.jade","hash":"baa6072d381a54f2436365846649799a4a277803","modified":1475894458137},{"_id":"themes/maupassant/maupassant/layout/base.jade","hash":"070a19d90f373aab5727b95938f023cbd48edb5c","modified":1475894458141},{"_id":"themes/maupassant/maupassant/layout/index.jade","hash":"3fe1f0c5021ac696ed9846ecb1c75d285fa46708","modified":1475916730718},{"_id":"themes/maupassant/maupassant/layout/page.jade","hash":"1e98aa785073dc1bbfe70f2863bc19fe287483b9","modified":1475894458148},{"_id":"themes/maupassant/maupassant/layout/post.jade","hash":"f68f483242409f501bbc8b50ff129edd981087e2","modified":1475894458153},{"_id":"themes/maupassant/maupassant/layout/single-column.jade","hash":"4be14ac93c154216e174fe0c4c05608c26f59c42","modified":1475894458156},{"_id":"themes/maupassant/maupassant/layout/timeline.jade","hash":"ee1e8e4e8fdf61c6d19f1f7fe31ab50ab1465a8d","modified":1475894458161},{"_id":"themes/maupassant/maupassant/source/favicon.ico","hash":"230b37cef533ca4c6fe324c87bd36b4a56986d32","modified":1475205592269},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","hash":"0d142e11e27e9de1a325c32369c42254101ddd34","modified":1475894458168},{"_id":"themes/maupassant/source/css/style.scss","hash":"3a00b275276847b054e71ea2eee47f548cd55dbf","modified":1475894458174},{"_id":"themes/maupassant/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1475894458175},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1475894458177},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1475894458178},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1475894458180},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1475894458181},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1475894458182},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"c77270e684a60babc1abb7353e700ecdc5a66d30","modified":1475894458193},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"8a993c1c4ad40789d2960b682cb2130382a0f26a","modified":1475894458199},{"_id":"themes/maupassant/source/js/search.js","hash":"9cf2337fe9af34055782880ac27b93713d74581f","modified":1475894458208},{"_id":"themes/maupassant/source/js/share.js","hash":"bb6880e2e8e187b576daf326476f09b0907fbe14","modified":1475894458215},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"150ab1cad40d7ae081b0896b13f7d7cbac4e6338","modified":1475894458223},{"_id":"themes/maupassant/source/js/totop.js","hash":"15de186b089c245fe60766d509b587919f05ff23","modified":1475894458229},{"_id":"source/_h5/hdzq/css/base.css","hash":"46b7fa8d43169b5e99d993a1858fed096c50fa8a","modified":1473673459357},{"_id":"source/_h5/hdzq/css/base.css.bak","hash":"ac1127da487eb8517163663c40ddb919524f456a","modified":1473673456591},{"_id":"source/_h5/hdzq/images/003017over.png","hash":"7c4262412cd4c94c3d7d93972616f170b835e289","modified":1473816228728},{"_id":"source/_h5/hdzq/images/003125over.png","hash":"a0115c9645be59047a37d387e12049782ab87eec","modified":1473733172563},{"_id":"source/_h5/hdzq/images/003017start.png","hash":"29ae4756e27a8da9cb775801e30da6a3de5d1892","modified":1473816229848},{"_id":"source/_h5/hdzq/images/003125start.png","hash":"d2bb0ae43774be5b8a578c2a70d6ff6b34db8b7d","modified":1473733172982},{"_id":"source/_h5/hdzq/images/20150821170407286.jpg","hash":"4a4848172ea893bc4fe0fd076b7f774b37e1d5eb","modified":1473439600000},{"_id":"source/_h5/hdzq/images/20151019134824314.jpg","hash":"d244bb82dd7435327e0b952b0c9e0f230cd7b4b9","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20151112182845 (1).jpg","hash":"df210425783bdaab26139582d8a5d4323a6e6a3b","modified":1473439600000},{"_id":"source/_h5/hdzq/images/20151112182845.jpg","hash":"df210425783bdaab26139582d8a5d4323a6e6a3b","modified":1473439600000},{"_id":"source/_h5/hdzq/images/20151201093005095.gif","hash":"95f55436f88e1daab146d7c1c712a1527fdfd739","modified":1473467869928},{"_id":"source/_h5/hdzq/images/20151207110211828.jpg","hash":"b05034a116deac30aa145b30aac22b2b79930987","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20151230155003482.jpg","hash":"f1b50e02d3cd74dff8106d6d5a6876a2cc3beb96","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160128172814091.gif","hash":"175dc4a5c90698eaf178b5308e4d26ff6e9f23b2","modified":1473467855110},{"_id":"source/_h5/hdzq/images/20160205105428076.png","hash":"552d7123dfde676a697f1d38ac3ad08ab2bae90a","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160222154926132.png","hash":"7c36a53ba0a552a4c27091adb32af310fb9ca7a4","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160325130834567.gif","hash":"774a7f07be7a642b8399e7558a926bfb9af23101","modified":1473467840864},{"_id":"source/_h5/hdzq/images/20160407150553850.gif","hash":"b718a00a4f90858b49e9557b0e9a12765cf8ee77","modified":1473467834874},{"_id":"source/_h5/hdzq/images/20160408150336450.jpg","hash":"61be8036fec5287df658657dded3979bd4f14cfb","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160426135018760.gif","hash":"b8748cff74bbd20d773a9b83402fed9aea8630d7","modified":1473467825534},{"_id":"source/_h5/hdzq/images/20160516155443188.gif","hash":"5b7abcb309dcd0c24b25b5c25bb765d8e833498c","modified":1473467820684},{"_id":"source/_h5/hdzq/images/20160523153900468.png","hash":"119dba6a7ee2f5e80ea6ae2b3814ba38de84615b","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160530152323512.png","hash":"ff052b9bc26264d71249f04de58544b737d9c702","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160606183224279.gif","hash":"d90df7a40b33aaa4ea146a40557a84e77e3d4455","modified":1473467784101},{"_id":"source/_h5/hdzq/images/20160620150137413.png","hash":"8d10aca3be8eb4cab2475abe8754b2f6bdbdbd3d","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160711163006867.png","hash":"afb53e508b20dd4ab6f4869d7abf077799ce1a72","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160801090748035.png","hash":"c1fea98173dd1809557c13cf857181c4ec5d00a0","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160801173132394.png","hash":"9c6d6b93ddcc6adf571a02af550331df99e66f4c","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160810142417425.png","hash":"7357330581a2dcdc7c986eb2369d55c67666d37f","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160822174759149.png","hash":"6439d4cbd8a818761a7363893ab15677d026ae9f","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160822183859325.png","hash":"108271216b86b2e406a7e5869fb0c32b565736f2","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160829134402643.png","hash":"e89a70257a42eae579431d07a4668b1204320756","modified":1473439602000},{"_id":"source/_h5/hdzq/images/20160909160115049.gif","hash":"4c9f6e981f7e3ab4f3ac168c38978dcba84a14d7","modified":1473467761414},{"_id":"source/_h5/hdzq/images/app_01.jpg","hash":"354397f169ddc1f35d7ad05ca6d118ea8f040d24","modified":1473439602000},{"_id":"source/_h5/hdzq/images/app_01.png","hash":"39580cef200f46d8fe9f49a56afeecc3bbb35b3f","modified":1473439602000},{"_id":"source/_h5/hdzq/images/app_02.png","hash":"a25044dc3bfbdf83ea41fadf3e6d55fc538903f2","modified":1473439602000},{"_id":"source/_h5/hdzq/images/app_03.png","hash":"9c02d5ead5f9252569d7f6c80fa6df7069f39f87","modified":1473439602000},{"_id":"source/_h5/hdzq/images/app_04.png","hash":"6be31d0afd0ecbfcab251e0994fe31a956a10b00","modified":1473439602000},{"_id":"source/_h5/hdzq/images/app_05.png","hash":"c78805d759d0cd74ff913050d953e75360e8c49a","modified":1473439602000},{"_id":"source/_h5/hdzq/images/dating.png","hash":"beacdf0d6b3e720332fee9f9bdd687c52833543c","modified":1473439602000},{"_id":"source/_h5/hdzq/images/dthd2over.png","hash":"d356de1c14652f6c828158db9d8d777637591a1b","modified":1473671338742},{"_id":"source/_h5/hdzq/images/kaixueover.gif","hash":"4f3887056ecec998fc8e17de7671bc65b9bb62c5","modified":1473674116126},{"_id":"source/_h5/hdzq/images/tjcs.png","hash":"73a5a185c9f27e0493c8986b12395d03f915766c","modified":1473732220150},{"_id":"themes/maupassant/maupassant/layout/_partial/after_footer.jade","hash":"7e69266c3d1b9d872617046ca0630998200072fd","modified":1475894458046},{"_id":"themes/maupassant/maupassant/layout/_partial/comments.jade","hash":"b3a0b0ce0642f2bfe9df94b075c0c2a083871e1b","modified":1475894458052},{"_id":"themes/maupassant/maupassant/layout/_partial/footer.jade","hash":"c917ed2d59600544b0d0b66fb6e13cbf01ac7d02","modified":1475894733522},{"_id":"themes/maupassant/maupassant/layout/_partial/helpers.jade","hash":"9e44f6d32f2449b4109c33118f8285fa2fc7b023","modified":1475894458061},{"_id":"themes/maupassant/maupassant/layout/_partial/mathjax.jade","hash":"ac6e3a92bf18ab6bbd0e041b6796b295bae963ee","modified":1475894458065},{"_id":"themes/maupassant/maupassant/layout/_partial/mathjax2.jade","hash":"234a792e64ba208fa97d2f99772ece23056a53ec","modified":1475894458068},{"_id":"themes/maupassant/maupassant/layout/_partial/paginator.jade","hash":"03ad0c49ae6f8a999ae35b38d08e25775f51f52a","modified":1475894458071},{"_id":"themes/maupassant/maupassant/layout/_partial/post_nav.jade","hash":"b11d9e6000449838b17f508429f29ffb60f53096","modified":1475894458075},{"_id":"themes/maupassant/maupassant/layout/_partial/tag.jade","hash":"6145b483b271bba05ad1db7c039fe352a768215b","modified":1475894458078},{"_id":"themes/maupassant/maupassant/layout/_partial/totop.jade","hash":"eb91a3baf9411188c7c8130f63a674f541ca9c81","modified":1475894458081},{"_id":"themes/maupassant/maupassant/layout/_widget/category.jade","hash":"7707b4c718a935882ee986d0bb0078e50cdbea64","modified":1475894458085},{"_id":"themes/maupassant/maupassant/layout/_widget/flagcounter.jade","hash":"403c25556d4887c4102b1559dff429d14ce2ae1d","modified":1476238169018},{"_id":"themes/maupassant/maupassant/layout/_widget/github.jade","hash":"45258655be4c8375afa160b1dd64ea671af33b88","modified":1476261080750},{"_id":"themes/maupassant/maupassant/layout/_widget/links.jade","hash":"2a1dd6a0e2befd073e3347347994d8dcd2047879","modified":1475894458089},{"_id":"themes/maupassant/maupassant/layout/_widget/recent_comments.jade","hash":"0b9e78e7f20bc69690e05f2e0c956bded9058a84","modified":1475894458093},{"_id":"themes/maupassant/maupassant/layout/_widget/recent_posts.jade","hash":"770b6c41cbf7969ed33adf87eec3be6f50a0911b","modified":1475894458124},{"_id":"themes/maupassant/maupassant/layout/_widget/search.jade","hash":"c5301ca7f2ec24d790fd7f35f69f8fd8acbdb725","modified":1475894458127},{"_id":"themes/maupassant/maupassant/layout/_widget/tag.jade","hash":"998efc912efdf7c929c7b84f406c45ba80717d78","modified":1476238426339},{"_id":"themes/maupassant/maupassant/source/css/jquery.fancybox.css","hash":"0d142e11e27e9de1a325c32369c42254101ddd34","modified":1475894458168},{"_id":"themes/maupassant/maupassant/source/css/style.scss","hash":"3a00b275276847b054e71ea2eee47f548cd55dbf","modified":1475894458174},{"_id":"themes/maupassant/maupassant/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1475894458175},{"_id":"themes/maupassant/maupassant/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1475894458177},{"_id":"themes/maupassant/maupassant/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1475894458178},{"_id":"themes/maupassant/maupassant/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1475894458180},{"_id":"themes/maupassant/maupassant/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1475894458181},{"_id":"themes/maupassant/maupassant/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1475894458182},{"_id":"themes/maupassant/maupassant/source/js/codeblock-resizer.js","hash":"c77270e684a60babc1abb7353e700ecdc5a66d30","modified":1475894458193},{"_id":"themes/maupassant/maupassant/source/js/fancybox.js","hash":"8a993c1c4ad40789d2960b682cb2130382a0f26a","modified":1475894458199},{"_id":"themes/maupassant/maupassant/source/js/search.js","hash":"9cf2337fe9af34055782880ac27b93713d74581f","modified":1475894458208},{"_id":"themes/maupassant/maupassant/source/js/share.js","hash":"bb6880e2e8e187b576daf326476f09b0907fbe14","modified":1475894458215},{"_id":"themes/maupassant/maupassant/source/js/smartresize.js","hash":"150ab1cad40d7ae081b0896b13f7d7cbac4e6338","modified":1475894458223},{"_id":"themes/maupassant/maupassant/source/js/totop.js","hash":"15de186b089c245fe60766d509b587919f05ff23","modified":1475894458229},{"_id":"public/uploads/appShare.js","hash":"149a6cd1525e30a05ddd4e5065bd155709d616d1","modified":1487560790613},{"_id":"public/uploads/分享.js","hash":"2779910814d3dcf639eedcf0049490d3787b4910","modified":1487560790615},{"_id":"public/about/index.html","hash":"3f79dfff71c1c73a5b81a6e0e17c62348d8fd2e4","modified":1487560790670},{"_id":"public/20161012/heroku/index.html","hash":"c8535f4126c3286047233d5525b22b8acc032a40","modified":1487560790673},{"_id":"public/20160929/react_map/index.html","hash":"dfdf5ff109b131140413bdddb7394171dcb9d1ca","modified":1487560790674},{"_id":"public/20160420/flagcount/index.html","hash":"513f3fa8f31db7e5bb132992a0fd50005137b6f0","modified":1487560790674},{"_id":"public/categories/Javascript/index.html","hash":"e6d71f156d560dc8971a6f70a33b51e518e147b3","modified":1487560790674},{"_id":"public/archives/index.html","hash":"cef2dd7a94cade510d64ae8133e2dcf21638fb40","modified":1487560790674},{"_id":"public/archives/2014/index.html","hash":"7b8dffa0b041b74bd36e988faea84ba796b0b779","modified":1487560790674},{"_id":"public/archives/2014/06/index.html","hash":"7b8dffa0b041b74bd36e988faea84ba796b0b779","modified":1487560790675},{"_id":"public/archives/2015/index.html","hash":"ed392704dc458c168c66f3850088fee50b60aaf8","modified":1487560790675},{"_id":"public/archives/2015/07/index.html","hash":"ed392704dc458c168c66f3850088fee50b60aaf8","modified":1487560790676},{"_id":"public/archives/2016/index.html","hash":"006ef315fd0c3644dc02c0ed2042aa4004f29677","modified":1487560790676},{"_id":"public/archives/2016/04/index.html","hash":"4154aa7ed2b675bd42cdc91d86926d494af01800","modified":1487560790676},{"_id":"public/archives/2016/09/index.html","hash":"c59b598221c8c5830c543f429780e95921f532ec","modified":1487560790677},{"_id":"public/archives/2016/10/index.html","hash":"74b5265b20ef40c3394fa41e8261f15af2a16143","modified":1487560790677},{"_id":"public/index.html","hash":"846d0998231a0a88a25cfa91afeb3273d63a2038","modified":1487560790677},{"_id":"public/tags/筆記/index.html","hash":"3f5164f54cff9edb8565b291b60e0d1a1160f5e2","modified":1487560790677},{"_id":"public/tags/Flagcounter/index.html","hash":"57ae14fac9c275935c67379a07a869a490bd3fa6","modified":1487560790677},{"_id":"public/tags/heroku/index.html","hash":"b2bc57eff6f200ade4c305e9852510320d0b22d7","modified":1487560790677},{"_id":"public/tags/git/index.html","hash":"a5c48850b56214add5c75e04962b917614daf66f","modified":1487560790677},{"_id":"public/tags/markdown/index.html","hash":"d307837a34a6d03a9f614652c4d011bc3dd5a10d","modified":1487560790677},{"_id":"public/tags/Javascript/index.html","hash":"e6d71f156d560dc8971a6f70a33b51e518e147b3","modified":1487560790677},{"_id":"public/tags/react/index.html","hash":"c2d977a2f4315f65318706f3b689132497a4fcc9","modified":1487560790677},{"_id":"public/tags/redis/index.html","hash":"917d9643c401691c3f3f41f2db0cd321b1541a51","modified":1487560790677},{"_id":"public/20160928/markdown/index.html","hash":"3694ca1031840120ef28084d47838f71c29c2135","modified":1487560790677},{"_id":"public/20150715/git_map/index.html","hash":"f9ce7de491ed01dacc2935823dfc195521d58ad2","modified":1487560790677},{"_id":"public/20140612/redis/index.html","hash":"6fe1d3f0d836088c5a7f2b084525d9c38514e1dd","modified":1487560790677},{"_id":"public/categories/CSS/index.html","hash":"aa769ac376e75167cac0a91d2cd97f68c1859159","modified":1487560790681},{"_id":"public/categories/Tools/index.html","hash":"cd1d7ac4a9b1e407bb6508bc3bb498e2dfaf2558","modified":1487560790681},{"_id":"public/archives/2017/index.html","hash":"894a0e573fd49b31db3e23c0f95cec938bd0fa1f","modified":1487560790681},{"_id":"public/archives/2017/02/index.html","hash":"894a0e573fd49b31db3e23c0f95cec938bd0fa1f","modified":1487560790682},{"_id":"public/tags/CSS/index.html","hash":"aa769ac376e75167cac0a91d2cd97f68c1859159","modified":1487560790683},{"_id":"public/tags/CSS3/index.html","hash":"92b93c80e72697e687d8a4cc3cddae318cd0fc7b","modified":1487560790683},{"_id":"public/tags/Tools/index.html","hash":"cd1d7ac4a9b1e407bb6508bc3bb498e2dfaf2558","modified":1487560790683},{"_id":"public/20170220/css3新特性/index.html","hash":"f99dd73952eb39b5f6eed9de96a0436de1b1ed4e","modified":1487560790683},{"_id":"public/uploads/favicon.ico","hash":"230b37cef533ca4c6fe324c87bd36b4a56986d32","modified":1487560790691},{"_id":"public/uploads/pic.png","hash":"230b37cef533ca4c6fe324c87bd36b4a56986d32","modified":1487560790691},{"_id":"public/uploads/nodejs1.jpg","hash":"83922ec4605cd6b93de9abfb1e8454c8b5856bea","modified":1487560790691},{"_id":"public/favicon.ico","hash":"230b37cef533ca4c6fe324c87bd36b4a56986d32","modified":1487560790692},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1487560790692},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1487560790692},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1487560790692},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1487560790693},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1487560790693},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1487560790693},{"_id":"public/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1487560790808},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1487560790808},{"_id":"public/js/search.js","hash":"53db2eb255dd40a412ed62ea7332ca5a22f7816f","modified":1487560790808},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1487560790808},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1487560790808},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1487560790808},{"_id":"public/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1487560790808},{"_id":"public/css/style.css","hash":"2afb6e7e24abf81c8b7b7d472fb0bb9b9a1eac16","modified":1487560790808}],"Category":[{"name":"CSS","_id":"cizdjaait0002r4l1zkd5f94r"},{"name":"Tools","_id":"cizdjaaj40007r4l1tdvzd4g7"},{"name":"Javascript","_id":"cizdjab6o001dr4l166zw9u1p"}],"Data":[],"Page":[{"title":"ABOUT","date":"2014-06-04T15:48:28.000Z","_content":"  <br />\n\n### 关于本站\n\n - 使用[Hexo](http://hexo.io/)搭建\n - 托管在[Github Pages](https://github.com)\n - 主题[maupassant](https://github.com/icylogic/maupassant-hexo)\n - 图床为[七牛云存储](www.qiniu.com)\n - 关于本站搭建可参考[这里](https://www.haomwei.com/technology/maupassant-hexo.html)\n\n","source":"about/index.md","raw":"title: ABOUT\ndate: 2014-06-04 23:48:28\n---\n  <br />\n\n### 关于本站\n\n - 使用[Hexo](http://hexo.io/)搭建\n - 托管在[Github Pages](https://github.com)\n - 主题[maupassant](https://github.com/icylogic/maupassant-hexo)\n - 图床为[七牛云存储](www.qiniu.com)\n - 关于本站搭建可参考[这里](https://www.haomwei.com/technology/maupassant-hexo.html)\n\n","updated":"2016-10-12T02:04:49.620Z","path":"about/index.html","comments":1,"layout":"page","_id":"cizdjab6k001ar4l1rr48r007","content":"<p>  <br></p>\n<h3 id=\"关于本站\"><a href=\"#关于本站\" class=\"headerlink\" title=\"关于本站\"></a>关于本站</h3><ul>\n<li>使用<a href=\"http://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>搭建</li>\n<li>托管在<a href=\"https://github.com\" target=\"_blank\" rel=\"external\">Github Pages</a></li>\n<li>主题<a href=\"https://github.com/icylogic/maupassant-hexo\" target=\"_blank\" rel=\"external\">maupassant</a></li>\n<li>图床为<a href=\"www.qiniu.com\">七牛云存储</a></li>\n<li>关于本站搭建可参考<a href=\"https://www.haomwei.com/technology/maupassant-hexo.html\" target=\"_blank\" rel=\"external\">这里</a></li>\n</ul>\n","excerpt":"","more":"<p>  <br /></p>\n<h3 id=\"关于本站\"><a href=\"#关于本站\" class=\"headerlink\" title=\"关于本站\"></a>关于本站</h3><ul>\n<li>使用<a href=\"http://hexo.io/\">Hexo</a>搭建</li>\n<li>托管在<a href=\"https://github.com\">Github Pages</a></li>\n<li>主题<a href=\"https://github.com/icylogic/maupassant-hexo\">maupassant</a></li>\n<li>图床为<a href=\"www.qiniu.com\">七牛云存储</a></li>\n<li>关于本站搭建可参考<a href=\"https://www.haomwei.com/technology/maupassant-hexo.html\">这里</a></li>\n</ul>\n"},{"_content":"var back = function() {\n  location.href = \"http://fundact.eastmoney.com/app2/html/\";\n};\n\nwindow.nativeBack = function() {\n\n  location.href = \"http://fundact.eastmoney.com/app2/html/\";\n};\n\nwindow.nativeShare = function() {\n  location.href = \"http://ttjj-huodong-weixin-share/\";\n\n};\n\nwindow.setCustomerNo = function(customerno) {\n  var href = location.href;\n\n  if (!!customerno && customerno.length > 10) {\n    if (href.indexOf(\"?\") > -1) {\n      location.href = href + \"&uid=\" + customerno;\n    } else {\n      location.href = href + \"?uid=\" + customerno;\n    }\n  }\n};\n\n$(document).ready(function() {\n  function fixHeadBar() {\n    location.href = 'emfundapp:headerInfo({\"name\":\"分享\",\"event\":\"window.nativeShare()\",\"backevent\":\"\",\"title\":\"' + document.title + '\",\"vifylogin\":\"\"})';\n  }\n\n  function showsharebar() {\n    var wxinfo = ({\n      \"resultCode\": 0,\n      \"resultMessage\": \"\",\n      \"datas\": {\n        \"Id\": 0,\n        \"Name\": \"\",\n        \"Title\": \"\",\n        \"Url\": \"\",\n        \"HasWx\": true,\n        \"NeedLogin\": false,\n        \"WxTitle\": wxtitle,\n        \"WxContent\": wxdesc,\n        \"WxUrl\": wxlink,\n        \"WxImage\": wximg,\n        \"WxBackUrl\": \"\"\n      }\n    });\n    location.href = 'emfundapp:wx_shareInfo(' + encodeURI(JSON.stringify(wxinfo.datas)) + ')';\n  }\n  if (location.href.toLowerCase().indexOf(\"isin=ttjj\") > -1 && navigator.userAgent.toLocaleLowerCase().indexOf(\"ttjj\") > -1) {\n    setTimeout(fixHeadBar, 50);\n    setTimeout(showsharebar, 300);\n  }\n\n});","source":"uploads/appShare.js","raw":"var back = function() {\n  location.href = \"http://fundact.eastmoney.com/app2/html/\";\n};\n\nwindow.nativeBack = function() {\n\n  location.href = \"http://fundact.eastmoney.com/app2/html/\";\n};\n\nwindow.nativeShare = function() {\n  location.href = \"http://ttjj-huodong-weixin-share/\";\n\n};\n\nwindow.setCustomerNo = function(customerno) {\n  var href = location.href;\n\n  if (!!customerno && customerno.length > 10) {\n    if (href.indexOf(\"?\") > -1) {\n      location.href = href + \"&uid=\" + customerno;\n    } else {\n      location.href = href + \"?uid=\" + customerno;\n    }\n  }\n};\n\n$(document).ready(function() {\n  function fixHeadBar() {\n    location.href = 'emfundapp:headerInfo({\"name\":\"分享\",\"event\":\"window.nativeShare()\",\"backevent\":\"\",\"title\":\"' + document.title + '\",\"vifylogin\":\"\"})';\n  }\n\n  function showsharebar() {\n    var wxinfo = ({\n      \"resultCode\": 0,\n      \"resultMessage\": \"\",\n      \"datas\": {\n        \"Id\": 0,\n        \"Name\": \"\",\n        \"Title\": \"\",\n        \"Url\": \"\",\n        \"HasWx\": true,\n        \"NeedLogin\": false,\n        \"WxTitle\": wxtitle,\n        \"WxContent\": wxdesc,\n        \"WxUrl\": wxlink,\n        \"WxImage\": wximg,\n        \"WxBackUrl\": \"\"\n      }\n    });\n    location.href = 'emfundapp:wx_shareInfo(' + encodeURI(JSON.stringify(wxinfo.datas)) + ')';\n  }\n  if (location.href.toLowerCase().indexOf(\"isin=ttjj\") > -1 && navigator.userAgent.toLocaleLowerCase().indexOf(\"ttjj\") > -1) {\n    setTimeout(fixHeadBar, 50);\n    setTimeout(showsharebar, 300);\n  }\n\n});","date":"2016-10-08T07:37:40.104Z","updated":"2016-10-08T07:37:40.104Z","path":"uploads/appShare.js","layout":"false","title":"","comments":1,"_id":"cizdjab6n001cr4l182538kqj","content":"var back = function() {\n  location.href = \"http://fundact.eastmoney.com/app2/html/\";\n};\n\nwindow.nativeBack = function() {\n\n  location.href = \"http://fundact.eastmoney.com/app2/html/\";\n};\n\nwindow.nativeShare = function() {\n  location.href = \"http://ttjj-huodong-weixin-share/\";\n\n};\n\nwindow.setCustomerNo = function(customerno) {\n  var href = location.href;\n\n  if (!!customerno && customerno.length > 10) {\n    if (href.indexOf(\"?\") > -1) {\n      location.href = href + \"&uid=\" + customerno;\n    } else {\n      location.href = href + \"?uid=\" + customerno;\n    }\n  }\n};\n\n$(document).ready(function() {\n  function fixHeadBar() {\n    location.href = 'emfundapp:headerInfo({\"name\":\"分享\",\"event\":\"window.nativeShare()\",\"backevent\":\"\",\"title\":\"' + document.title + '\",\"vifylogin\":\"\"})';\n  }\n\n  function showsharebar() {\n    var wxinfo = ({\n      \"resultCode\": 0,\n      \"resultMessage\": \"\",\n      \"datas\": {\n        \"Id\": 0,\n        \"Name\": \"\",\n        \"Title\": \"\",\n        \"Url\": \"\",\n        \"HasWx\": true,\n        \"NeedLogin\": false,\n        \"WxTitle\": wxtitle,\n        \"WxContent\": wxdesc,\n        \"WxUrl\": wxlink,\n        \"WxImage\": wximg,\n        \"WxBackUrl\": \"\"\n      }\n    });\n    location.href = 'emfundapp:wx_shareInfo(' + encodeURI(JSON.stringify(wxinfo.datas)) + ')';\n  }\n  if (location.href.toLowerCase().indexOf(\"isin=ttjj\") > -1 && navigator.userAgent.toLocaleLowerCase().indexOf(\"ttjj\") > -1) {\n    setTimeout(fixHeadBar, 50);\n    setTimeout(showsharebar, 300);\n  }\n\n});","excerpt":"","more":"var back = function() {\n  location.href = \"http://fundact.eastmoney.com/app2/html/\";\n};\n\nwindow.nativeBack = function() {\n\n  location.href = \"http://fundact.eastmoney.com/app2/html/\";\n};\n\nwindow.nativeShare = function() {\n  location.href = \"http://ttjj-huodong-weixin-share/\";\n\n};\n\nwindow.setCustomerNo = function(customerno) {\n  var href = location.href;\n\n  if (!!customerno && customerno.length > 10) {\n    if (href.indexOf(\"?\") > -1) {\n      location.href = href + \"&uid=\" + customerno;\n    } else {\n      location.href = href + \"?uid=\" + customerno;\n    }\n  }\n};\n\n$(document).ready(function() {\n  function fixHeadBar() {\n    location.href = 'emfundapp:headerInfo({\"name\":\"分享\",\"event\":\"window.nativeShare()\",\"backevent\":\"\",\"title\":\"' + document.title + '\",\"vifylogin\":\"\"})';\n  }\n\n  function showsharebar() {\n    var wxinfo = ({\n      \"resultCode\": 0,\n      \"resultMessage\": \"\",\n      \"datas\": {\n        \"Id\": 0,\n        \"Name\": \"\",\n        \"Title\": \"\",\n        \"Url\": \"\",\n        \"HasWx\": true,\n        \"NeedLogin\": false,\n        \"WxTitle\": wxtitle,\n        \"WxContent\": wxdesc,\n        \"WxUrl\": wxlink,\n        \"WxImage\": wximg,\n        \"WxBackUrl\": \"\"\n      }\n    });\n    location.href = 'emfundapp:wx_shareInfo(' + encodeURI(JSON.stringify(wxinfo.datas)) + ')';\n  }\n  if (location.href.toLowerCase().indexOf(\"isin=ttjj\") > -1 && navigator.userAgent.toLocaleLowerCase().indexOf(\"ttjj\") > -1) {\n    setTimeout(fixHeadBar, 50);\n    setTimeout(showsharebar, 300);\n  }\n\n});"},{"_content":"      \n    <script>\n        wxtitle = \"用时间换更好回报，长期理财买点定开债！\";\n        wxdesc = \"近三年平均收益超28%，定开债基近期成各路资金“秒杀”对象，来天天基金网购买费率全面一折！\";\n        wxlink = \"https://\" + location.host + \"/webapp/2016/dkz_app/wx.html\";\n        wximg = \"https://fundsc.eastmoney.com/static/wx/201609060002.gif\";\n    </script>\n\n\n    <script>\n        wxtitle =     \"本周固收产品热销排行榜\";\n        wxdesc =  \"安心稳赢，尽在固收！多种期限随心选择，每天限额抢购。\";\n        wxlink = \"https://\" + location.host + \"/webapp/2016/gushou_app/?isin=wx\";\n        wximg =   \"http://j5.dfcfw.com/app/20160805161427201.gif\";\n    </script>\n\n var wx_shareInfo = {\n        imgUrl: \"http://j5.dfcfw.com/app/20160805161427201.gif\",\n        link: location.href,\n        title: \"本周固收产品热销排行榜\",\n        desc: \"安心稳赢，尽在固收！多种期限随心选择，每天限额抢购。\"\n    };\n\n\n\n<script type=\"text/javascript\" src=\"https://fundsc.eastmoney.com/static/appshare.js\"></script>\n\n\n  <script>\n      var back = function() {\n          location.href = \"http://fundact.eastmoney.com/app2/html/\";\n      };\n\n      window.nativeBack = function() {\n\n          location.href = \"http://fundact.eastmoney.com/app2/html/\";\n      };\n\n      window.nativeShare = function() {\n          location.href = \"http://ttjj-huodong-weixin-share/\";\n\n      };\n\n      window.setCustomerNo = function(customerno) {\n          var href = location.href;\n\n          if (!!customerno && customerno.length > 10) {\n              if (href.indexOf(\"?\") > -1) {\n                  location.href = href + \"&uid=\" + customerno;\n              } else {\n                  location.href = href + \"?uid=\" + customerno;\n              }\n          }\n      };\n\n      $(document).ready(function() {\n          function fixHeadBar() {\n              location.href = 'emfundapp:headerInfo({\"name\":\"分享\",\"event\":\"window.nativeShare()\",\"backevent\":\"\",\"title\":\"' + document.title + '\",\"vifylogin\":\"\"})';\n          }\n\n          function showsharebar() {\n              var wxinfo = ({\n                  \"resultCode\": 0,\n                  \"resultMessage\": \"\",\n                  \"datas\": {\n                      \"Id\": 0,\n                      \"Name\": \"\",\n                      \"Title\": \"\",\n                      \"Url\": \"\",\n                      \"HasWx\": true,\n                      \"NeedLogin\": false,\n                      \"WxTitle\": wxtitle,\n                      \"WxContent\": wxdesc,\n                      \"WxUrl\": wxlink,\n                      \"WxImage\": wximg,\n                      \"WxBackUrl\": \"\"\n                  }\n              });\n              location.href = 'emfundapp:wx_shareInfo(' + encodeURI(JSON.stringify(wxinfo.datas)) + ')';\n          }\n          if (location.href.toLowerCase().indexOf(\"isin=ttjj\") > -1 && navigator.userAgent.toLocaleLowerCase().indexOf(\"ttjj\") > -1) {\n              setTimeout(fixHeadBar, 50);\n              setTimeout(showsharebar, 300);\n          }\n\n      });\n    </script>","source":"uploads/分享.js","raw":"      \n    <script>\n        wxtitle = \"用时间换更好回报，长期理财买点定开债！\";\n        wxdesc = \"近三年平均收益超28%，定开债基近期成各路资金“秒杀”对象，来天天基金网购买费率全面一折！\";\n        wxlink = \"https://\" + location.host + \"/webapp/2016/dkz_app/wx.html\";\n        wximg = \"https://fundsc.eastmoney.com/static/wx/201609060002.gif\";\n    </script>\n\n\n    <script>\n        wxtitle =     \"本周固收产品热销排行榜\";\n        wxdesc =  \"安心稳赢，尽在固收！多种期限随心选择，每天限额抢购。\";\n        wxlink = \"https://\" + location.host + \"/webapp/2016/gushou_app/?isin=wx\";\n        wximg =   \"http://j5.dfcfw.com/app/20160805161427201.gif\";\n    </script>\n\n var wx_shareInfo = {\n        imgUrl: \"http://j5.dfcfw.com/app/20160805161427201.gif\",\n        link: location.href,\n        title: \"本周固收产品热销排行榜\",\n        desc: \"安心稳赢，尽在固收！多种期限随心选择，每天限额抢购。\"\n    };\n\n\n\n<script type=\"text/javascript\" src=\"https://fundsc.eastmoney.com/static/appshare.js\"></script>\n\n\n  <script>\n      var back = function() {\n          location.href = \"http://fundact.eastmoney.com/app2/html/\";\n      };\n\n      window.nativeBack = function() {\n\n          location.href = \"http://fundact.eastmoney.com/app2/html/\";\n      };\n\n      window.nativeShare = function() {\n          location.href = \"http://ttjj-huodong-weixin-share/\";\n\n      };\n\n      window.setCustomerNo = function(customerno) {\n          var href = location.href;\n\n          if (!!customerno && customerno.length > 10) {\n              if (href.indexOf(\"?\") > -1) {\n                  location.href = href + \"&uid=\" + customerno;\n              } else {\n                  location.href = href + \"?uid=\" + customerno;\n              }\n          }\n      };\n\n      $(document).ready(function() {\n          function fixHeadBar() {\n              location.href = 'emfundapp:headerInfo({\"name\":\"分享\",\"event\":\"window.nativeShare()\",\"backevent\":\"\",\"title\":\"' + document.title + '\",\"vifylogin\":\"\"})';\n          }\n\n          function showsharebar() {\n              var wxinfo = ({\n                  \"resultCode\": 0,\n                  \"resultMessage\": \"\",\n                  \"datas\": {\n                      \"Id\": 0,\n                      \"Name\": \"\",\n                      \"Title\": \"\",\n                      \"Url\": \"\",\n                      \"HasWx\": true,\n                      \"NeedLogin\": false,\n                      \"WxTitle\": wxtitle,\n                      \"WxContent\": wxdesc,\n                      \"WxUrl\": wxlink,\n                      \"WxImage\": wximg,\n                      \"WxBackUrl\": \"\"\n                  }\n              });\n              location.href = 'emfundapp:wx_shareInfo(' + encodeURI(JSON.stringify(wxinfo.datas)) + ')';\n          }\n          if (location.href.toLowerCase().indexOf(\"isin=ttjj\") > -1 && navigator.userAgent.toLocaleLowerCase().indexOf(\"ttjj\") > -1) {\n              setTimeout(fixHeadBar, 50);\n              setTimeout(showsharebar, 300);\n          }\n\n      });\n    </script>","date":"2016-10-08T08:12:09.628Z","updated":"2016-10-08T08:12:09.628Z","path":"uploads/分享.js","layout":"false","title":"","comments":1,"_id":"cizdjab6q001fr4l195b0b4mb","content":"      \n    <script>\n        wxtitle = \"用时间换更好回报，长期理财买点定开债！\";\n        wxdesc = \"近三年平均收益超28%，定开债基近期成各路资金“秒杀”对象，来天天基金网购买费率全面一折！\";\n        wxlink = \"https://\" + location.host + \"/webapp/2016/dkz_app/wx.html\";\n        wximg = \"https://fundsc.eastmoney.com/static/wx/201609060002.gif\";\n    </script>\n\n\n    <script>\n        wxtitle =     \"本周固收产品热销排行榜\";\n        wxdesc =  \"安心稳赢，尽在固收！多种期限随心选择，每天限额抢购。\";\n        wxlink = \"https://\" + location.host + \"/webapp/2016/gushou_app/?isin=wx\";\n        wximg =   \"http://j5.dfcfw.com/app/20160805161427201.gif\";\n    </script>\n\n var wx_shareInfo = {\n        imgUrl: \"http://j5.dfcfw.com/app/20160805161427201.gif\",\n        link: location.href,\n        title: \"本周固收产品热销排行榜\",\n        desc: \"安心稳赢，尽在固收！多种期限随心选择，每天限额抢购。\"\n    };\n\n\n\n<script type=\"text/javascript\" src=\"https://fundsc.eastmoney.com/static/appshare.js\"></script>\n\n\n  <script>\n      var back = function() {\n          location.href = \"http://fundact.eastmoney.com/app2/html/\";\n      };\n\n      window.nativeBack = function() {\n\n          location.href = \"http://fundact.eastmoney.com/app2/html/\";\n      };\n\n      window.nativeShare = function() {\n          location.href = \"http://ttjj-huodong-weixin-share/\";\n\n      };\n\n      window.setCustomerNo = function(customerno) {\n          var href = location.href;\n\n          if (!!customerno && customerno.length > 10) {\n              if (href.indexOf(\"?\") > -1) {\n                  location.href = href + \"&uid=\" + customerno;\n              } else {\n                  location.href = href + \"?uid=\" + customerno;\n              }\n          }\n      };\n\n      $(document).ready(function() {\n          function fixHeadBar() {\n              location.href = 'emfundapp:headerInfo({\"name\":\"分享\",\"event\":\"window.nativeShare()\",\"backevent\":\"\",\"title\":\"' + document.title + '\",\"vifylogin\":\"\"})';\n          }\n\n          function showsharebar() {\n              var wxinfo = ({\n                  \"resultCode\": 0,\n                  \"resultMessage\": \"\",\n                  \"datas\": {\n                      \"Id\": 0,\n                      \"Name\": \"\",\n                      \"Title\": \"\",\n                      \"Url\": \"\",\n                      \"HasWx\": true,\n                      \"NeedLogin\": false,\n                      \"WxTitle\": wxtitle,\n                      \"WxContent\": wxdesc,\n                      \"WxUrl\": wxlink,\n                      \"WxImage\": wximg,\n                      \"WxBackUrl\": \"\"\n                  }\n              });\n              location.href = 'emfundapp:wx_shareInfo(' + encodeURI(JSON.stringify(wxinfo.datas)) + ')';\n          }\n          if (location.href.toLowerCase().indexOf(\"isin=ttjj\") > -1 && navigator.userAgent.toLocaleLowerCase().indexOf(\"ttjj\") > -1) {\n              setTimeout(fixHeadBar, 50);\n              setTimeout(showsharebar, 300);\n          }\n\n      });\n    </script>","excerpt":"","more":"      \n    <script>\n        wxtitle = \"用时间换更好回报，长期理财买点定开债！\";\n        wxdesc = \"近三年平均收益超28%，定开债基近期成各路资金“秒杀”对象，来天天基金网购买费率全面一折！\";\n        wxlink = \"https://\" + location.host + \"/webapp/2016/dkz_app/wx.html\";\n        wximg = \"https://fundsc.eastmoney.com/static/wx/201609060002.gif\";\n    </script>\n\n\n    <script>\n        wxtitle =     \"本周固收产品热销排行榜\";\n        wxdesc =  \"安心稳赢，尽在固收！多种期限随心选择，每天限额抢购。\";\n        wxlink = \"https://\" + location.host + \"/webapp/2016/gushou_app/?isin=wx\";\n        wximg =   \"http://j5.dfcfw.com/app/20160805161427201.gif\";\n    </script>\n\n var wx_shareInfo = {\n        imgUrl: \"http://j5.dfcfw.com/app/20160805161427201.gif\",\n        link: location.href,\n        title: \"本周固收产品热销排行榜\",\n        desc: \"安心稳赢，尽在固收！多种期限随心选择，每天限额抢购。\"\n    };\n\n\n\n<script type=\"text/javascript\" src=\"https://fundsc.eastmoney.com/static/appshare.js\"></script>\n\n\n  <script>\n      var back = function() {\n          location.href = \"http://fundact.eastmoney.com/app2/html/\";\n      };\n\n      window.nativeBack = function() {\n\n          location.href = \"http://fundact.eastmoney.com/app2/html/\";\n      };\n\n      window.nativeShare = function() {\n          location.href = \"http://ttjj-huodong-weixin-share/\";\n\n      };\n\n      window.setCustomerNo = function(customerno) {\n          var href = location.href;\n\n          if (!!customerno && customerno.length > 10) {\n              if (href.indexOf(\"?\") > -1) {\n                  location.href = href + \"&uid=\" + customerno;\n              } else {\n                  location.href = href + \"?uid=\" + customerno;\n              }\n          }\n      };\n\n      $(document).ready(function() {\n          function fixHeadBar() {\n              location.href = 'emfundapp:headerInfo({\"name\":\"分享\",\"event\":\"window.nativeShare()\",\"backevent\":\"\",\"title\":\"' + document.title + '\",\"vifylogin\":\"\"})';\n          }\n\n          function showsharebar() {\n              var wxinfo = ({\n                  \"resultCode\": 0,\n                  \"resultMessage\": \"\",\n                  \"datas\": {\n                      \"Id\": 0,\n                      \"Name\": \"\",\n                      \"Title\": \"\",\n                      \"Url\": \"\",\n                      \"HasWx\": true,\n                      \"NeedLogin\": false,\n                      \"WxTitle\": wxtitle,\n                      \"WxContent\": wxdesc,\n                      \"WxUrl\": wxlink,\n                      \"WxImage\": wximg,\n                      \"WxBackUrl\": \"\"\n                  }\n              });\n              location.href = 'emfundapp:wx_shareInfo(' + encodeURI(JSON.stringify(wxinfo.datas)) + ')';\n          }\n          if (location.href.toLowerCase().indexOf(\"isin=ttjj\") > -1 && navigator.userAgent.toLocaleLowerCase().indexOf(\"ttjj\") > -1) {\n              setTimeout(fixHeadBar, 50);\n              setTimeout(showsharebar, 300);\n          }\n\n      });\n    </script>"}],"Post":[{"title":"css3新特性","date":"2017-02-20T03:18:54.000Z","_content":"\n\n###box-shadow\n  `x轴偏移量  y轴偏移量 【阴影模糊半径】 【阴影扩展班级】 【阴影颜色】 【投影方式】\n                           inset outset（默认）`\n###border-image\n  `repeat（重复） round（平铺） stretch（拉伸）  `\n\n###linear-gradient/radial-gradient\n```linear-gradient(to bottom,#ff,#999)```\n`渐变类型 (渐变方向，颜色起始点和结束点)`\n> |    角度    |    用英文    |    作用    |\n | :------------: | :-------------:|: --------------------: |\n |    0deg    |    to top    |    从下向上    |\n |    90deg    |    to right |    从左向右    |\n |    180deg    |    to bottom|    从上向下    |\n |    270deg    |    to left  |    从右向左    |\n |         |    to top left  |    从右下角向左上角    |\n  |      |    to top right |    从左下角到右上角    |\n\n###text-overflow/word-wrap\n```text-overflow:clip | ellipsis ```\n`clip 剪切`\n`ellipsis 显示省略标记`\n>但是text-overflow只是用来说明文字溢出时用什么方式显示，要实现溢出时产生省略号的效果，还须定义强制文本在一行内显示（white-space:nowrap）及溢出内容为隐藏（overflow:hidden），只有这样才能实现溢出文本显示省略号的效果，代码如下：\n```\ntext-overflow:ellipsis; \noverflow:hidden; /*溢出内容隐藏*/\nwhite-space:nowrap;  /*强制在一行内显示*/\n```\n\n```word-wrap:normal | break-word```\n`normal 控制连续文本换行`\n`break-word 内容在边界内换行`\n\n###@font-face\n```\n@font-face{\n    font-family : 字体名字;\n    src : 字体文件在服务器上的相对或者绝对路径;\n}\n```\n\n###text-shadow\n```text-shadow: X-Offset Y-Offset blur color```\n`X-Offset 阴影水平偏移距离 正值向右`\n`Y-Offset 阴影垂直偏移距离 正值向下`\n`Blur 是指阴影的模糊程度，其值不能是负值，如果值越大，阴影越模糊，反之阴影越清晰，如果不需要阴影模糊可以将Blur值设置为0；`\n`Color 颜色`\n```text-shadow: 0 1px 1px #fff```\n\n###background-origin 原始起始位置\n```background-origin : border-box | padding-box | content-box ```\n`边框 | 内边距（默认） | 内容区域`\n![ss](http://img.mukewang.com/531003de0001166903660166.jpg)\n\n###background-clip 背景图剪切\n```background-clip : border-box | padding-box | content-box | no-clip```\n`边框（默认） | 内填充 | 内容区域 `\n\n###background-size 背景图大小\n```background-size : auto | <长度值> | <百分比> | cover | contain ```\n>* auto 默认值\n* <长度值> 宽度  等比缩放\n* <百分比> 0~100% \n* cover **覆盖** 填满整个容器\n* contain **容纳** 紧贴容器边缘\n\n###multiple backgrounds 多重背景\n```\n    background-image: url(http://img.mukewang.com/54cf2365000140e600740095.jpg),\n                      url(http://img.mukewang.com/54cf238a0001728d00740095.jpg),\n                      url(http://img.mukewang.com/54cf23b60001fd9700740096.jpg);\n    background-position: left top, 100px 0, 200px 0;\n    background-repeat: no-repeat, no-repeat, no-repeat;\n```\n\n###导航菜单\n```\n\t/*使用伪元素制作导航列表项分隔线*/\n\t.nav li:after{\n\t\t    content:'|';\n\t\t    margin-left:10px;\n\t\t    color:#fff;\n\t\t}\n```\n```\n\t.nav li{\n\t\t   background:linear-gradient(to left,#000,#000,#000) no-repeat right/1px 15px }\n\t\t}\n```\n```\n.nav li:after{\n          content:\"\";\n          position:absolute;\n          right:0px;\n          top:16px;\n          height:19px;\n          width:1px;    \n    \t  background:linear-gradient(to top,red, orange,yellow,green,blue,indigo,violet)   \n        }\n```\n\n\n###属性选择器\n>|属性选择器|描述|\n|:---------------------:|:-----------------------------------------:|\n|E[att^=\"val\"]| 以val开头 |\n|E[att$=\"val\"]| 以val结尾 |\n|E[att*=\"val\"]| 以val包含|\n\n###结构性伪类选择器--root\n`根选择器  匹配元素所在文档的根元素 也就是<html>`","source":"_posts/css3新特性.md","raw":"---\ntitle: css3新特性\ndate: 2017-02-20 11:18:54\ncategories: CSS\ntags: [CSS, 筆記,CSS3]\n---\n\n\n###box-shadow\n  `x轴偏移量  y轴偏移量 【阴影模糊半径】 【阴影扩展班级】 【阴影颜色】 【投影方式】\n                           inset outset（默认）`\n###border-image\n  `repeat（重复） round（平铺） stretch（拉伸）  `\n\n###linear-gradient/radial-gradient\n```linear-gradient(to bottom,#ff,#999)```\n`渐变类型 (渐变方向，颜色起始点和结束点)`\n> |    角度    |    用英文    |    作用    |\n | :------------: | :-------------:|: --------------------: |\n |    0deg    |    to top    |    从下向上    |\n |    90deg    |    to right |    从左向右    |\n |    180deg    |    to bottom|    从上向下    |\n |    270deg    |    to left  |    从右向左    |\n |         |    to top left  |    从右下角向左上角    |\n  |      |    to top right |    从左下角到右上角    |\n\n###text-overflow/word-wrap\n```text-overflow:clip | ellipsis ```\n`clip 剪切`\n`ellipsis 显示省略标记`\n>但是text-overflow只是用来说明文字溢出时用什么方式显示，要实现溢出时产生省略号的效果，还须定义强制文本在一行内显示（white-space:nowrap）及溢出内容为隐藏（overflow:hidden），只有这样才能实现溢出文本显示省略号的效果，代码如下：\n```\ntext-overflow:ellipsis; \noverflow:hidden; /*溢出内容隐藏*/\nwhite-space:nowrap;  /*强制在一行内显示*/\n```\n\n```word-wrap:normal | break-word```\n`normal 控制连续文本换行`\n`break-word 内容在边界内换行`\n\n###@font-face\n```\n@font-face{\n    font-family : 字体名字;\n    src : 字体文件在服务器上的相对或者绝对路径;\n}\n```\n\n###text-shadow\n```text-shadow: X-Offset Y-Offset blur color```\n`X-Offset 阴影水平偏移距离 正值向右`\n`Y-Offset 阴影垂直偏移距离 正值向下`\n`Blur 是指阴影的模糊程度，其值不能是负值，如果值越大，阴影越模糊，反之阴影越清晰，如果不需要阴影模糊可以将Blur值设置为0；`\n`Color 颜色`\n```text-shadow: 0 1px 1px #fff```\n\n###background-origin 原始起始位置\n```background-origin : border-box | padding-box | content-box ```\n`边框 | 内边距（默认） | 内容区域`\n![ss](http://img.mukewang.com/531003de0001166903660166.jpg)\n\n###background-clip 背景图剪切\n```background-clip : border-box | padding-box | content-box | no-clip```\n`边框（默认） | 内填充 | 内容区域 `\n\n###background-size 背景图大小\n```background-size : auto | <长度值> | <百分比> | cover | contain ```\n>* auto 默认值\n* <长度值> 宽度  等比缩放\n* <百分比> 0~100% \n* cover **覆盖** 填满整个容器\n* contain **容纳** 紧贴容器边缘\n\n###multiple backgrounds 多重背景\n```\n    background-image: url(http://img.mukewang.com/54cf2365000140e600740095.jpg),\n                      url(http://img.mukewang.com/54cf238a0001728d00740095.jpg),\n                      url(http://img.mukewang.com/54cf23b60001fd9700740096.jpg);\n    background-position: left top, 100px 0, 200px 0;\n    background-repeat: no-repeat, no-repeat, no-repeat;\n```\n\n###导航菜单\n```\n\t/*使用伪元素制作导航列表项分隔线*/\n\t.nav li:after{\n\t\t    content:'|';\n\t\t    margin-left:10px;\n\t\t    color:#fff;\n\t\t}\n```\n```\n\t.nav li{\n\t\t   background:linear-gradient(to left,#000,#000,#000) no-repeat right/1px 15px }\n\t\t}\n```\n```\n.nav li:after{\n          content:\"\";\n          position:absolute;\n          right:0px;\n          top:16px;\n          height:19px;\n          width:1px;    \n    \t  background:linear-gradient(to top,red, orange,yellow,green,blue,indigo,violet)   \n        }\n```\n\n\n###属性选择器\n>|属性选择器|描述|\n|:---------------------:|:-----------------------------------------:|\n|E[att^=\"val\"]| 以val开头 |\n|E[att$=\"val\"]| 以val结尾 |\n|E[att*=\"val\"]| 以val包含|\n\n###结构性伪类选择器--root\n`根选择器  匹配元素所在文档的根元素 也就是<html>`","slug":"css3新特性","published":1,"updated":"2017-02-20T03:19:28.456Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizdjaaim0000r4l13p6t4x9g","content":"<p>###box-shadow<br>  <code>x轴偏移量  y轴偏移量 【阴影模糊半径】 【阴影扩展班级】 【阴影颜色】 【投影方式】\n                           inset outset（默认）</code></p>\n<p>###border-image<br>  <code>repeat（重复） round（平铺） stretch（拉伸）</code></p>\n<p>###linear-gradient/radial-gradient<br><figure class=\"highlight plain\"><figcaption><span>bottom,#ff,#999)```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">`渐变类型 (渐变方向，颜色起始点和结束点)`</div><div class=\"line\">&gt; |    角度    |    用英文    |    作用    |</div><div class=\"line\"> | :------------: | :-------------:|: --------------------: |</div><div class=\"line\"> |    0deg    |    to top    |    从下向上    |</div><div class=\"line\"> |    90deg    |    to right |    从左向右    |</div><div class=\"line\"> |    180deg    |    to bottom|    从上向下    |</div><div class=\"line\"> |    270deg    |    to left  |    从右向左    |</div><div class=\"line\"> |         |    to top left  |    从右下角向左上角    |</div><div class=\"line\">  |      |    to top right |    从左下角到右上角    |</div><div class=\"line\"></div><div class=\"line\">###text-overflow/word-wrap</div><div class=\"line\">```text-overflow:clip | ellipsis</div></pre></td></tr></table></figure></p>\n<p><code>clip 剪切</code><br><code>ellipsis 显示省略标记</code></p>\n<blockquote>\n<p>但是text-overflow只是用来说明文字溢出时用什么方式显示，要实现溢出时产生省略号的效果，还须定义强制文本在一行内显示（white-space:nowrap）及溢出内容为隐藏（overflow:hidden），只有这样才能实现溢出文本显示省略号的效果，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">text-overflow:ellipsis; </div><div class=\"line\">overflow:hidden; /*溢出内容隐藏*/</div><div class=\"line\">white-space:nowrap;  /*强制在一行内显示*/</div></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"highlight plain\"><figcaption><span>| break-word```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">`normal 控制连续文本换行`</div><div class=\"line\">`break-word 内容在边界内换行`</div><div class=\"line\"></div><div class=\"line\">###@font-face</div></pre></td></tr></table></figure>\n<p>@font-face{<br>    font-family : 字体名字;<br>    src : 字体文件在服务器上的相对或者绝对路径;<br>}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">###text-shadow</div><div class=\"line\">```text-shadow: X-Offset Y-Offset blur color</div></pre></td></tr></table></figure></p>\n<p><code>X-Offset 阴影水平偏移距离 正值向右</code><br><code>Y-Offset 阴影垂直偏移距离 正值向下</code><br><code>Blur 是指阴影的模糊程度，其值不能是负值，如果值越大，阴影越模糊，反之阴影越清晰，如果不需要阴影模糊可以将Blur值设置为0；</code><br><code>Color 颜色</code><br><figure class=\"highlight plain\"><figcaption><span>0 1px 1px #fff```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">###background-origin 原始起始位置</div><div class=\"line\">```background-origin : border-box | padding-box | content-box</div></pre></td></tr></table></figure></p>\n<p><code>边框 | 内边距（默认） | 内容区域</code><br><img src=\"http://img.mukewang.com/531003de0001166903660166.jpg\" alt=\"ss\"></p>\n<p>###background-clip 背景图剪切<br><figure class=\"highlight plain\"><figcaption><span>: border-box | padding-box | content-box | no-clip```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">`边框（默认） | 内填充 | 内容区域 `</div><div class=\"line\"></div><div class=\"line\">###background-size 背景图大小</div><div class=\"line\">```background-size : auto | &lt;长度值&gt; | &lt;百分比&gt; | cover | contain</div></pre></td></tr></table></figure></p>\n<blockquote>\n<ul>\n<li>auto 默认值</li>\n<li>&lt;长度值&gt; 宽度  等比缩放</li>\n<li>&lt;百分比&gt; 0~100% </li>\n<li>cover <strong>覆盖</strong> 填满整个容器</li>\n<li>contain <strong>容纳</strong> 紧贴容器边缘</li>\n</ul>\n</blockquote>\n<p>###multiple backgrounds 多重背景<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">background-image: url(http://img.mukewang.com/54cf2365000140e600740095.jpg),</div><div class=\"line\">                  url(http://img.mukewang.com/54cf238a0001728d00740095.jpg),</div><div class=\"line\">                  url(http://img.mukewang.com/54cf23b60001fd9700740096.jpg);</div><div class=\"line\">background-position: left top, 100px 0, 200px 0;</div><div class=\"line\">background-repeat: no-repeat, no-repeat, no-repeat;</div></pre></td></tr></table></figure></p>\n<p>###导航菜单<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*使用伪元素制作导航列表项分隔线*/</div><div class=\"line\">.nav li:after&#123;</div><div class=\"line\">\t    content:&apos;|&apos;;</div><div class=\"line\">\t    margin-left:10px;</div><div class=\"line\">\t    color:#fff;</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.nav li&#123;</div><div class=\"line\">\t   background:linear-gradient(to left,#000,#000,#000) no-repeat right/1px 15px &#125;</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">.nav li:after&#123;</div><div class=\"line\">          content:&quot;&quot;;</div><div class=\"line\">          position:absolute;</div><div class=\"line\">          right:0px;</div><div class=\"line\">          top:16px;</div><div class=\"line\">          height:19px;</div><div class=\"line\">          width:1px;    </div><div class=\"line\">    \t  background:linear-gradient(to top,red, orange,yellow,green,blue,indigo,violet)   </div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<p>###属性选择器</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">属性选择器</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">E[att^=”val”]</td>\n<td style=\"text-align:center\">以val开头</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">E[att$=”val”]</td>\n<td style=\"text-align:center\">以val结尾</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">E[att*=”val”]</td>\n<td style=\"text-align:center\">以val包含</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>###结构性伪类选择器–root<br><code>根选择器  匹配元素所在文档的根元素 也就是&lt;html&gt;</code></p>\n","excerpt":"","more":"<p>###box-shadow<br>  <code>x轴偏移量  y轴偏移量 【阴影模糊半径】 【阴影扩展班级】 【阴影颜色】 【投影方式】\n                           inset outset（默认）</code></p>\n<p>###border-image<br>  <code>repeat（重复） round（平铺） stretch（拉伸）</code></p>\n<p>###linear-gradient/radial-gradient<br><figure class=\"highlight plain\"><figcaption><span>bottom,#ff,#999)```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">`渐变类型 (渐变方向，颜色起始点和结束点)`</div><div class=\"line\">&gt; |    角度    |    用英文    |    作用    |</div><div class=\"line\"> | :------------: | :-------------:|: --------------------: |</div><div class=\"line\"> |    0deg    |    to top    |    从下向上    |</div><div class=\"line\"> |    90deg    |    to right |    从左向右    |</div><div class=\"line\"> |    180deg    |    to bottom|    从上向下    |</div><div class=\"line\"> |    270deg    |    to left  |    从右向左    |</div><div class=\"line\"> |         |    to top left  |    从右下角向左上角    |</div><div class=\"line\">  |      |    to top right |    从左下角到右上角    |</div><div class=\"line\"></div><div class=\"line\">###text-overflow/word-wrap</div><div class=\"line\">```text-overflow:clip | ellipsis</div></pre></td></tr></table></figure></p>\n<p><code>clip 剪切</code><br><code>ellipsis 显示省略标记</code></p>\n<blockquote>\n<p>但是text-overflow只是用来说明文字溢出时用什么方式显示，要实现溢出时产生省略号的效果，还须定义强制文本在一行内显示（white-space:nowrap）及溢出内容为隐藏（overflow:hidden），只有这样才能实现溢出文本显示省略号的效果，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">text-overflow:ellipsis; </div><div class=\"line\">overflow:hidden; /*溢出内容隐藏*/</div><div class=\"line\">white-space:nowrap;  /*强制在一行内显示*/</div></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"highlight plain\"><figcaption><span>| break-word```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">`normal 控制连续文本换行`</div><div class=\"line\">`break-word 内容在边界内换行`</div><div class=\"line\"></div><div class=\"line\">###@font-face</div></pre></td></tr></table></figure>\n<p>@font-face{<br>    font-family : 字体名字;<br>    src : 字体文件在服务器上的相对或者绝对路径;<br>}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">###text-shadow</div><div class=\"line\">```text-shadow: X-Offset Y-Offset blur color</div></pre></td></tr></table></figure></p>\n<p><code>X-Offset 阴影水平偏移距离 正值向右</code><br><code>Y-Offset 阴影垂直偏移距离 正值向下</code><br><code>Blur 是指阴影的模糊程度，其值不能是负值，如果值越大，阴影越模糊，反之阴影越清晰，如果不需要阴影模糊可以将Blur值设置为0；</code><br><code>Color 颜色</code><br><figure class=\"highlight plain\"><figcaption><span>0 1px 1px #fff```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">###background-origin 原始起始位置</div><div class=\"line\">```background-origin : border-box | padding-box | content-box</div></pre></td></tr></table></figure></p>\n<p><code>边框 | 内边距（默认） | 内容区域</code><br><img src=\"http://img.mukewang.com/531003de0001166903660166.jpg\" alt=\"ss\"></p>\n<p>###background-clip 背景图剪切<br><figure class=\"highlight plain\"><figcaption><span>: border-box | padding-box | content-box | no-clip```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">`边框（默认） | 内填充 | 内容区域 `</div><div class=\"line\"></div><div class=\"line\">###background-size 背景图大小</div><div class=\"line\">```background-size : auto | &lt;长度值&gt; | &lt;百分比&gt; | cover | contain</div></pre></td></tr></table></figure></p>\n<blockquote>\n<ul>\n<li>auto 默认值</li>\n<li>&lt;长度值&gt; 宽度  等比缩放</li>\n<li>&lt;百分比&gt; 0~100% </li>\n<li>cover <strong>覆盖</strong> 填满整个容器</li>\n<li>contain <strong>容纳</strong> 紧贴容器边缘</li>\n</ul>\n</blockquote>\n<p>###multiple backgrounds 多重背景<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">background-image: url(http://img.mukewang.com/54cf2365000140e600740095.jpg),</div><div class=\"line\">                  url(http://img.mukewang.com/54cf238a0001728d00740095.jpg),</div><div class=\"line\">                  url(http://img.mukewang.com/54cf23b60001fd9700740096.jpg);</div><div class=\"line\">background-position: left top, 100px 0, 200px 0;</div><div class=\"line\">background-repeat: no-repeat, no-repeat, no-repeat;</div></pre></td></tr></table></figure></p>\n<p>###导航菜单<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*使用伪元素制作导航列表项分隔线*/</div><div class=\"line\">.nav li:after&#123;</div><div class=\"line\">\t    content:&apos;|&apos;;</div><div class=\"line\">\t    margin-left:10px;</div><div class=\"line\">\t    color:#fff;</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.nav li&#123;</div><div class=\"line\">\t   background:linear-gradient(to left,#000,#000,#000) no-repeat right/1px 15px &#125;</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">.nav li:after&#123;</div><div class=\"line\">          content:&quot;&quot;;</div><div class=\"line\">          position:absolute;</div><div class=\"line\">          right:0px;</div><div class=\"line\">          top:16px;</div><div class=\"line\">          height:19px;</div><div class=\"line\">          width:1px;    </div><div class=\"line\">    \t  background:linear-gradient(to top,red, orange,yellow,green,blue,indigo,violet)   </div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<p>###属性选择器</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">属性选择器</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">E[att^=”val”]</td>\n<td style=\"text-align:center\">以val开头</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">E[att$=”val”]</td>\n<td style=\"text-align:center\">以val结尾</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">E[att*=”val”]</td>\n<td style=\"text-align:center\">以val包含</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>###结构性伪类选择器–root<br><code>根选择器  匹配元素所在文档的根元素 也就是&lt;html&gt;</code></p>\n"},{"title":"Flagcounter","date":"2016-04-20T11:24:27.000Z","_content":"\n无意间发现一个很好玩的东西——[**flagcounter**](http://s05.flagcounter.com/index.html), 这个小工具可以帮你统计你的博客访问量及访客的国家分布，展示效果请向右看，另外使用起来也是炒鸡简单的哦。\n\n<!-- more -->\n\n![](http://s05.flagcounter.com/css/images/logo.gif)\n\n\n如果你想类似于我的博客这样将flagcount作为一个widget放置在博客右侧的区域，这就需要你添加一个小挂件。打开maupassant主题根目录的_config.yml配置文件，找到widgets的设置，会发现原主题已经提供了六种可用的小挂件，就在这里再添加一个flagcounter的widget即可。然后需要为新加的widget添加一个jade文件，从主题根目录进入到layout然后打开_widget文件夹，新建一个flagcounter.jade的文件，复制以下内容保存。\n\n```html\n.widget\n.widget-title\ni(class='fa fa-bar-chart')= ' ' + __('visitors')\n\\<a href=\"http://s05.flagcounter.com/more/quj\">\\<img src=\"http://s05.flagcounter.com/count2/quj/bg_FFFFFF/txt_000000/border_CCCCCC/columns_2/maxflags_10/viewers_0/labels_1/pageviews_1/flags_0/percent_0/\" alt=\"Count you in\" border=\"0\" style=\"margin-top:10px;\"></a>\n```\n\n别着急关闭文件，里面<\\a>标签的内容需要换成你自己的，打开[flagcounter官网](http://s05.flagcounter.com/index.html)，设置自己喜欢的样式，点击GET YOUR FLAG COUNTER并填写你的email之后就可以得到类似的一段代码，复制替换到flagcounter.jade文件保存关闭。done！\n\n","source":"_posts/flagcount.md","raw":"title: Flagcounter\ncategories: Tools\ntags: [Tools, 筆記,Flagcounter]\ndate: 2016-04-20 19:24:27\n---\n\n无意间发现一个很好玩的东西——[**flagcounter**](http://s05.flagcounter.com/index.html), 这个小工具可以帮你统计你的博客访问量及访客的国家分布，展示效果请向右看，另外使用起来也是炒鸡简单的哦。\n\n<!-- more -->\n\n![](http://s05.flagcounter.com/css/images/logo.gif)\n\n\n如果你想类似于我的博客这样将flagcount作为一个widget放置在博客右侧的区域，这就需要你添加一个小挂件。打开maupassant主题根目录的_config.yml配置文件，找到widgets的设置，会发现原主题已经提供了六种可用的小挂件，就在这里再添加一个flagcounter的widget即可。然后需要为新加的widget添加一个jade文件，从主题根目录进入到layout然后打开_widget文件夹，新建一个flagcounter.jade的文件，复制以下内容保存。\n\n```html\n.widget\n.widget-title\ni(class='fa fa-bar-chart')= ' ' + __('visitors')\n\\<a href=\"http://s05.flagcounter.com/more/quj\">\\<img src=\"http://s05.flagcounter.com/count2/quj/bg_FFFFFF/txt_000000/border_CCCCCC/columns_2/maxflags_10/viewers_0/labels_1/pageviews_1/flags_0/percent_0/\" alt=\"Count you in\" border=\"0\" style=\"margin-top:10px;\"></a>\n```\n\n别着急关闭文件，里面<\\a>标签的内容需要换成你自己的，打开[flagcounter官网](http://s05.flagcounter.com/index.html)，设置自己喜欢的样式，点击GET YOUR FLAG COUNTER并填写你的email之后就可以得到类似的一段代码，复制替换到flagcounter.jade文件保存关闭。done！\n\n","slug":"flagcount","published":1,"updated":"2017-02-20T03:19:38.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizdjaaiq0001r4l1w4xi5ajf","content":"<p>无意间发现一个很好玩的东西——<a href=\"http://s05.flagcounter.com/index.html\" target=\"_blank\" rel=\"external\"><strong>flagcounter</strong></a>, 这个小工具可以帮你统计你的博客访问量及访客的国家分布，展示效果请向右看，另外使用起来也是炒鸡简单的哦。</p>\n<a id=\"more\"></a>\n<p><img src=\"http://s05.flagcounter.com/css/images/logo.gif\" alt=\"\"></p>\n<p>如果你想类似于我的博客这样将flagcount作为一个widget放置在博客右侧的区域，这就需要你添加一个小挂件。打开maupassant主题根目录的_config.yml配置文件，找到widgets的设置，会发现原主题已经提供了六种可用的小挂件，就在这里再添加一个flagcounter的widget即可。然后需要为新加的widget添加一个jade文件，从主题根目录进入到layout然后打开_widget文件夹，新建一个flagcounter.jade的文件，复制以下内容保存。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.widget</div><div class=\"line\">.widget-title</div><div class=\"line\">i(class='fa fa-bar-chart')= ' ' + __('visitors')</div><div class=\"line\">\\<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://s05.flagcounter.com/more/quj\"</span>&gt;</span>\\<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://s05.flagcounter.com/count2/quj/bg_FFFFFF/txt_000000/border_CCCCCC/columns_2/maxflags_10/viewers_0/labels_1/pageviews_1/flags_0/percent_0/\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"Count you in\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top:10px;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>别着急关闭文件，里面&lt;\\a&gt;标签的内容需要换成你自己的，打开<a href=\"http://s05.flagcounter.com/index.html\" target=\"_blank\" rel=\"external\">flagcounter官网</a>，设置自己喜欢的样式，点击GET YOUR FLAG COUNTER并填写你的email之后就可以得到类似的一段代码，复制替换到flagcounter.jade文件保存关闭。done！</p>\n","excerpt":"<p>无意间发现一个很好玩的东西——<a href=\"http://s05.flagcounter.com/index.html\"><strong>flagcounter</strong></a>, 这个小工具可以帮你统计你的博客访问量及访客的国家分布，展示效果请向右看，另外使用起来也是炒鸡简单的哦。</p>","more":"<p><img src=\"http://s05.flagcounter.com/css/images/logo.gif\" alt=\"\"></p>\n<p>如果你想类似于我的博客这样将flagcount作为一个widget放置在博客右侧的区域，这就需要你添加一个小挂件。打开maupassant主题根目录的_config.yml配置文件，找到widgets的设置，会发现原主题已经提供了六种可用的小挂件，就在这里再添加一个flagcounter的widget即可。然后需要为新加的widget添加一个jade文件，从主题根目录进入到layout然后打开_widget文件夹，新建一个flagcounter.jade的文件，复制以下内容保存。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.widget</div><div class=\"line\">.widget-title</div><div class=\"line\">i(class='fa fa-bar-chart')= ' ' + __('visitors')</div><div class=\"line\">\\<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://s05.flagcounter.com/more/quj\"</span>&gt;</span>\\<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://s05.flagcounter.com/count2/quj/bg_FFFFFF/txt_000000/border_CCCCCC/columns_2/maxflags_10/viewers_0/labels_1/pageviews_1/flags_0/percent_0/\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"Count you in\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top:10px;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>别着急关闭文件，里面&lt;\\a&gt;标签的内容需要换成你自己的，打开<a href=\"http://s05.flagcounter.com/index.html\">flagcounter官网</a>，设置自己喜欢的样式，点击GET YOUR FLAG COUNTER并填写你的email之后就可以得到类似的一段代码，复制替换到flagcounter.jade文件保存关闭。done！</p>"},{"title":"heroku","date":"2016-10-12T01:45:34.000Z","_content":"\nHeroku 免费云空间\n\n<!-- more -->\n-----\n\n\n## 准备\n    必须要用git\n## 注册账户\n[hero官网](https://www.heroku.com)\n\n\n\n\n## 安装Heroku Toolbelt\n[Heroku Toolbelt](https://toolbelt.heroku.com/)\n\n  Heroku Toolbelt是用于创建、管理Heroku上apps的命令行工具\n\n**heroku** 的命令行客户端将被安装到`/usr/local/heroku`，同时，``/usr/local/heroku/bin``将被添加到你的PATH环境变量\n\n下载并安装完成后，在 shell 中输入`heroku login`，用创建`heroku`账号的`email`和`密码`登陆\n```\n    $ heroku login\n    Enter your Heroku credentials.\n    Email:            adam@example.com\n    Password (typing will be hidden):\n    Authentication successful.\n\n```\n*把你的 SSH 公钥上传到 Heroku，这一点很重要,上传后才能使用 git push 命令。正常情况下,login 命令会自动创建并上传 SSH 公钥。*\n\n## 上传应用\n>在工程的根目录下新建一个 **Procfile** 文件，添加如下内容：\n\n```\nweb: node app.js\n```\n\n- 到应用面板页勾选 **web node app.js** ，然后点击 **Apply Changes** 启动应用。\n\n```\n$ git init\n$ git add .\n$ git commit -m \"init\"\n$ git remote add heroku git@heroku.com:yourAppName.git\n```\n>在 push 到 heroku 服务器之前，我们还需要做一个工作。由于我国某些政策的原因，我们需到**~/.ssh/** 目录下，新建一个 **config** 文件，内容如下：\n\n```\ncd ~/.ssh/\nvi config\n```\n```\nHost heroku.com\nUser yourName\nHostname 107.21.95.3\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa\nport 22\n```\n```\n$ git push heroku master\n```\n\n## 成功","source":"_posts/heroku.md","raw":"---\ntitle: heroku\ndate: 2016-10-12 09:45:34\ncategories: Tools\ntags: [Tools, 筆記,heroku]\n---\n\nHeroku 免费云空间\n\n<!-- more -->\n-----\n\n\n## 准备\n    必须要用git\n## 注册账户\n[hero官网](https://www.heroku.com)\n\n\n\n\n## 安装Heroku Toolbelt\n[Heroku Toolbelt](https://toolbelt.heroku.com/)\n\n  Heroku Toolbelt是用于创建、管理Heroku上apps的命令行工具\n\n**heroku** 的命令行客户端将被安装到`/usr/local/heroku`，同时，``/usr/local/heroku/bin``将被添加到你的PATH环境变量\n\n下载并安装完成后，在 shell 中输入`heroku login`，用创建`heroku`账号的`email`和`密码`登陆\n```\n    $ heroku login\n    Enter your Heroku credentials.\n    Email:            adam@example.com\n    Password (typing will be hidden):\n    Authentication successful.\n\n```\n*把你的 SSH 公钥上传到 Heroku，这一点很重要,上传后才能使用 git push 命令。正常情况下,login 命令会自动创建并上传 SSH 公钥。*\n\n## 上传应用\n>在工程的根目录下新建一个 **Procfile** 文件，添加如下内容：\n\n```\nweb: node app.js\n```\n\n- 到应用面板页勾选 **web node app.js** ，然后点击 **Apply Changes** 启动应用。\n\n```\n$ git init\n$ git add .\n$ git commit -m \"init\"\n$ git remote add heroku git@heroku.com:yourAppName.git\n```\n>在 push 到 heroku 服务器之前，我们还需要做一个工作。由于我国某些政策的原因，我们需到**~/.ssh/** 目录下，新建一个 **config** 文件，内容如下：\n\n```\ncd ~/.ssh/\nvi config\n```\n```\nHost heroku.com\nUser yourName\nHostname 107.21.95.3\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa\nport 22\n```\n```\n$ git push heroku master\n```\n\n## 成功","slug":"heroku","published":1,"updated":"2017-02-20T03:10:57.118Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizdjaaiw0004r4l136u2cdwu","content":"<p>Heroku 免费云空间</p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><a id=\"more\"></a></h2><h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><pre><code>必须要用git\n</code></pre><h2 id=\"注册账户\"><a href=\"#注册账户\" class=\"headerlink\" title=\"注册账户\"></a>注册账户</h2><p><a href=\"https://www.heroku.com\" target=\"_blank\" rel=\"external\">hero官网</a></p>\n<h2 id=\"安装Heroku-Toolbelt\"><a href=\"#安装Heroku-Toolbelt\" class=\"headerlink\" title=\"安装Heroku Toolbelt\"></a>安装Heroku Toolbelt</h2><p><a href=\"https://toolbelt.heroku.com/\" target=\"_blank\" rel=\"external\">Heroku Toolbelt</a></p>\n<p>  Heroku Toolbelt是用于创建、管理Heroku上apps的命令行工具</p>\n<p><strong>heroku</strong> 的命令行客户端将被安装到<code>/usr/local/heroku</code>，同时，<code>/usr/local/heroku/bin</code>将被添加到你的PATH环境变量</p>\n<p>下载并安装完成后，在 shell 中输入<code>heroku login</code>，用创建<code>heroku</code>账号的<code>email</code>和<code>密码</code>登陆<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ heroku login</div><div class=\"line\">Enter your Heroku credentials.</div><div class=\"line\">Email:            adam@example.com</div><div class=\"line\">Password (typing will be hidden):</div><div class=\"line\">Authentication successful.</div></pre></td></tr></table></figure></p>\n<p><em>把你的 SSH 公钥上传到 Heroku，这一点很重要,上传后才能使用 git push 命令。正常情况下,login 命令会自动创建并上传 SSH 公钥。</em></p>\n<h2 id=\"上传应用\"><a href=\"#上传应用\" class=\"headerlink\" title=\"上传应用\"></a>上传应用</h2><blockquote>\n<p>在工程的根目录下新建一个 <strong>Procfile</strong> 文件，添加如下内容：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">web: node app.js</div></pre></td></tr></table></figure>\n<ul>\n<li>到应用面板页勾选 <strong>web node app.js</strong> ，然后点击 <strong>Apply Changes</strong> 启动应用。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git init</div><div class=\"line\">$ git add .</div><div class=\"line\">$ git commit -m &quot;init&quot;</div><div class=\"line\">$ git remote add heroku git@heroku.com:yourAppName.git</div></pre></td></tr></table></figure>\n<blockquote>\n<p>在 push 到 heroku 服务器之前，我们还需要做一个工作。由于我国某些政策的原因，我们需到<strong>~/.ssh/</strong> 目录下，新建一个 <strong>config</strong> 文件，内容如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~/.ssh/</div><div class=\"line\">vi config</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Host heroku.com</div><div class=\"line\">User yourName</div><div class=\"line\">Hostname 107.21.95.3</div><div class=\"line\">PreferredAuthentications publickey</div><div class=\"line\">IdentityFile ~/.ssh/id_rsa</div><div class=\"line\">port 22</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git push heroku master</div></pre></td></tr></table></figure>\n<h2 id=\"成功\"><a href=\"#成功\" class=\"headerlink\" title=\"成功\"></a>成功</h2>","excerpt":"<p>Heroku 免费云空间</p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a>","more":"</h2><h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><pre><code>必须要用git\n</code></pre><h2 id=\"注册账户\"><a href=\"#注册账户\" class=\"headerlink\" title=\"注册账户\"></a>注册账户</h2><p><a href=\"https://www.heroku.com\">hero官网</a></p>\n<h2 id=\"安装Heroku-Toolbelt\"><a href=\"#安装Heroku-Toolbelt\" class=\"headerlink\" title=\"安装Heroku Toolbelt\"></a>安装Heroku Toolbelt</h2><p><a href=\"https://toolbelt.heroku.com/\">Heroku Toolbelt</a></p>\n<p>  Heroku Toolbelt是用于创建、管理Heroku上apps的命令行工具</p>\n<p><strong>heroku</strong> 的命令行客户端将被安装到<code>/usr/local/heroku</code>，同时，<code>/usr/local/heroku/bin</code>将被添加到你的PATH环境变量</p>\n<p>下载并安装完成后，在 shell 中输入<code>heroku login</code>，用创建<code>heroku</code>账号的<code>email</code>和<code>密码</code>登陆<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ heroku login</div><div class=\"line\">Enter your Heroku credentials.</div><div class=\"line\">Email:            adam@example.com</div><div class=\"line\">Password (typing will be hidden):</div><div class=\"line\">Authentication successful.</div></pre></td></tr></table></figure></p>\n<p><em>把你的 SSH 公钥上传到 Heroku，这一点很重要,上传后才能使用 git push 命令。正常情况下,login 命令会自动创建并上传 SSH 公钥。</em></p>\n<h2 id=\"上传应用\"><a href=\"#上传应用\" class=\"headerlink\" title=\"上传应用\"></a>上传应用</h2><blockquote>\n<p>在工程的根目录下新建一个 <strong>Procfile</strong> 文件，添加如下内容：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">web: node app.js</div></pre></td></tr></table></figure>\n<ul>\n<li>到应用面板页勾选 <strong>web node app.js</strong> ，然后点击 <strong>Apply Changes</strong> 启动应用。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git init</div><div class=\"line\">$ git add .</div><div class=\"line\">$ git commit -m &quot;init&quot;</div><div class=\"line\">$ git remote add heroku git@heroku.com:yourAppName.git</div></pre></td></tr></table></figure>\n<blockquote>\n<p>在 push 到 heroku 服务器之前，我们还需要做一个工作。由于我国某些政策的原因，我们需到<strong>~/.ssh/</strong> 目录下，新建一个 <strong>config</strong> 文件，内容如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~/.ssh/</div><div class=\"line\">vi config</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Host heroku.com</div><div class=\"line\">User yourName</div><div class=\"line\">Hostname 107.21.95.3</div><div class=\"line\">PreferredAuthentications publickey</div><div class=\"line\">IdentityFile ~/.ssh/id_rsa</div><div class=\"line\">port 22</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git push heroku master</div></pre></td></tr></table></figure>\n<h2 id=\"成功\"><a href=\"#成功\" class=\"headerlink\" title=\"成功\"></a>成功</h2>"},{"title":"git_map","date":"2015-07-15T15:21:42.000Z","toc":true,"_content":"\n虽然很早就接触github，但对git的版本控制并不了解，最近开始学习使用git，对其使用简单做一些整理。<!-- more -->\n\n## git 介绍\n`Git`是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。关于她的特点[`Git`官网](http://www.git-scm.com/)是这么介绍的：   \n\n> Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.  \n\n![](https://github.com/jiwenxing/learngit/blob/master/aboutgit.png?raw=true)\n\n总之，对于开源项目来说，使用Git可以极大地提高了开发效率、扩大了开源项目的参与度、 增强了版本控制系统的安全性，选择Git已是大势所趋。\n\n以下为本人学习`git`过程中的一些练习和笔记，相关参考：[廖雪峰的Git教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n\n## git 本地仓库常用操作\n\n### git 创建本地仓库\n    $ mkdir learngit  //创建文件夹  \n    $ cd learngit  \n    $ pwd   //查看当前目录  \n    /Users/michael/learngit\n    \n    $ git init //将当前文件夹变成git仓库，init后目录下会多出.git文件（默认隐藏） 可以用ls -ah查看  \n    Initialized empty Git repository in /Users/michael/learngit/.git/\n    \n    $ git log //显示从最近到最远的提交日志 如果出现end标记可以按q退出历史记录列表  \n    $ git log --pretty=oneline\n    \n    $ git reset --hard HEAD^  //回退上个版本  \n在`Git`中，用`HEAD`表示当前版本，上一个版本就是`HEAD^`，上上一个版本就是`HEAD^^`，当然往上`100`个版本写`100`个`^`比较容易数不过来，所以写成`HEAD~100`。\n\n### 回退后又想恢复怎么办？\n    $ git reset --hard commit_id //即可，但是怎么知道上次回滚的commit_id呢？  \n    $ git reflog  \n    289f53a HEAD@{0}: reset: moving to HEAD^  \n    ba423b7 HEAD@{1}: commit: add a line  \n    289f53a HEAD@{2}: commit: add file test.txt  \n    0aa4371 HEAD@{3}: commit: create new file  \n    339d5bb HEAD@{4}: commit: add a line  \n    906ce38 HEAD@{5}: commit (initial): add file readme.txt \n \n`git reflog`可以查看命令历史，于是我们知道 `add a line` 的`commit_id`是`ba423b7`\n\n### git 的撤销修改\n1，如果只是在本地做了一些修改，没有执行`commit`也没有`add`操作，使用`git status`可以看到红色字体提示 `modified: <file>  `\n   这时如果不想保存本地修改，即丢弃工作区修改，直接执行`git checkout -- <file>`即可（`git status`有提示）  \n2，如果已经执行了`add`还没有`commit`想回滚，可以执行`$ git reset HEAD readme.txt`将暂存区修改内容回退到工作区，如果还想撤回本地修改，执行步骤1即可  \n3，如果已经`commit`，想回滚到之前的某个版本  \n\t执行` $ git reset --hard HEAD^ ` //回退上个版本  \n\t在Git中，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。  \n\n**小结：**   \n场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令`git checkout -- file`。  \n场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令`git reset HEAD file`，就回到了场景1，第二步按场景1操作。  \n场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。\n\n## git 远程仓库\n\n### git 远程仓库基本操作\n以上所讲只是在一个本地仓库里管理文件历史，我们知道`git`是一个分布式的版本控制系统，即同一个`git`仓库可以分布在不同的服务器上，很庆幸`github`这个网站便可以提供免费的仓库托管服务。\n\n先在`github`上注册账号登陆后`Create a new repo`新建一个仓库，例如`learngit`，于是便在`github`上新建了一个空仓库  \n    `$ git remote add origin https://github.com/jiwenxing/learngit.git`  \n添加后，远程库的名字就是`origin`，这是`Git`默认的叫法，也可以改成别的，但是`origin`这个名字一看就知道是远程库。    \n\n执行`$ git push -u origin master`输入用户名和密码即可将本地库的内容推送到远程`github`仓库, 其中`-u`参数只在第一次提交时使用，表示将本地`master`分支和远程`master`分支相关联，再提交时只需执行  \n`    $ git push origin master `   \n如果报错让你先`fetch`，可以强制推送：  \n`$ git push -u origin master --force`\n\n**注意：**  \n`Git`支持多种协议，包括`ssh`和`https`，  \n`ssh`路径： `git@github.com:jiwenxing/learngit.git`   \n`https`路径： `https://github.com/jiwenxing/learngit.git`  \n通过`ssh`支持的原生`git`协议速度最快。但是在某些特定环境ssh端口被封掉时可以采用`https`，唯一不便的是每次提交都需要输入一下用户名和密码！\n\n### git 从远程仓库 clone\n    git clone https://github.com/h5bp/html5-boilerplate.git\n\n### git 分支管理\n\n`git`创建并切换到新分支 \n \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n    $ git branch dev  //创建新分支\n    \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n    $ git branch\n      dev\n    * master   //*代表当前分支\n    \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n    $ git checkout dev  //切换分支\n    Switched to branch 'dev'\n    \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (dev)\n    $ git branch\n    * dev\n      master\n\n下面我在`dev`分支下对文件`test.txt`添加一行内容后执行`add commit`操作后，再次切换到`master`分支，你会发现刚才做的修改没有了。 也就是说刚才的修改只是针对`dev`分支，对`master`分支没有影响。\n\n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (dev)\n    $ git checkout master  //切回到主分支\n    Switched to branch 'master'\n    Your branch is up-to-date with 'origin/master'.\n    \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n    $ git merge dev  //将dev分支合并到当前master主分支\n    Updating daf105e..b563da8\n    Fast-forward\n     test.txt | 3 ++-\n     1 file changed, 2 insertions(+), 1 deletion(-)\n    \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n    $ git branch -d dev //此时可以删除dev分支\n    Deleted branch dev (was b563da8).\n    \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n    $ git branch\n    * master\n\n可以看到上面我们将dev分支合并到了当前`master`分支后再去看`test.txt`文件，发现刚才做的修改又出现了，这时便可以放心大胆的删除`dev`分支了。\n\n**小结**\n\n- 查看分支：`git branch`\n- 创建分支：`git branch <name>`\n- 切换分支：`git checkout <name>`\n- 创建+切换分支：`git checkout -b <name>`\n- 合并某分支到当前分支：`git merge <name>`\n- 删除分支：`git branch -d <name>`\n\n### git 分支冲突\n    \n    $ git checkout -b feature1  //创建并切换到新分支，并对test文件做修改\n    fatal: A branch named 'feature1' already exists.\n    $ git add test.txt  \n    $ git commit -m \"conflict -and\"  //在新分支下提交更改\n     feature1 651c38a] conflict -and  \n     1 file changed, 1 insertion(+), 1 deletion(-)\n    $ git checkout master  //切回到master分支，对test文件做不同的更改\n    README.MD  \n    Switched to branch 'master'  \n    Your branch is up-to-date with 'origin/master'.  \n    $ git add test.txt  \n    $ git commit -m \"conflict -&\"  //在master下提交更改\n     master 0dc1bd3] conflict -&  \n     1 file changed, 1 insertion(+), 1 deletion(-)  \n    $ git merge feature1  //在master分支下合并feature1分支上的更改，显示冲突\n    CONFLICT (content): Merge conflict in test.txt  \n    Automatic merge failed; fix conflicts and then commit the result.\n\n在不同分支上对同一文件分别做了不同的更改，合并分支的时候就会报冲突，而这时`test.txt`文件的内容也变成了如下：\n\n    I am totoro~\n    who are you？\n    I am totoro~\n    <<<<<<< HEAD\n    Creating a new branch is quick & simple.\n    =======\n    Creating a new branch is quick AND simple.\n    >>>>>>> feature1\n\n`Git`用`<<<<<<<`，`=======`，`>>>>>>>`标记出不同分支的差异内容，`<<<<<<<`标记冲突开始，后面跟的是当前分支中的内容。HEAD指向当前分支末梢的提交。`=======`之后，`>>>>>>>`之前是要`merge`过来的另一条分支上的代码。`>>>>>>>`之后的`feature1`是该分支的名字。\n\n手动在文件中将差异内容做一下修改，再次`add`、`commit`即可解决冲突，完事还可以查看分支的合并情况：\n\n    $ git log --graph --pretty=oneline --abbrev-commit\n    7f9c092 conflict solved\n     \\\n      * 651c38a conflict -and\n      | 0dc1bd3 conflict -&\n     /\n      cfb3522 readme revise4\n      b563da8 branch test\n      daf105e readme revise3\n      002f01d revise2 readme.md\n      5697575 revise readme.md\n      28d49b7 add a pic\n      ca373c6 add two files\n\n\n**注意：**  \n合并分支指令`$ git merge feature1`默认使用的是`fast forward`模式，这样合并并不记录合并历史，而使用指令`$ git merge --no-ff -m \"merge with no-ff\" dev`则是使用普通模式合并代码，合并后有历史记录，建议采用后一种。\n\n### git 分支管理策略\n\n> 注：该部分内容参考自文章[《Git 分支管理详解》](http://www.oschina.net/question/31384_157479)\n\n团队开发中应该如何充分应用`git`的分支功能呢，通常一个项目较为规范的分支策略如下：\n\n- 主分支`master`：代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。  \n  ![](http://static.oschina.net/uploads/img/201406/05112016_Jfp8.png)\n- 开发分支`dev`：进行日常开发工作，这个分支可以用来生成代码的最新代码版本。如果想正式对外发布，就在`Master`分支上，对`Dev`分支进行\"合并\"。  \n  ![](http://static.oschina.net/uploads/img/201406/05112016_HYVm.png)  \n- 功能分支`feature`：开发某种特定功能，从`Dev`分支上面分出来的；开发完成后，要再并入`Dev`。\n  ![](http://static.oschina.net/uploads/img/201406/05112016_v2ve.png)\n- 预发布分支`release`：预发布分支，它是指发布正式版本之前（即合并到`Master`分支之前），我们可能需要有一个预发布的版本进行测试。预发布分支是从Develop分支上面 分出来的，预发布结束以后，必须合并进`Dev`和`Master`分支。\n- `bug`分支`fixbug`：软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行`bug`修补。修补`bug`分支是从`Master`分支上面分出来的。修补结束以后，再合并进`Master`和`Dev`分支。\n   ![](http://static.oschina.net/uploads/img/201406/05112016_PIf1.png)\n  \n## 使用`github`参与开源项目\n\n访问自己感兴趣的项目主页（例如`bootstrap`项目`https://github.com/twbs/bootstrap`）， 点右上角的`“Fork”`就在自己的账号下克隆了一个`bootstrap`仓库，然后，**从自己的账号下`clone`**：  \n\n    git clone https://github.com/jiwenxing/bootstrap.git\n\n**注意** 只有从自己的账号下`clone`仓库，才能推送修改。  \n如果你想修复`bootstrap`的一个`bug`，或者新增一个功能，立刻就可以开始干活，干完后，往自己的仓库推送。如果你希望`bootstrap`的官方库能接受你的修改，你就可以在`GitHub上`发起一个`pull request`。\n\n**小结：**  \n\n- 在`GitHub`上，可以任意`Fork`开源仓库；\n- 自己拥有`Fork`后的仓库的读写权限；\n- 可以推送`pull request`给官方仓库来贡献代码。\n\n## 结语\n虽然很久之前就开始用`github`，并在上面搭建了博客，但是从没用过其版本控制功能，很多东西也没有完全搞明白，希望在以后的工作中慢慢用起来，后面也会根据自己的实际应用进行更新。","source":"_posts/git_map.md","raw":"title: git_map\ndate: 2015-07-15 23:21:42\ncategories: Tools\ntags: [Tools, 筆記,git]\ntoc: true\n---\n\n虽然很早就接触github，但对git的版本控制并不了解，最近开始学习使用git，对其使用简单做一些整理。<!-- more -->\n\n## git 介绍\n`Git`是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。关于她的特点[`Git`官网](http://www.git-scm.com/)是这么介绍的：   \n\n> Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.  \n\n![](https://github.com/jiwenxing/learngit/blob/master/aboutgit.png?raw=true)\n\n总之，对于开源项目来说，使用Git可以极大地提高了开发效率、扩大了开源项目的参与度、 增强了版本控制系统的安全性，选择Git已是大势所趋。\n\n以下为本人学习`git`过程中的一些练习和笔记，相关参考：[廖雪峰的Git教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n\n## git 本地仓库常用操作\n\n### git 创建本地仓库\n    $ mkdir learngit  //创建文件夹  \n    $ cd learngit  \n    $ pwd   //查看当前目录  \n    /Users/michael/learngit\n    \n    $ git init //将当前文件夹变成git仓库，init后目录下会多出.git文件（默认隐藏） 可以用ls -ah查看  \n    Initialized empty Git repository in /Users/michael/learngit/.git/\n    \n    $ git log //显示从最近到最远的提交日志 如果出现end标记可以按q退出历史记录列表  \n    $ git log --pretty=oneline\n    \n    $ git reset --hard HEAD^  //回退上个版本  \n在`Git`中，用`HEAD`表示当前版本，上一个版本就是`HEAD^`，上上一个版本就是`HEAD^^`，当然往上`100`个版本写`100`个`^`比较容易数不过来，所以写成`HEAD~100`。\n\n### 回退后又想恢复怎么办？\n    $ git reset --hard commit_id //即可，但是怎么知道上次回滚的commit_id呢？  \n    $ git reflog  \n    289f53a HEAD@{0}: reset: moving to HEAD^  \n    ba423b7 HEAD@{1}: commit: add a line  \n    289f53a HEAD@{2}: commit: add file test.txt  \n    0aa4371 HEAD@{3}: commit: create new file  \n    339d5bb HEAD@{4}: commit: add a line  \n    906ce38 HEAD@{5}: commit (initial): add file readme.txt \n \n`git reflog`可以查看命令历史，于是我们知道 `add a line` 的`commit_id`是`ba423b7`\n\n### git 的撤销修改\n1，如果只是在本地做了一些修改，没有执行`commit`也没有`add`操作，使用`git status`可以看到红色字体提示 `modified: <file>  `\n   这时如果不想保存本地修改，即丢弃工作区修改，直接执行`git checkout -- <file>`即可（`git status`有提示）  \n2，如果已经执行了`add`还没有`commit`想回滚，可以执行`$ git reset HEAD readme.txt`将暂存区修改内容回退到工作区，如果还想撤回本地修改，执行步骤1即可  \n3，如果已经`commit`，想回滚到之前的某个版本  \n\t执行` $ git reset --hard HEAD^ ` //回退上个版本  \n\t在Git中，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。  \n\n**小结：**   \n场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令`git checkout -- file`。  \n场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令`git reset HEAD file`，就回到了场景1，第二步按场景1操作。  \n场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。\n\n## git 远程仓库\n\n### git 远程仓库基本操作\n以上所讲只是在一个本地仓库里管理文件历史，我们知道`git`是一个分布式的版本控制系统，即同一个`git`仓库可以分布在不同的服务器上，很庆幸`github`这个网站便可以提供免费的仓库托管服务。\n\n先在`github`上注册账号登陆后`Create a new repo`新建一个仓库，例如`learngit`，于是便在`github`上新建了一个空仓库  \n    `$ git remote add origin https://github.com/jiwenxing/learngit.git`  \n添加后，远程库的名字就是`origin`，这是`Git`默认的叫法，也可以改成别的，但是`origin`这个名字一看就知道是远程库。    \n\n执行`$ git push -u origin master`输入用户名和密码即可将本地库的内容推送到远程`github`仓库, 其中`-u`参数只在第一次提交时使用，表示将本地`master`分支和远程`master`分支相关联，再提交时只需执行  \n`    $ git push origin master `   \n如果报错让你先`fetch`，可以强制推送：  \n`$ git push -u origin master --force`\n\n**注意：**  \n`Git`支持多种协议，包括`ssh`和`https`，  \n`ssh`路径： `git@github.com:jiwenxing/learngit.git`   \n`https`路径： `https://github.com/jiwenxing/learngit.git`  \n通过`ssh`支持的原生`git`协议速度最快。但是在某些特定环境ssh端口被封掉时可以采用`https`，唯一不便的是每次提交都需要输入一下用户名和密码！\n\n### git 从远程仓库 clone\n    git clone https://github.com/h5bp/html5-boilerplate.git\n\n### git 分支管理\n\n`git`创建并切换到新分支 \n \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n    $ git branch dev  //创建新分支\n    \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n    $ git branch\n      dev\n    * master   //*代表当前分支\n    \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n    $ git checkout dev  //切换分支\n    Switched to branch 'dev'\n    \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (dev)\n    $ git branch\n    * dev\n      master\n\n下面我在`dev`分支下对文件`test.txt`添加一行内容后执行`add commit`操作后，再次切换到`master`分支，你会发现刚才做的修改没有了。 也就是说刚才的修改只是针对`dev`分支，对`master`分支没有影响。\n\n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (dev)\n    $ git checkout master  //切回到主分支\n    Switched to branch 'master'\n    Your branch is up-to-date with 'origin/master'.\n    \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n    $ git merge dev  //将dev分支合并到当前master主分支\n    Updating daf105e..b563da8\n    Fast-forward\n     test.txt | 3 ++-\n     1 file changed, 2 insertions(+), 1 deletion(-)\n    \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n    $ git branch -d dev //此时可以删除dev分支\n    Deleted branch dev (was b563da8).\n    \n    jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n    $ git branch\n    * master\n\n可以看到上面我们将dev分支合并到了当前`master`分支后再去看`test.txt`文件，发现刚才做的修改又出现了，这时便可以放心大胆的删除`dev`分支了。\n\n**小结**\n\n- 查看分支：`git branch`\n- 创建分支：`git branch <name>`\n- 切换分支：`git checkout <name>`\n- 创建+切换分支：`git checkout -b <name>`\n- 合并某分支到当前分支：`git merge <name>`\n- 删除分支：`git branch -d <name>`\n\n### git 分支冲突\n    \n    $ git checkout -b feature1  //创建并切换到新分支，并对test文件做修改\n    fatal: A branch named 'feature1' already exists.\n    $ git add test.txt  \n    $ git commit -m \"conflict -and\"  //在新分支下提交更改\n     feature1 651c38a] conflict -and  \n     1 file changed, 1 insertion(+), 1 deletion(-)\n    $ git checkout master  //切回到master分支，对test文件做不同的更改\n    README.MD  \n    Switched to branch 'master'  \n    Your branch is up-to-date with 'origin/master'.  \n    $ git add test.txt  \n    $ git commit -m \"conflict -&\"  //在master下提交更改\n     master 0dc1bd3] conflict -&  \n     1 file changed, 1 insertion(+), 1 deletion(-)  \n    $ git merge feature1  //在master分支下合并feature1分支上的更改，显示冲突\n    CONFLICT (content): Merge conflict in test.txt  \n    Automatic merge failed; fix conflicts and then commit the result.\n\n在不同分支上对同一文件分别做了不同的更改，合并分支的时候就会报冲突，而这时`test.txt`文件的内容也变成了如下：\n\n    I am totoro~\n    who are you？\n    I am totoro~\n    <<<<<<< HEAD\n    Creating a new branch is quick & simple.\n    =======\n    Creating a new branch is quick AND simple.\n    >>>>>>> feature1\n\n`Git`用`<<<<<<<`，`=======`，`>>>>>>>`标记出不同分支的差异内容，`<<<<<<<`标记冲突开始，后面跟的是当前分支中的内容。HEAD指向当前分支末梢的提交。`=======`之后，`>>>>>>>`之前是要`merge`过来的另一条分支上的代码。`>>>>>>>`之后的`feature1`是该分支的名字。\n\n手动在文件中将差异内容做一下修改，再次`add`、`commit`即可解决冲突，完事还可以查看分支的合并情况：\n\n    $ git log --graph --pretty=oneline --abbrev-commit\n    7f9c092 conflict solved\n     \\\n      * 651c38a conflict -and\n      | 0dc1bd3 conflict -&\n     /\n      cfb3522 readme revise4\n      b563da8 branch test\n      daf105e readme revise3\n      002f01d revise2 readme.md\n      5697575 revise readme.md\n      28d49b7 add a pic\n      ca373c6 add two files\n\n\n**注意：**  \n合并分支指令`$ git merge feature1`默认使用的是`fast forward`模式，这样合并并不记录合并历史，而使用指令`$ git merge --no-ff -m \"merge with no-ff\" dev`则是使用普通模式合并代码，合并后有历史记录，建议采用后一种。\n\n### git 分支管理策略\n\n> 注：该部分内容参考自文章[《Git 分支管理详解》](http://www.oschina.net/question/31384_157479)\n\n团队开发中应该如何充分应用`git`的分支功能呢，通常一个项目较为规范的分支策略如下：\n\n- 主分支`master`：代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。  \n  ![](http://static.oschina.net/uploads/img/201406/05112016_Jfp8.png)\n- 开发分支`dev`：进行日常开发工作，这个分支可以用来生成代码的最新代码版本。如果想正式对外发布，就在`Master`分支上，对`Dev`分支进行\"合并\"。  \n  ![](http://static.oschina.net/uploads/img/201406/05112016_HYVm.png)  \n- 功能分支`feature`：开发某种特定功能，从`Dev`分支上面分出来的；开发完成后，要再并入`Dev`。\n  ![](http://static.oschina.net/uploads/img/201406/05112016_v2ve.png)\n- 预发布分支`release`：预发布分支，它是指发布正式版本之前（即合并到`Master`分支之前），我们可能需要有一个预发布的版本进行测试。预发布分支是从Develop分支上面 分出来的，预发布结束以后，必须合并进`Dev`和`Master`分支。\n- `bug`分支`fixbug`：软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行`bug`修补。修补`bug`分支是从`Master`分支上面分出来的。修补结束以后，再合并进`Master`和`Dev`分支。\n   ![](http://static.oschina.net/uploads/img/201406/05112016_PIf1.png)\n  \n## 使用`github`参与开源项目\n\n访问自己感兴趣的项目主页（例如`bootstrap`项目`https://github.com/twbs/bootstrap`）， 点右上角的`“Fork”`就在自己的账号下克隆了一个`bootstrap`仓库，然后，**从自己的账号下`clone`**：  \n\n    git clone https://github.com/jiwenxing/bootstrap.git\n\n**注意** 只有从自己的账号下`clone`仓库，才能推送修改。  \n如果你想修复`bootstrap`的一个`bug`，或者新增一个功能，立刻就可以开始干活，干完后，往自己的仓库推送。如果你希望`bootstrap`的官方库能接受你的修改，你就可以在`GitHub上`发起一个`pull request`。\n\n**小结：**  \n\n- 在`GitHub`上，可以任意`Fork`开源仓库；\n- 自己拥有`Fork`后的仓库的读写权限；\n- 可以推送`pull request`给官方仓库来贡献代码。\n\n## 结语\n虽然很久之前就开始用`github`，并在上面搭建了博客，但是从没用过其版本控制功能，很多东西也没有完全搞明白，希望在以后的工作中慢慢用起来，后面也会根据自己的实际应用进行更新。","slug":"git_map","published":1,"updated":"2017-02-20T03:10:53.495Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizdjaaiy0005r4l1c7lcnb4s","content":"<p>虽然很早就接触github，但对git的版本控制并不了解，最近开始学习使用git，对其使用简单做一些整理。<a id=\"more\"></a></p>\n<h2 id=\"git-介绍\"><a href=\"#git-介绍\" class=\"headerlink\" title=\"git 介绍\"></a>git 介绍</h2><p><code>Git</code>是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。关于她的特点<a href=\"http://www.git-scm.com/\" target=\"_blank\" rel=\"external\"><code>Git</code>官网</a>是这么介绍的：   </p>\n<blockquote>\n<p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.  </p>\n</blockquote>\n<p><img src=\"https://github.com/jiwenxing/learngit/blob/master/aboutgit.png?raw=true\" alt=\"\"></p>\n<p>总之，对于开源项目来说，使用Git可以极大地提高了开发效率、扩大了开源项目的参与度、 增强了版本控制系统的安全性，选择Git已是大势所趋。</p>\n<p>以下为本人学习<code>git</code>过程中的一些练习和笔记，相关参考：<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"external\">廖雪峰的Git教程</a></p>\n<h2 id=\"git-本地仓库常用操作\"><a href=\"#git-本地仓库常用操作\" class=\"headerlink\" title=\"git 本地仓库常用操作\"></a>git 本地仓库常用操作</h2><h3 id=\"git-创建本地仓库\"><a href=\"#git-创建本地仓库\" class=\"headerlink\" title=\"git 创建本地仓库\"></a>git 创建本地仓库</h3><pre><code>$ mkdir learngit  //创建文件夹  \n$ cd learngit  \n$ pwd   //查看当前目录  \n/Users/michael/learngit\n\n$ git init //将当前文件夹变成git仓库，init后目录下会多出.git文件（默认隐藏） 可以用ls -ah查看  \nInitialized empty Git repository in /Users/michael/learngit/.git/\n\n$ git log //显示从最近到最远的提交日志 如果出现end标记可以按q退出历史记录列表  \n$ git log --pretty=oneline\n\n$ git reset --hard HEAD^  //回退上个版本  \n</code></pre><p>在<code>Git</code>中，用<code>HEAD</code>表示当前版本，上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上<code>100</code>个版本写<code>100</code>个<code>^</code>比较容易数不过来，所以写成<code>HEAD~100</code>。</p>\n<h3 id=\"回退后又想恢复怎么办？\"><a href=\"#回退后又想恢复怎么办？\" class=\"headerlink\" title=\"回退后又想恢复怎么办？\"></a>回退后又想恢复怎么办？</h3><pre><code>$ git reset --hard commit_id //即可，但是怎么知道上次回滚的commit_id呢？  \n$ git reflog  \n289f53a HEAD@{0}: reset: moving to HEAD^  \nba423b7 HEAD@{1}: commit: add a line  \n289f53a HEAD@{2}: commit: add file test.txt  \n0aa4371 HEAD@{3}: commit: create new file  \n339d5bb HEAD@{4}: commit: add a line  \n906ce38 HEAD@{5}: commit (initial): add file readme.txt \n</code></pre><p><code>git reflog</code>可以查看命令历史，于是我们知道 <code>add a line</code> 的<code>commit_id</code>是<code>ba423b7</code></p>\n<h3 id=\"git-的撤销修改\"><a href=\"#git-的撤销修改\" class=\"headerlink\" title=\"git 的撤销修改\"></a>git 的撤销修改</h3><p>1，如果只是在本地做了一些修改，没有执行<code>commit</code>也没有<code>add</code>操作，使用<code>git status</code>可以看到红色字体提示 <code>modified: &lt;file&gt;</code><br>   这时如果不想保存本地修改，即丢弃工作区修改，直接执行<code>git checkout -- &lt;file&gt;</code>即可（<code>git status</code>有提示）<br>2，如果已经执行了<code>add</code>还没有<code>commit</code>想回滚，可以执行<code>$ git reset HEAD readme.txt</code>将暂存区修改内容回退到工作区，如果还想撤回本地修改，执行步骤1即可<br>3，如果已经<code>commit</code>，想回滚到之前的某个版本<br>    执行<code>$ git reset --hard HEAD^</code> //回退上个版本<br>    在Git中，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。  </p>\n<p><strong>小结：</strong><br>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。<br>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD file</code>，就回到了场景1，第二步按场景1操作。<br>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。</p>\n<h2 id=\"git-远程仓库\"><a href=\"#git-远程仓库\" class=\"headerlink\" title=\"git 远程仓库\"></a>git 远程仓库</h2><h3 id=\"git-远程仓库基本操作\"><a href=\"#git-远程仓库基本操作\" class=\"headerlink\" title=\"git 远程仓库基本操作\"></a>git 远程仓库基本操作</h3><p>以上所讲只是在一个本地仓库里管理文件历史，我们知道<code>git</code>是一个分布式的版本控制系统，即同一个<code>git</code>仓库可以分布在不同的服务器上，很庆幸<code>github</code>这个网站便可以提供免费的仓库托管服务。</p>\n<p>先在<code>github</code>上注册账号登陆后<code>Create a new repo</code>新建一个仓库，例如<code>learngit</code>，于是便在<code>github</code>上新建了一个空仓库<br>    <code>$ git remote add origin https://github.com/jiwenxing/learngit.git</code><br>添加后，远程库的名字就是<code>origin</code>，这是<code>Git</code>默认的叫法，也可以改成别的，但是<code>origin</code>这个名字一看就知道是远程库。    </p>\n<p>执行<code>$ git push -u origin master</code>输入用户名和密码即可将本地库的内容推送到远程<code>github</code>仓库, 其中<code>-u</code>参数只在第一次提交时使用，表示将本地<code>master</code>分支和远程<code>master</code>分支相关联，再提交时只需执行<br><code>$ git push origin master</code><br>如果报错让你先<code>fetch</code>，可以强制推送：<br><code>$ git push -u origin master --force</code></p>\n<p><strong>注意：</strong><br><code>Git</code>支持多种协议，包括<code>ssh</code>和<code>https</code>，<br><code>ssh</code>路径： <code>git@github.com:jiwenxing/learngit.git</code><br><code>https</code>路径： <code>https://github.com/jiwenxing/learngit.git</code><br>通过<code>ssh</code>支持的原生<code>git</code>协议速度最快。但是在某些特定环境ssh端口被封掉时可以采用<code>https</code>，唯一不便的是每次提交都需要输入一下用户名和密码！</p>\n<h3 id=\"git-从远程仓库-clone\"><a href=\"#git-从远程仓库-clone\" class=\"headerlink\" title=\"git 从远程仓库 clone\"></a>git 从远程仓库 clone</h3><pre><code>git clone https://github.com/h5bp/html5-boilerplate.git\n</code></pre><h3 id=\"git-分支管理\"><a href=\"#git-分支管理\" class=\"headerlink\" title=\"git 分支管理\"></a>git 分支管理</h3><p><code>git</code>创建并切换到新分支 </p>\n<pre><code>jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n$ git branch dev  //创建新分支\n\njiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n$ git branch\n  dev\n* master   //*代表当前分支\n\njiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n$ git checkout dev  //切换分支\nSwitched to branch &apos;dev&apos;\n\njiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (dev)\n$ git branch\n* dev\n  master\n</code></pre><p>下面我在<code>dev</code>分支下对文件<code>test.txt</code>添加一行内容后执行<code>add commit</code>操作后，再次切换到<code>master</code>分支，你会发现刚才做的修改没有了。 也就是说刚才的修改只是针对<code>dev</code>分支，对<code>master</code>分支没有影响。</p>\n<pre><code>jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (dev)\n$ git checkout master  //切回到主分支\nSwitched to branch &apos;master&apos;\nYour branch is up-to-date with &apos;origin/master&apos;.\n\njiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n$ git merge dev  //将dev分支合并到当前master主分支\nUpdating daf105e..b563da8\nFast-forward\n test.txt | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\njiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n$ git branch -d dev //此时可以删除dev分支\nDeleted branch dev (was b563da8).\n\njiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n$ git branch\n* master\n</code></pre><p>可以看到上面我们将dev分支合并到了当前<code>master</code>分支后再去看<code>test.txt</code>文件，发现刚才做的修改又出现了，这时便可以放心大胆的删除<code>dev</code>分支了。</p>\n<p><strong>小结</strong></p>\n<ul>\n<li>查看分支：<code>git branch</code></li>\n<li>创建分支：<code>git branch &lt;name&gt;</code></li>\n<li>切换分支：<code>git checkout &lt;name&gt;</code></li>\n<li>创建+切换分支：<code>git checkout -b &lt;name&gt;</code></li>\n<li>合并某分支到当前分支：<code>git merge &lt;name&gt;</code></li>\n<li>删除分支：<code>git branch -d &lt;name&gt;</code></li>\n</ul>\n<h3 id=\"git-分支冲突\"><a href=\"#git-分支冲突\" class=\"headerlink\" title=\"git 分支冲突\"></a>git 分支冲突</h3><pre><code>$ git checkout -b feature1  //创建并切换到新分支，并对test文件做修改\nfatal: A branch named &apos;feature1&apos; already exists.\n$ git add test.txt  \n$ git commit -m &quot;conflict -and&quot;  //在新分支下提交更改\n feature1 651c38a] conflict -and  \n 1 file changed, 1 insertion(+), 1 deletion(-)\n$ git checkout master  //切回到master分支，对test文件做不同的更改\nREADME.MD  \nSwitched to branch &apos;master&apos;  \nYour branch is up-to-date with &apos;origin/master&apos;.  \n$ git add test.txt  \n$ git commit -m &quot;conflict -&amp;&quot;  //在master下提交更改\n master 0dc1bd3] conflict -&amp;  \n 1 file changed, 1 insertion(+), 1 deletion(-)  \n$ git merge feature1  //在master分支下合并feature1分支上的更改，显示冲突\nCONFLICT (content): Merge conflict in test.txt  \nAutomatic merge failed; fix conflicts and then commit the result.\n</code></pre><p>在不同分支上对同一文件分别做了不同的更改，合并分支的时候就会报冲突，而这时<code>test.txt</code>文件的内容也变成了如下：</p>\n<pre><code>I am totoro~\nwho are you？\nI am totoro~\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nCreating a new branch is quick &amp; simple.\n=======\nCreating a new branch is quick AND simple.\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature1\n</code></pre><p><code>Git</code>用<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>，<code>=======</code>，<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>标记出不同分支的差异内容，<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>标记冲突开始，后面跟的是当前分支中的内容。HEAD指向当前分支末梢的提交。<code>=======</code>之后，<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>之前是要<code>merge</code>过来的另一条分支上的代码。<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>之后的<code>feature1</code>是该分支的名字。</p>\n<p>手动在文件中将差异内容做一下修改，再次<code>add</code>、<code>commit</code>即可解决冲突，完事还可以查看分支的合并情况：</p>\n<pre><code>$ git log --graph --pretty=oneline --abbrev-commit\n7f9c092 conflict solved\n \\\n  * 651c38a conflict -and\n  | 0dc1bd3 conflict -&amp;\n /\n  cfb3522 readme revise4\n  b563da8 branch test\n  daf105e readme revise3\n  002f01d revise2 readme.md\n  5697575 revise readme.md\n  28d49b7 add a pic\n  ca373c6 add two files\n</code></pre><p><strong>注意：</strong><br>合并分支指令<code>$ git merge feature1</code>默认使用的是<code>fast forward</code>模式，这样合并并不记录合并历史，而使用指令<code>$ git merge --no-ff -m &quot;merge with no-ff&quot; dev</code>则是使用普通模式合并代码，合并后有历史记录，建议采用后一种。</p>\n<h3 id=\"git-分支管理策略\"><a href=\"#git-分支管理策略\" class=\"headerlink\" title=\"git 分支管理策略\"></a>git 分支管理策略</h3><blockquote>\n<p>注：该部分内容参考自文章<a href=\"http://www.oschina.net/question/31384_157479\" target=\"_blank\" rel=\"external\">《Git 分支管理详解》</a></p>\n</blockquote>\n<p>团队开发中应该如何充分应用<code>git</code>的分支功能呢，通常一个项目较为规范的分支策略如下：</p>\n<ul>\n<li>主分支<code>master</code>：代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。<br><img src=\"http://static.oschina.net/uploads/img/201406/05112016_Jfp8.png\" alt=\"\"></li>\n<li>开发分支<code>dev</code>：进行日常开发工作，这个分支可以用来生成代码的最新代码版本。如果想正式对外发布，就在<code>Master</code>分支上，对<code>Dev</code>分支进行”合并”。<br><img src=\"http://static.oschina.net/uploads/img/201406/05112016_HYVm.png\" alt=\"\">  </li>\n<li>功能分支<code>feature</code>：开发某种特定功能，从<code>Dev</code>分支上面分出来的；开发完成后，要再并入<code>Dev</code>。<br><img src=\"http://static.oschina.net/uploads/img/201406/05112016_v2ve.png\" alt=\"\"></li>\n<li>预发布分支<code>release</code>：预发布分支，它是指发布正式版本之前（即合并到<code>Master</code>分支之前），我们可能需要有一个预发布的版本进行测试。预发布分支是从Develop分支上面 分出来的，预发布结束以后，必须合并进<code>Dev</code>和<code>Master</code>分支。</li>\n<li><code>bug</code>分支<code>fixbug</code>：软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行<code>bug</code>修补。修补<code>bug</code>分支是从<code>Master</code>分支上面分出来的。修补结束以后，再合并进<code>Master</code>和<code>Dev</code>分支。<br> <img src=\"http://static.oschina.net/uploads/img/201406/05112016_PIf1.png\" alt=\"\"></li>\n</ul>\n<h2 id=\"使用github参与开源项目\"><a href=\"#使用github参与开源项目\" class=\"headerlink\" title=\"使用github参与开源项目\"></a>使用<code>github</code>参与开源项目</h2><p>访问自己感兴趣的项目主页（例如<code>bootstrap</code>项目<code>https://github.com/twbs/bootstrap</code>）， 点右上角的<code>“Fork”</code>就在自己的账号下克隆了一个<code>bootstrap</code>仓库，然后，<strong>从自己的账号下<code>clone</code></strong>：  </p>\n<pre><code>git clone https://github.com/jiwenxing/bootstrap.git\n</code></pre><p><strong>注意</strong> 只有从自己的账号下<code>clone</code>仓库，才能推送修改。<br>如果你想修复<code>bootstrap</code>的一个<code>bug</code>，或者新增一个功能，立刻就可以开始干活，干完后，往自己的仓库推送。如果你希望<code>bootstrap</code>的官方库能接受你的修改，你就可以在<code>GitHub上</code>发起一个<code>pull request</code>。</p>\n<p><strong>小结：</strong>  </p>\n<ul>\n<li>在<code>GitHub</code>上，可以任意<code>Fork</code>开源仓库；</li>\n<li>自己拥有<code>Fork</code>后的仓库的读写权限；</li>\n<li>可以推送<code>pull request</code>给官方仓库来贡献代码。</li>\n</ul>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>虽然很久之前就开始用<code>github</code>，并在上面搭建了博客，但是从没用过其版本控制功能，很多东西也没有完全搞明白，希望在以后的工作中慢慢用起来，后面也会根据自己的实际应用进行更新。</p>\n","excerpt":"<p>虽然很早就接触github，但对git的版本控制并不了解，最近开始学习使用git，对其使用简单做一些整理。","more":"</p>\n<h2 id=\"git-介绍\"><a href=\"#git-介绍\" class=\"headerlink\" title=\"git 介绍\"></a>git 介绍</h2><p><code>Git</code>是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。关于她的特点<a href=\"http://www.git-scm.com/\"><code>Git</code>官网</a>是这么介绍的：   </p>\n<blockquote>\n<p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.  </p>\n</blockquote>\n<p><img src=\"https://github.com/jiwenxing/learngit/blob/master/aboutgit.png?raw=true\" alt=\"\"></p>\n<p>总之，对于开源项目来说，使用Git可以极大地提高了开发效率、扩大了开源项目的参与度、 增强了版本控制系统的安全性，选择Git已是大势所趋。</p>\n<p>以下为本人学习<code>git</code>过程中的一些练习和笔记，相关参考：<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰的Git教程</a></p>\n<h2 id=\"git-本地仓库常用操作\"><a href=\"#git-本地仓库常用操作\" class=\"headerlink\" title=\"git 本地仓库常用操作\"></a>git 本地仓库常用操作</h2><h3 id=\"git-创建本地仓库\"><a href=\"#git-创建本地仓库\" class=\"headerlink\" title=\"git 创建本地仓库\"></a>git 创建本地仓库</h3><pre><code>$ mkdir learngit  //创建文件夹  \n$ cd learngit  \n$ pwd   //查看当前目录  \n/Users/michael/learngit\n\n$ git init //将当前文件夹变成git仓库，init后目录下会多出.git文件（默认隐藏） 可以用ls -ah查看  \nInitialized empty Git repository in /Users/michael/learngit/.git/\n\n$ git log //显示从最近到最远的提交日志 如果出现end标记可以按q退出历史记录列表  \n$ git log --pretty=oneline\n\n$ git reset --hard HEAD^  //回退上个版本  \n</code></pre><p>在<code>Git</code>中，用<code>HEAD</code>表示当前版本，上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上<code>100</code>个版本写<code>100</code>个<code>^</code>比较容易数不过来，所以写成<code>HEAD~100</code>。</p>\n<h3 id=\"回退后又想恢复怎么办？\"><a href=\"#回退后又想恢复怎么办？\" class=\"headerlink\" title=\"回退后又想恢复怎么办？\"></a>回退后又想恢复怎么办？</h3><pre><code>$ git reset --hard commit_id //即可，但是怎么知道上次回滚的commit_id呢？  \n$ git reflog  \n289f53a HEAD@{0}: reset: moving to HEAD^  \nba423b7 HEAD@{1}: commit: add a line  \n289f53a HEAD@{2}: commit: add file test.txt  \n0aa4371 HEAD@{3}: commit: create new file  \n339d5bb HEAD@{4}: commit: add a line  \n906ce38 HEAD@{5}: commit (initial): add file readme.txt \n</code></pre><p><code>git reflog</code>可以查看命令历史，于是我们知道 <code>add a line</code> 的<code>commit_id</code>是<code>ba423b7</code></p>\n<h3 id=\"git-的撤销修改\"><a href=\"#git-的撤销修改\" class=\"headerlink\" title=\"git 的撤销修改\"></a>git 的撤销修改</h3><p>1，如果只是在本地做了一些修改，没有执行<code>commit</code>也没有<code>add</code>操作，使用<code>git status</code>可以看到红色字体提示 <code>modified: &lt;file&gt;</code><br>   这时如果不想保存本地修改，即丢弃工作区修改，直接执行<code>git checkout -- &lt;file&gt;</code>即可（<code>git status</code>有提示）<br>2，如果已经执行了<code>add</code>还没有<code>commit</code>想回滚，可以执行<code>$ git reset HEAD readme.txt</code>将暂存区修改内容回退到工作区，如果还想撤回本地修改，执行步骤1即可<br>3，如果已经<code>commit</code>，想回滚到之前的某个版本<br>    执行<code>$ git reset --hard HEAD^</code> //回退上个版本<br>    在Git中，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。  </p>\n<p><strong>小结：</strong><br>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。<br>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD file</code>，就回到了场景1，第二步按场景1操作。<br>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。</p>\n<h2 id=\"git-远程仓库\"><a href=\"#git-远程仓库\" class=\"headerlink\" title=\"git 远程仓库\"></a>git 远程仓库</h2><h3 id=\"git-远程仓库基本操作\"><a href=\"#git-远程仓库基本操作\" class=\"headerlink\" title=\"git 远程仓库基本操作\"></a>git 远程仓库基本操作</h3><p>以上所讲只是在一个本地仓库里管理文件历史，我们知道<code>git</code>是一个分布式的版本控制系统，即同一个<code>git</code>仓库可以分布在不同的服务器上，很庆幸<code>github</code>这个网站便可以提供免费的仓库托管服务。</p>\n<p>先在<code>github</code>上注册账号登陆后<code>Create a new repo</code>新建一个仓库，例如<code>learngit</code>，于是便在<code>github</code>上新建了一个空仓库<br>    <code>$ git remote add origin https://github.com/jiwenxing/learngit.git</code><br>添加后，远程库的名字就是<code>origin</code>，这是<code>Git</code>默认的叫法，也可以改成别的，但是<code>origin</code>这个名字一看就知道是远程库。    </p>\n<p>执行<code>$ git push -u origin master</code>输入用户名和密码即可将本地库的内容推送到远程<code>github</code>仓库, 其中<code>-u</code>参数只在第一次提交时使用，表示将本地<code>master</code>分支和远程<code>master</code>分支相关联，再提交时只需执行<br><code>$ git push origin master</code><br>如果报错让你先<code>fetch</code>，可以强制推送：<br><code>$ git push -u origin master --force</code></p>\n<p><strong>注意：</strong><br><code>Git</code>支持多种协议，包括<code>ssh</code>和<code>https</code>，<br><code>ssh</code>路径： <code>git@github.com:jiwenxing/learngit.git</code><br><code>https</code>路径： <code>https://github.com/jiwenxing/learngit.git</code><br>通过<code>ssh</code>支持的原生<code>git</code>协议速度最快。但是在某些特定环境ssh端口被封掉时可以采用<code>https</code>，唯一不便的是每次提交都需要输入一下用户名和密码！</p>\n<h3 id=\"git-从远程仓库-clone\"><a href=\"#git-从远程仓库-clone\" class=\"headerlink\" title=\"git 从远程仓库 clone\"></a>git 从远程仓库 clone</h3><pre><code>git clone https://github.com/h5bp/html5-boilerplate.git\n</code></pre><h3 id=\"git-分支管理\"><a href=\"#git-分支管理\" class=\"headerlink\" title=\"git 分支管理\"></a>git 分支管理</h3><p><code>git</code>创建并切换到新分支 </p>\n<pre><code>jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n$ git branch dev  //创建新分支\n\njiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n$ git branch\n  dev\n* master   //*代表当前分支\n\njiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n$ git checkout dev  //切换分支\nSwitched to branch &apos;dev&apos;\n\njiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (dev)\n$ git branch\n* dev\n  master\n</code></pre><p>下面我在<code>dev</code>分支下对文件<code>test.txt</code>添加一行内容后执行<code>add commit</code>操作后，再次切换到<code>master</code>分支，你会发现刚才做的修改没有了。 也就是说刚才的修改只是针对<code>dev</code>分支，对<code>master</code>分支没有影响。</p>\n<pre><code>jiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (dev)\n$ git checkout master  //切回到主分支\nSwitched to branch &apos;master&apos;\nYour branch is up-to-date with &apos;origin/master&apos;.\n\njiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n$ git merge dev  //将dev分支合并到当前master主分支\nUpdating daf105e..b563da8\nFast-forward\n test.txt | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\njiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n$ git branch -d dev //此时可以删除dev分支\nDeleted branch dev (was b563da8).\n\njiwenxing@BJPP-ZHANGQQ3 /d/git/learngit (master)\n$ git branch\n* master\n</code></pre><p>可以看到上面我们将dev分支合并到了当前<code>master</code>分支后再去看<code>test.txt</code>文件，发现刚才做的修改又出现了，这时便可以放心大胆的删除<code>dev</code>分支了。</p>\n<p><strong>小结</strong></p>\n<ul>\n<li>查看分支：<code>git branch</code></li>\n<li>创建分支：<code>git branch &lt;name&gt;</code></li>\n<li>切换分支：<code>git checkout &lt;name&gt;</code></li>\n<li>创建+切换分支：<code>git checkout -b &lt;name&gt;</code></li>\n<li>合并某分支到当前分支：<code>git merge &lt;name&gt;</code></li>\n<li>删除分支：<code>git branch -d &lt;name&gt;</code></li>\n</ul>\n<h3 id=\"git-分支冲突\"><a href=\"#git-分支冲突\" class=\"headerlink\" title=\"git 分支冲突\"></a>git 分支冲突</h3><pre><code>$ git checkout -b feature1  //创建并切换到新分支，并对test文件做修改\nfatal: A branch named &apos;feature1&apos; already exists.\n$ git add test.txt  \n$ git commit -m &quot;conflict -and&quot;  //在新分支下提交更改\n feature1 651c38a] conflict -and  \n 1 file changed, 1 insertion(+), 1 deletion(-)\n$ git checkout master  //切回到master分支，对test文件做不同的更改\nREADME.MD  \nSwitched to branch &apos;master&apos;  \nYour branch is up-to-date with &apos;origin/master&apos;.  \n$ git add test.txt  \n$ git commit -m &quot;conflict -&amp;&quot;  //在master下提交更改\n master 0dc1bd3] conflict -&amp;  \n 1 file changed, 1 insertion(+), 1 deletion(-)  \n$ git merge feature1  //在master分支下合并feature1分支上的更改，显示冲突\nCONFLICT (content): Merge conflict in test.txt  \nAutomatic merge failed; fix conflicts and then commit the result.\n</code></pre><p>在不同分支上对同一文件分别做了不同的更改，合并分支的时候就会报冲突，而这时<code>test.txt</code>文件的内容也变成了如下：</p>\n<pre><code>I am totoro~\nwho are you？\nI am totoro~\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nCreating a new branch is quick &amp; simple.\n=======\nCreating a new branch is quick AND simple.\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature1\n</code></pre><p><code>Git</code>用<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>，<code>=======</code>，<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>标记出不同分支的差异内容，<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>标记冲突开始，后面跟的是当前分支中的内容。HEAD指向当前分支末梢的提交。<code>=======</code>之后，<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>之前是要<code>merge</code>过来的另一条分支上的代码。<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>之后的<code>feature1</code>是该分支的名字。</p>\n<p>手动在文件中将差异内容做一下修改，再次<code>add</code>、<code>commit</code>即可解决冲突，完事还可以查看分支的合并情况：</p>\n<pre><code>$ git log --graph --pretty=oneline --abbrev-commit\n7f9c092 conflict solved\n \\\n  * 651c38a conflict -and\n  | 0dc1bd3 conflict -&amp;\n /\n  cfb3522 readme revise4\n  b563da8 branch test\n  daf105e readme revise3\n  002f01d revise2 readme.md\n  5697575 revise readme.md\n  28d49b7 add a pic\n  ca373c6 add two files\n</code></pre><p><strong>注意：</strong><br>合并分支指令<code>$ git merge feature1</code>默认使用的是<code>fast forward</code>模式，这样合并并不记录合并历史，而使用指令<code>$ git merge --no-ff -m &quot;merge with no-ff&quot; dev</code>则是使用普通模式合并代码，合并后有历史记录，建议采用后一种。</p>\n<h3 id=\"git-分支管理策略\"><a href=\"#git-分支管理策略\" class=\"headerlink\" title=\"git 分支管理策略\"></a>git 分支管理策略</h3><blockquote>\n<p>注：该部分内容参考自文章<a href=\"http://www.oschina.net/question/31384_157479\">《Git 分支管理详解》</a></p>\n</blockquote>\n<p>团队开发中应该如何充分应用<code>git</code>的分支功能呢，通常一个项目较为规范的分支策略如下：</p>\n<ul>\n<li>主分支<code>master</code>：代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。<br><img src=\"http://static.oschina.net/uploads/img/201406/05112016_Jfp8.png\" alt=\"\"></li>\n<li>开发分支<code>dev</code>：进行日常开发工作，这个分支可以用来生成代码的最新代码版本。如果想正式对外发布，就在<code>Master</code>分支上，对<code>Dev</code>分支进行”合并”。<br><img src=\"http://static.oschina.net/uploads/img/201406/05112016_HYVm.png\" alt=\"\">  </li>\n<li>功能分支<code>feature</code>：开发某种特定功能，从<code>Dev</code>分支上面分出来的；开发完成后，要再并入<code>Dev</code>。<br><img src=\"http://static.oschina.net/uploads/img/201406/05112016_v2ve.png\" alt=\"\"></li>\n<li>预发布分支<code>release</code>：预发布分支，它是指发布正式版本之前（即合并到<code>Master</code>分支之前），我们可能需要有一个预发布的版本进行测试。预发布分支是从Develop分支上面 分出来的，预发布结束以后，必须合并进<code>Dev</code>和<code>Master</code>分支。</li>\n<li><code>bug</code>分支<code>fixbug</code>：软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行<code>bug</code>修补。修补<code>bug</code>分支是从<code>Master</code>分支上面分出来的。修补结束以后，再合并进<code>Master</code>和<code>Dev</code>分支。<br> <img src=\"http://static.oschina.net/uploads/img/201406/05112016_PIf1.png\" alt=\"\"></li>\n</ul>\n<h2 id=\"使用github参与开源项目\"><a href=\"#使用github参与开源项目\" class=\"headerlink\" title=\"使用github参与开源项目\"></a>使用<code>github</code>参与开源项目</h2><p>访问自己感兴趣的项目主页（例如<code>bootstrap</code>项目<code>https://github.com/twbs/bootstrap</code>）， 点右上角的<code>“Fork”</code>就在自己的账号下克隆了一个<code>bootstrap</code>仓库，然后，<strong>从自己的账号下<code>clone</code></strong>：  </p>\n<pre><code>git clone https://github.com/jiwenxing/bootstrap.git\n</code></pre><p><strong>注意</strong> 只有从自己的账号下<code>clone</code>仓库，才能推送修改。<br>如果你想修复<code>bootstrap</code>的一个<code>bug</code>，或者新增一个功能，立刻就可以开始干活，干完后，往自己的仓库推送。如果你希望<code>bootstrap</code>的官方库能接受你的修改，你就可以在<code>GitHub上</code>发起一个<code>pull request</code>。</p>\n<p><strong>小结：</strong>  </p>\n<ul>\n<li>在<code>GitHub</code>上，可以任意<code>Fork</code>开源仓库；</li>\n<li>自己拥有<code>Fork</code>后的仓库的读写权限；</li>\n<li>可以推送<code>pull request</code>给官方仓库来贡献代码。</li>\n</ul>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>虽然很久之前就开始用<code>github</code>，并在上面搭建了博客，但是从没用过其版本控制功能，很多东西也没有完全搞明白，希望在以后的工作中慢慢用起来，后面也会根据自己的实际应用进行更新。</p>"},{"title":"markdown 学习笔记","date":"2016-09-28T08:21:57.000Z","_content":"使用 Cmd Markdown 编辑阅读器\n\n------\n\n我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，**Cmd Markdown** 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：\n\n> * 整理知识，学习笔记\n> * 发布日记，杂文，所见所想\n> * 撰写发布技术文稿（代码支持）\n> * 撰写发布学术论文（LaTeX 公式支持）\n\n![cmd-markdown-logo](https://www.zybuluo.com/static/img/logo.png)\n\n除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：\n\n### [Windows/Mac/Linux 全平台客户端](https://www.zybuluo.com/cmd/)\n\n> 请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class=\"icon-file\"></i> **新文稿** 或者使用快捷键 `Ctrl+Alt+N`。\n\n------\n\n## 什么是 Markdown\n\nMarkdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，**粗体** 或者 *斜体* 某些文字，更棒的是，它还可以\n\n### 1. 制作一份待办事宜 [Todo 列表](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表)\n\n- [ ] 支持以 PDF 格式导出文稿\n- [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率\n- [x] 新增 Todo 列表功能\n- [x] 修复 LaTex 公式渲染问题\n- [x] 新增 LaTex 公式编号功能\n\n### 2. 书写一个质能守恒公式[^LaTeX]\n\n$$E=mc^2$$\n\n### 3. 高亮一段代码[^code]\n\n```python\n@requires_authorization\nclass SomeClass:\n    pass\n\nif __name__ == '__main__':\n    # A comment\n    print 'hello world'\n```\n\n### 4. 高效绘制 [流程图](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图)\n\n```flow\nst=>start: Start\nop=>operation: Your Operation\ncond=>condition: Yes or No?\ne=>end\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n### 5. 高效绘制 [序列图](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图)\n\n```seq\nAlice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!\n```\n\n### 6. 高效绘制 [甘特图](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图)\n\n```gantt\n    title 项目开发流程\n    section 项目确定\n        需求分析       :a1, 2016-06-22, 3d\n        可行性报告     :after a1, 5d\n        概念验证       : 5d\n    section 项目实施\n        概要设计      :2016-07-05  , 5d\n        详细设计      :2016-07-08, 10d\n        编码          :2016-07-15, 10d\n        测试          :2016-07-22, 5d\n    section 发布验收\n        发布: 2d\n        验收: 3d\n```\n\n### 7. 绘制表格\n\n| 项目        | 价格   |  数量  |\n| --------   | -----:  | :----:  |\n| 计算机     | \\$1600 |   5     |\n| 手机        |   \\$12   |   12   |\n| 管线        |    \\$1    |  234  |\n\n### 8. 更详细语法说明\n\n想要查看更详细的语法说明，可以参考我们准备的 [Cmd Markdown 简明语法手册][1]，进阶用户可以参考 [Cmd Markdown 高阶语法手册][2] 了解更多高级功能。\n\n总而言之，不同于其它 *所见即所得* 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。**Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。** 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。\n\n---\n\n## 什么是 Cmd Markdown\n\n您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 **编辑/发布/阅读** Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。\n\n### 1. 实时同步预览\n\n我们将 Cmd Markdown 的主界面一分为二，左边为**编辑区**，右边为**预览区**，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！\n\n### 2. 编辑工具栏\n\n也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 **编辑区** 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。\n\n![tool-editor](https://www.zybuluo.com/static/img/toolbar-editor.png)\n\n### 3. 编辑模式\n\n完全心无旁骛的方式编辑文字：点击 **编辑工具栏** 最右侧的拉伸按钮或者按下 `Ctrl + M`，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！\n\n### 4. 实时的云端文稿\n\n为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 **编辑工具栏** 的最右侧提示 `已保存` 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。\n\n### 5. 离线模式\n\n在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。\n\n### 6. 管理工具栏\n\n为了便于管理您的文稿，在 **预览区** 的顶部放置了如下所示的 **管理工具栏**：\n\n![tool-manager](https://www.zybuluo.com/static/img/toolbar-manager.jpg)\n\n通过管理工具栏可以：\n\n<i class=\"icon-share\"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享\n<i class=\"icon-file\"></i> 新建：开始撰写一篇新的文稿\n<i class=\"icon-trash\"></i> 删除：删除当前的文稿\n<i class=\"icon-cloud\"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地\n<i class=\"icon-reorder\"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作\n<i class=\"icon-pencil\"></i> 模式：切换 普通/Vim/Emacs 编辑模式\n\n### 7. 阅读工具栏\n\n![tool-manager](https://www.zybuluo.com/static/img/toolbar-reader.jpg)\n\n通过 **预览区** 右上角的 **阅读工具栏**，可以查看当前文稿的目录并增强阅读体验。\n\n工具栏上的五个图标依次为：\n\n<i class=\"icon-list\"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落\n<i class=\"icon-chevron-sign-left\"></i> 视图：互换左边编辑区和右边预览区的位置\n<i class=\"icon-adjust\"></i> 主题：内置了黑白两种模式的主题，试试 **黑色主题**，超炫！\n<i class=\"icon-desktop\"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验\n<i class=\"icon-fullscreen\"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境\n\n### 8. 阅读模式\n\n在 **阅读工具栏** 点击 <i class=\"icon-desktop\"></i> 或者按下 `Ctrl+Alt+M` 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。\n\n### 9. 标签、分类和搜索\n\n在编辑区任意行首位置输入以下格式的文字可以标签当前文档：\n\n标签： 未分类\n\n标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：\n\n![file-list](https://www.zybuluo.com/static/img/file-list.png)\n\n### 10. 文稿发布和分享\n\n在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class=\"icon-share\"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！\n\n------\n\n再一次感谢您花费时间阅读这份欢迎稿，点击 <i class=\"icon-file\"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！\n\n作者 [@ghosert][3]     \n2016 年 07月 07日    \n\n[^LaTeX]: 支持 **LaTeX** 编辑显示支持，例如：$\\sum_{i=1}^n a_i=0$， 访问 [MathJax][4] 参考更多使用方法。\n\n[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，**四十一**种主流编程语言。\n\n[1]: https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown\n[2]: https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册\n[3]: http://weibo.com/ghosert\n[4]: http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\n\n","source":"_posts/markdown.md","raw":"---\ntitle: markdown 学习笔记\ndate: 2016-09-28 16:21:57\ncategories: Tools\ntags: [Tools, 筆記,markdown]\n---\n使用 Cmd Markdown 编辑阅读器\n\n------\n\n我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，**Cmd Markdown** 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：\n\n> * 整理知识，学习笔记\n> * 发布日记，杂文，所见所想\n> * 撰写发布技术文稿（代码支持）\n> * 撰写发布学术论文（LaTeX 公式支持）\n\n![cmd-markdown-logo](https://www.zybuluo.com/static/img/logo.png)\n\n除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：\n\n### [Windows/Mac/Linux 全平台客户端](https://www.zybuluo.com/cmd/)\n\n> 请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class=\"icon-file\"></i> **新文稿** 或者使用快捷键 `Ctrl+Alt+N`。\n\n------\n\n## 什么是 Markdown\n\nMarkdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，**粗体** 或者 *斜体* 某些文字，更棒的是，它还可以\n\n### 1. 制作一份待办事宜 [Todo 列表](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表)\n\n- [ ] 支持以 PDF 格式导出文稿\n- [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率\n- [x] 新增 Todo 列表功能\n- [x] 修复 LaTex 公式渲染问题\n- [x] 新增 LaTex 公式编号功能\n\n### 2. 书写一个质能守恒公式[^LaTeX]\n\n$$E=mc^2$$\n\n### 3. 高亮一段代码[^code]\n\n```python\n@requires_authorization\nclass SomeClass:\n    pass\n\nif __name__ == '__main__':\n    # A comment\n    print 'hello world'\n```\n\n### 4. 高效绘制 [流程图](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图)\n\n```flow\nst=>start: Start\nop=>operation: Your Operation\ncond=>condition: Yes or No?\ne=>end\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n### 5. 高效绘制 [序列图](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图)\n\n```seq\nAlice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!\n```\n\n### 6. 高效绘制 [甘特图](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图)\n\n```gantt\n    title 项目开发流程\n    section 项目确定\n        需求分析       :a1, 2016-06-22, 3d\n        可行性报告     :after a1, 5d\n        概念验证       : 5d\n    section 项目实施\n        概要设计      :2016-07-05  , 5d\n        详细设计      :2016-07-08, 10d\n        编码          :2016-07-15, 10d\n        测试          :2016-07-22, 5d\n    section 发布验收\n        发布: 2d\n        验收: 3d\n```\n\n### 7. 绘制表格\n\n| 项目        | 价格   |  数量  |\n| --------   | -----:  | :----:  |\n| 计算机     | \\$1600 |   5     |\n| 手机        |   \\$12   |   12   |\n| 管线        |    \\$1    |  234  |\n\n### 8. 更详细语法说明\n\n想要查看更详细的语法说明，可以参考我们准备的 [Cmd Markdown 简明语法手册][1]，进阶用户可以参考 [Cmd Markdown 高阶语法手册][2] 了解更多高级功能。\n\n总而言之，不同于其它 *所见即所得* 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。**Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。** 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。\n\n---\n\n## 什么是 Cmd Markdown\n\n您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 **编辑/发布/阅读** Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。\n\n### 1. 实时同步预览\n\n我们将 Cmd Markdown 的主界面一分为二，左边为**编辑区**，右边为**预览区**，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！\n\n### 2. 编辑工具栏\n\n也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 **编辑区** 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。\n\n![tool-editor](https://www.zybuluo.com/static/img/toolbar-editor.png)\n\n### 3. 编辑模式\n\n完全心无旁骛的方式编辑文字：点击 **编辑工具栏** 最右侧的拉伸按钮或者按下 `Ctrl + M`，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！\n\n### 4. 实时的云端文稿\n\n为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 **编辑工具栏** 的最右侧提示 `已保存` 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。\n\n### 5. 离线模式\n\n在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。\n\n### 6. 管理工具栏\n\n为了便于管理您的文稿，在 **预览区** 的顶部放置了如下所示的 **管理工具栏**：\n\n![tool-manager](https://www.zybuluo.com/static/img/toolbar-manager.jpg)\n\n通过管理工具栏可以：\n\n<i class=\"icon-share\"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享\n<i class=\"icon-file\"></i> 新建：开始撰写一篇新的文稿\n<i class=\"icon-trash\"></i> 删除：删除当前的文稿\n<i class=\"icon-cloud\"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地\n<i class=\"icon-reorder\"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作\n<i class=\"icon-pencil\"></i> 模式：切换 普通/Vim/Emacs 编辑模式\n\n### 7. 阅读工具栏\n\n![tool-manager](https://www.zybuluo.com/static/img/toolbar-reader.jpg)\n\n通过 **预览区** 右上角的 **阅读工具栏**，可以查看当前文稿的目录并增强阅读体验。\n\n工具栏上的五个图标依次为：\n\n<i class=\"icon-list\"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落\n<i class=\"icon-chevron-sign-left\"></i> 视图：互换左边编辑区和右边预览区的位置\n<i class=\"icon-adjust\"></i> 主题：内置了黑白两种模式的主题，试试 **黑色主题**，超炫！\n<i class=\"icon-desktop\"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验\n<i class=\"icon-fullscreen\"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境\n\n### 8. 阅读模式\n\n在 **阅读工具栏** 点击 <i class=\"icon-desktop\"></i> 或者按下 `Ctrl+Alt+M` 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。\n\n### 9. 标签、分类和搜索\n\n在编辑区任意行首位置输入以下格式的文字可以标签当前文档：\n\n标签： 未分类\n\n标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：\n\n![file-list](https://www.zybuluo.com/static/img/file-list.png)\n\n### 10. 文稿发布和分享\n\n在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class=\"icon-share\"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！\n\n------\n\n再一次感谢您花费时间阅读这份欢迎稿，点击 <i class=\"icon-file\"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！\n\n作者 [@ghosert][3]     \n2016 年 07月 07日    \n\n[^LaTeX]: 支持 **LaTeX** 编辑显示支持，例如：$\\sum_{i=1}^n a_i=0$， 访问 [MathJax][4] 参考更多使用方法。\n\n[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，**四十一**种主流编程语言。\n\n[1]: https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown\n[2]: https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册\n[3]: http://weibo.com/ghosert\n[4]: http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\n\n","slug":"markdown","published":1,"updated":"2017-02-20T03:11:01.381Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizdjaaj10006r4l137id4p4y","content":"<p>使用 Cmd Markdown 编辑阅读器</p>\n<hr>\n<p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p>\n<blockquote>\n<ul>\n<li>整理知识，学习笔记</li>\n<li>发布日记，杂文，所见所想</li>\n<li>撰写发布技术文稿（代码支持）</li>\n<li>撰写发布学术论文（LaTeX 公式支持）</li>\n</ul>\n</blockquote>\n<p><img src=\"https://www.zybuluo.com/static/img/logo.png\" alt=\"cmd-markdown-logo\"></p>\n<p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p>\n<h3 id=\"Windows-Mac-Linux-全平台客户端\"><a href=\"#Windows-Mac-Linux-全平台客户端\" class=\"headerlink\" title=\"Windows/Mac/Linux 全平台客户端\"></a><a href=\"https://www.zybuluo.com/cmd/\" target=\"_blank\" rel=\"external\">Windows/Mac/Linux 全平台客户端</a></h3><blockquote>\n<p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class=\"icon-file\"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p>\n</blockquote>\n<hr>\n<h2 id=\"什么是-Markdown\"><a href=\"#什么是-Markdown\" class=\"headerlink\" title=\"什么是 Markdown\"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p>\n<h3 id=\"1-制作一份待办事宜-Todo-列表\"><a href=\"#1-制作一份待办事宜-Todo-列表\" class=\"headerlink\" title=\"1. 制作一份待办事宜 Todo 列表\"></a>1. 制作一份待办事宜 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表\" target=\"_blank\" rel=\"external\">Todo 列表</a></h3><ul>\n<li>[ ] 支持以 PDF 格式导出文稿</li>\n<li>[ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li>\n<li>[x] 新增 Todo 列表功能</li>\n<li>[x] 修复 LaTex 公式渲染问题</li>\n<li>[x] 新增 LaTex 公式编号功能</li>\n</ul>\n<h3 id=\"2-书写一个质能守恒公式-LaTeX\"><a href=\"#2-书写一个质能守恒公式-LaTeX\" class=\"headerlink\" title=\"2. 书写一个质能守恒公式[^LaTeX]\"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p>\n<h3 id=\"3-高亮一段代码-code\"><a href=\"#3-高亮一段代码-code\" class=\"headerlink\" title=\"3. 高亮一段代码[^code]\"></a>3. 高亮一段代码[^code]</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@requires_authorization</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SomeClass</span>:</span></div><div class=\"line\">    <span class=\"keyword\">pass</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    <span class=\"comment\"># A comment</span></div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'hello world'</span></div></pre></td></tr></table></figure>\n<h3 id=\"4-高效绘制-流程图\"><a href=\"#4-高效绘制-流程图\" class=\"headerlink\" title=\"4. 高效绘制 流程图\"></a>4. 高效绘制 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图\" target=\"_blank\" rel=\"external\">流程图</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">st=&gt;start: Start</div><div class=\"line\">op=&gt;operation: Your Operation</div><div class=\"line\">cond=&gt;condition: Yes or No?</div><div class=\"line\">e=&gt;end</div><div class=\"line\"></div><div class=\"line\">st-&gt;op-&gt;cond</div><div class=\"line\">cond(yes)-&gt;e</div><div class=\"line\">cond(no)-&gt;op</div></pre></td></tr></table></figure>\n<h3 id=\"5-高效绘制-序列图\"><a href=\"#5-高效绘制-序列图\" class=\"headerlink\" title=\"5. 高效绘制 序列图\"></a>5. 高效绘制 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图\" target=\"_blank\" rel=\"external\">序列图</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Alice-&gt;Bob: Hello Bob, how are you?</div><div class=\"line\">Note right of Bob: Bob thinks</div><div class=\"line\">Bob--&gt;Alice: I am good thanks!</div></pre></td></tr></table></figure>\n<h3 id=\"6-高效绘制-甘特图\"><a href=\"#6-高效绘制-甘特图\" class=\"headerlink\" title=\"6. 高效绘制 甘特图\"></a>6. 高效绘制 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图\" target=\"_blank\" rel=\"external\">甘特图</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">title 项目开发流程</div><div class=\"line\">section 项目确定</div><div class=\"line\">    需求分析       :a1, 2016-06-22, 3d</div><div class=\"line\">    可行性报告     :after a1, 5d</div><div class=\"line\">    概念验证       : 5d</div><div class=\"line\">section 项目实施</div><div class=\"line\">    概要设计      :2016-07-05  , 5d</div><div class=\"line\">    详细设计      :2016-07-08, 10d</div><div class=\"line\">    编码          :2016-07-15, 10d</div><div class=\"line\">    测试          :2016-07-22, 5d</div><div class=\"line\">section 发布验收</div><div class=\"line\">    发布: 2d</div><div class=\"line\">    验收: 3d</div></pre></td></tr></table></figure>\n<h3 id=\"7-绘制表格\"><a href=\"#7-绘制表格\" class=\"headerlink\" title=\"7. 绘制表格\"></a>7. 绘制表格</h3><table>\n<thead>\n<tr>\n<th>项目</th>\n<th style=\"text-align:right\">价格</th>\n<th style=\"text-align:center\">数量</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>计算机</td>\n<td style=\"text-align:right\">\\$1600</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td>手机</td>\n<td style=\"text-align:right\">\\$12</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td>管线</td>\n<td style=\"text-align:right\">\\$1</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"8-更详细语法说明\"><a href=\"#8-更详细语法说明\" class=\"headerlink\" title=\"8. 更详细语法说明\"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown\" target=\"_blank\" rel=\"external\">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册\" target=\"_blank\" rel=\"external\">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p>\n<p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p>\n<hr>\n<h2 id=\"什么是-Cmd-Markdown\"><a href=\"#什么是-Cmd-Markdown\" class=\"headerlink\" title=\"什么是 Cmd Markdown\"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p>\n<h3 id=\"1-实时同步预览\"><a href=\"#1-实时同步预览\" class=\"headerlink\" title=\"1. 实时同步预览\"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p>\n<h3 id=\"2-编辑工具栏\"><a href=\"#2-编辑工具栏\" class=\"headerlink\" title=\"2. 编辑工具栏\"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p>\n<p><img src=\"https://www.zybuluo.com/static/img/toolbar-editor.png\" alt=\"tool-editor\"></p>\n<h3 id=\"3-编辑模式\"><a href=\"#3-编辑模式\" class=\"headerlink\" title=\"3. 编辑模式\"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p>\n<h3 id=\"4-实时的云端文稿\"><a href=\"#4-实时的云端文稿\" class=\"headerlink\" title=\"4. 实时的云端文稿\"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p>\n<h3 id=\"5-离线模式\"><a href=\"#5-离线模式\" class=\"headerlink\" title=\"5. 离线模式\"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p>\n<h3 id=\"6-管理工具栏\"><a href=\"#6-管理工具栏\" class=\"headerlink\" title=\"6. 管理工具栏\"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p>\n<p><img src=\"https://www.zybuluo.com/static/img/toolbar-manager.jpg\" alt=\"tool-manager\"></p>\n<p>通过管理工具栏可以：</p>\n<p><i class=\"icon-share\"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class=\"icon-file\"></i> 新建：开始撰写一篇新的文稿<br><i class=\"icon-trash\"></i> 删除：删除当前的文稿<br><i class=\"icon-cloud\"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class=\"icon-reorder\"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class=\"icon-pencil\"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p>\n<h3 id=\"7-阅读工具栏\"><a href=\"#7-阅读工具栏\" class=\"headerlink\" title=\"7. 阅读工具栏\"></a>7. 阅读工具栏</h3><p><img src=\"https://www.zybuluo.com/static/img/toolbar-reader.jpg\" alt=\"tool-manager\"></p>\n<p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p>\n<p>工具栏上的五个图标依次为：</p>\n<p><i class=\"icon-list\"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class=\"icon-chevron-sign-left\"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class=\"icon-adjust\"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class=\"icon-desktop\"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class=\"icon-fullscreen\"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p>\n<h3 id=\"8-阅读模式\"><a href=\"#8-阅读模式\" class=\"headerlink\" title=\"8. 阅读模式\"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class=\"icon-desktop\"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p>\n<h3 id=\"9-标签、分类和搜索\"><a href=\"#9-标签、分类和搜索\" class=\"headerlink\" title=\"9. 标签、分类和搜索\"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p>\n<p>标签： 未分类</p>\n<p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p>\n<p><img src=\"https://www.zybuluo.com/static/img/file-list.png\" alt=\"file-list\"></p>\n<h3 id=\"10-文稿发布和分享\"><a href=\"#10-文稿发布和分享\" class=\"headerlink\" title=\"10. 文稿发布和分享\"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class=\"icon-share\"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p>\n<hr>\n<p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class=\"icon-file\"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p>\n<p>作者 <a href=\"http://weibo.com/ghosert\" target=\"_blank\" rel=\"external\">@ghosert</a><br>2016 年 07月 07日    </p>\n<p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\\sum_{i=1}^n a_i=0$， 访问 <a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"external\">MathJax</a> 参考更多使用方法。</p>\n<p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>\n","excerpt":"","more":"<p>使用 Cmd Markdown 编辑阅读器</p>\n<hr>\n<p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p>\n<blockquote>\n<ul>\n<li>整理知识，学习笔记</li>\n<li>发布日记，杂文，所见所想</li>\n<li>撰写发布技术文稿（代码支持）</li>\n<li>撰写发布学术论文（LaTeX 公式支持）</li>\n</ul>\n</blockquote>\n<p><img src=\"https://www.zybuluo.com/static/img/logo.png\" alt=\"cmd-markdown-logo\"></p>\n<p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p>\n<h3 id=\"Windows-Mac-Linux-全平台客户端\"><a href=\"#Windows-Mac-Linux-全平台客户端\" class=\"headerlink\" title=\"Windows/Mac/Linux 全平台客户端\"></a><a href=\"https://www.zybuluo.com/cmd/\">Windows/Mac/Linux 全平台客户端</a></h3><blockquote>\n<p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class=\"icon-file\"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p>\n</blockquote>\n<hr>\n<h2 id=\"什么是-Markdown\"><a href=\"#什么是-Markdown\" class=\"headerlink\" title=\"什么是 Markdown\"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p>\n<h3 id=\"1-制作一份待办事宜-Todo-列表\"><a href=\"#1-制作一份待办事宜-Todo-列表\" class=\"headerlink\" title=\"1. 制作一份待办事宜 Todo 列表\"></a>1. 制作一份待办事宜 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表\">Todo 列表</a></h3><ul>\n<li>[ ] 支持以 PDF 格式导出文稿</li>\n<li>[ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li>\n<li>[x] 新增 Todo 列表功能</li>\n<li>[x] 修复 LaTex 公式渲染问题</li>\n<li>[x] 新增 LaTex 公式编号功能</li>\n</ul>\n<h3 id=\"2-书写一个质能守恒公式-LaTeX\"><a href=\"#2-书写一个质能守恒公式-LaTeX\" class=\"headerlink\" title=\"2. 书写一个质能守恒公式[^LaTeX]\"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p>\n<h3 id=\"3-高亮一段代码-code\"><a href=\"#3-高亮一段代码-code\" class=\"headerlink\" title=\"3. 高亮一段代码[^code]\"></a>3. 高亮一段代码[^code]</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@requires_authorization</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SomeClass</span>:</span></div><div class=\"line\">    <span class=\"keyword\">pass</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    <span class=\"comment\"># A comment</span></div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'hello world'</span></div></pre></td></tr></table></figure>\n<h3 id=\"4-高效绘制-流程图\"><a href=\"#4-高效绘制-流程图\" class=\"headerlink\" title=\"4. 高效绘制 流程图\"></a>4. 高效绘制 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图\">流程图</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">st=&gt;start: Start</div><div class=\"line\">op=&gt;operation: Your Operation</div><div class=\"line\">cond=&gt;condition: Yes or No?</div><div class=\"line\">e=&gt;end</div><div class=\"line\"></div><div class=\"line\">st-&gt;op-&gt;cond</div><div class=\"line\">cond(yes)-&gt;e</div><div class=\"line\">cond(no)-&gt;op</div></pre></td></tr></table></figure>\n<h3 id=\"5-高效绘制-序列图\"><a href=\"#5-高效绘制-序列图\" class=\"headerlink\" title=\"5. 高效绘制 序列图\"></a>5. 高效绘制 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图\">序列图</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Alice-&gt;Bob: Hello Bob, how are you?</div><div class=\"line\">Note right of Bob: Bob thinks</div><div class=\"line\">Bob--&gt;Alice: I am good thanks!</div></pre></td></tr></table></figure>\n<h3 id=\"6-高效绘制-甘特图\"><a href=\"#6-高效绘制-甘特图\" class=\"headerlink\" title=\"6. 高效绘制 甘特图\"></a>6. 高效绘制 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图\">甘特图</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">title 项目开发流程</div><div class=\"line\">section 项目确定</div><div class=\"line\">    需求分析       :a1, 2016-06-22, 3d</div><div class=\"line\">    可行性报告     :after a1, 5d</div><div class=\"line\">    概念验证       : 5d</div><div class=\"line\">section 项目实施</div><div class=\"line\">    概要设计      :2016-07-05  , 5d</div><div class=\"line\">    详细设计      :2016-07-08, 10d</div><div class=\"line\">    编码          :2016-07-15, 10d</div><div class=\"line\">    测试          :2016-07-22, 5d</div><div class=\"line\">section 发布验收</div><div class=\"line\">    发布: 2d</div><div class=\"line\">    验收: 3d</div></pre></td></tr></table></figure>\n<h3 id=\"7-绘制表格\"><a href=\"#7-绘制表格\" class=\"headerlink\" title=\"7. 绘制表格\"></a>7. 绘制表格</h3><table>\n<thead>\n<tr>\n<th>项目</th>\n<th style=\"text-align:right\">价格</th>\n<th style=\"text-align:center\">数量</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>计算机</td>\n<td style=\"text-align:right\">\\$1600</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td>手机</td>\n<td style=\"text-align:right\">\\$12</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td>管线</td>\n<td style=\"text-align:right\">\\$1</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"8-更详细语法说明\"><a href=\"#8-更详细语法说明\" class=\"headerlink\" title=\"8. 更详细语法说明\"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown\">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册\">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p>\n<p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p>\n<hr>\n<h2 id=\"什么是-Cmd-Markdown\"><a href=\"#什么是-Cmd-Markdown\" class=\"headerlink\" title=\"什么是 Cmd Markdown\"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p>\n<h3 id=\"1-实时同步预览\"><a href=\"#1-实时同步预览\" class=\"headerlink\" title=\"1. 实时同步预览\"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p>\n<h3 id=\"2-编辑工具栏\"><a href=\"#2-编辑工具栏\" class=\"headerlink\" title=\"2. 编辑工具栏\"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p>\n<p><img src=\"https://www.zybuluo.com/static/img/toolbar-editor.png\" alt=\"tool-editor\"></p>\n<h3 id=\"3-编辑模式\"><a href=\"#3-编辑模式\" class=\"headerlink\" title=\"3. 编辑模式\"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p>\n<h3 id=\"4-实时的云端文稿\"><a href=\"#4-实时的云端文稿\" class=\"headerlink\" title=\"4. 实时的云端文稿\"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p>\n<h3 id=\"5-离线模式\"><a href=\"#5-离线模式\" class=\"headerlink\" title=\"5. 离线模式\"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p>\n<h3 id=\"6-管理工具栏\"><a href=\"#6-管理工具栏\" class=\"headerlink\" title=\"6. 管理工具栏\"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p>\n<p><img src=\"https://www.zybuluo.com/static/img/toolbar-manager.jpg\" alt=\"tool-manager\"></p>\n<p>通过管理工具栏可以：</p>\n<p><i class=\"icon-share\"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class=\"icon-file\"></i> 新建：开始撰写一篇新的文稿<br><i class=\"icon-trash\"></i> 删除：删除当前的文稿<br><i class=\"icon-cloud\"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class=\"icon-reorder\"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class=\"icon-pencil\"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p>\n<h3 id=\"7-阅读工具栏\"><a href=\"#7-阅读工具栏\" class=\"headerlink\" title=\"7. 阅读工具栏\"></a>7. 阅读工具栏</h3><p><img src=\"https://www.zybuluo.com/static/img/toolbar-reader.jpg\" alt=\"tool-manager\"></p>\n<p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p>\n<p>工具栏上的五个图标依次为：</p>\n<p><i class=\"icon-list\"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class=\"icon-chevron-sign-left\"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class=\"icon-adjust\"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class=\"icon-desktop\"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class=\"icon-fullscreen\"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p>\n<h3 id=\"8-阅读模式\"><a href=\"#8-阅读模式\" class=\"headerlink\" title=\"8. 阅读模式\"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class=\"icon-desktop\"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p>\n<h3 id=\"9-标签、分类和搜索\"><a href=\"#9-标签、分类和搜索\" class=\"headerlink\" title=\"9. 标签、分类和搜索\"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p>\n<p>标签： 未分类</p>\n<p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p>\n<p><img src=\"https://www.zybuluo.com/static/img/file-list.png\" alt=\"file-list\"></p>\n<h3 id=\"10-文稿发布和分享\"><a href=\"#10-文稿发布和分享\" class=\"headerlink\" title=\"10. 文稿发布和分享\"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class=\"icon-share\"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p>\n<hr>\n<p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class=\"icon-file\"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p>\n<p>作者 <a href=\"http://weibo.com/ghosert\">@ghosert</a><br>2016 年 07月 07日    </p>\n<p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\\sum_{i=1}^n a_i=0$， 访问 <a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\">MathJax</a> 参考更多使用方法。</p>\n<p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>\n"},{"title":"react 学习清单","date":"2016-09-28T16:51:29.000Z","_content":" react-tutorial\na tutorial react collection and sort,let you easily get started and organized\n\n主要是搜集整理react从入门到深入的教程、工具和自己做的demo,以便日后查阅\n\n## 教程:\n1. [为你定制的 React 学习路线](http://geek.csdn.net/news/detail/88222)\n2. [菜鸟教程react入门](http://www.runoob.com/react/react-tutorial.html)\n3. [阮一峰老师的入门react-demo](https://github.com/cllgeek/react-demos)\n4. [React文档](http://reactjs.cn/react/docs/getting-started.html)\n5. [React Router文档](http://react-guide.github.io/react-router-cn/)\n6. [Redux文档](http://cn.redux.js.org/index.html)\n7. [Redux 莞式教程](https://github.com/kenberkeley/redux-simple-tutorial)\n8. [react-redux-tutorial](https://github.com/lewis617/react-redux-tutorial)\n9. [React 技术栈系列教程](http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html)\n\n## 相关好文:\n1. [React初体验](http://hustlzp.com/post/2016/03/react-first-blood)\n2. [React 最佳实践——那些 React 没告诉你但很重要的事](http://www.v2ex.com/t/274697)\n3. [Redux 状态管理方法与实例](https://segmentfault.com/a/1190000005933397)\n4. [高质量的 React 相关文档和翻译](https://github.com/react-guide)\n\n## 相关工具:\n1. [react-babel-webpack-boilerplate](https://github.com/ruanyf/react-babel-webpack-boilerplate)\n2. [react-webpack-generators](https://github.com/react-webpack-generators/generator-react-webpack)\n3. [React项目可视化生成器](http://www.overreact.io/)\n4. [react-starter-kit](https://github.com/bodyno/react-starter-kit)\n\n## 规范\n1. [react-style-guide](https://github.com/cllgeek/react-style-guide)\n\n## demo\n1. [gallery-by-react](https://cllgeek.github.io/gallery-by-react) 地址:[https://github.com/cllgeek/gallery-by-react](https://github.com/cllgeek/gallery-by-react)\n2. [react-router-tutorial](https://github.com/reactjs/react-router-tutorial)\n3. [redux-tutorial](https://github.com/react-guide/redux-tutorial-cn)\n","source":"_posts/react_map.md","raw":"---\ntitle: react 学习清单\ndate: 2016-09-29 00:51:29\ncategories: Javascript\ntags: [Javascript, 筆記,react]\n---\n react-tutorial\na tutorial react collection and sort,let you easily get started and organized\n\n主要是搜集整理react从入门到深入的教程、工具和自己做的demo,以便日后查阅\n\n## 教程:\n1. [为你定制的 React 学习路线](http://geek.csdn.net/news/detail/88222)\n2. [菜鸟教程react入门](http://www.runoob.com/react/react-tutorial.html)\n3. [阮一峰老师的入门react-demo](https://github.com/cllgeek/react-demos)\n4. [React文档](http://reactjs.cn/react/docs/getting-started.html)\n5. [React Router文档](http://react-guide.github.io/react-router-cn/)\n6. [Redux文档](http://cn.redux.js.org/index.html)\n7. [Redux 莞式教程](https://github.com/kenberkeley/redux-simple-tutorial)\n8. [react-redux-tutorial](https://github.com/lewis617/react-redux-tutorial)\n9. [React 技术栈系列教程](http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html)\n\n## 相关好文:\n1. [React初体验](http://hustlzp.com/post/2016/03/react-first-blood)\n2. [React 最佳实践——那些 React 没告诉你但很重要的事](http://www.v2ex.com/t/274697)\n3. [Redux 状态管理方法与实例](https://segmentfault.com/a/1190000005933397)\n4. [高质量的 React 相关文档和翻译](https://github.com/react-guide)\n\n## 相关工具:\n1. [react-babel-webpack-boilerplate](https://github.com/ruanyf/react-babel-webpack-boilerplate)\n2. [react-webpack-generators](https://github.com/react-webpack-generators/generator-react-webpack)\n3. [React项目可视化生成器](http://www.overreact.io/)\n4. [react-starter-kit](https://github.com/bodyno/react-starter-kit)\n\n## 规范\n1. [react-style-guide](https://github.com/cllgeek/react-style-guide)\n\n## demo\n1. [gallery-by-react](https://cllgeek.github.io/gallery-by-react) 地址:[https://github.com/cllgeek/gallery-by-react](https://github.com/cllgeek/gallery-by-react)\n2. [react-router-tutorial](https://github.com/reactjs/react-router-tutorial)\n3. [redux-tutorial](https://github.com/react-guide/redux-tutorial-cn)\n","slug":"react_map","published":1,"updated":"2017-02-20T03:08:37.727Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizdjab6j0019r4l12w5o8n0l","content":"<p> react-tutorial<br>a tutorial react collection and sort,let you easily get started and organized</p>\n<p>主要是搜集整理react从入门到深入的教程、工具和自己做的demo,以便日后查阅</p>\n<h2 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程:\"></a>教程:</h2><ol>\n<li><a href=\"http://geek.csdn.net/news/detail/88222\" target=\"_blank\" rel=\"external\">为你定制的 React 学习路线</a></li>\n<li><a href=\"http://www.runoob.com/react/react-tutorial.html\" target=\"_blank\" rel=\"external\">菜鸟教程react入门</a></li>\n<li><a href=\"https://github.com/cllgeek/react-demos\" target=\"_blank\" rel=\"external\">阮一峰老师的入门react-demo</a></li>\n<li><a href=\"http://reactjs.cn/react/docs/getting-started.html\" target=\"_blank\" rel=\"external\">React文档</a></li>\n<li><a href=\"http://react-guide.github.io/react-router-cn/\" target=\"_blank\" rel=\"external\">React Router文档</a></li>\n<li><a href=\"http://cn.redux.js.org/index.html\" target=\"_blank\" rel=\"external\">Redux文档</a></li>\n<li><a href=\"https://github.com/kenberkeley/redux-simple-tutorial\" target=\"_blank\" rel=\"external\">Redux 莞式教程</a></li>\n<li><a href=\"https://github.com/lewis617/react-redux-tutorial\" target=\"_blank\" rel=\"external\">react-redux-tutorial</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html\" target=\"_blank\" rel=\"external\">React 技术栈系列教程</a></li>\n</ol>\n<h2 id=\"相关好文\"><a href=\"#相关好文\" class=\"headerlink\" title=\"相关好文:\"></a>相关好文:</h2><ol>\n<li><a href=\"http://hustlzp.com/post/2016/03/react-first-blood\" target=\"_blank\" rel=\"external\">React初体验</a></li>\n<li><a href=\"http://www.v2ex.com/t/274697\" target=\"_blank\" rel=\"external\">React 最佳实践——那些 React 没告诉你但很重要的事</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000005933397\" target=\"_blank\" rel=\"external\">Redux 状态管理方法与实例</a></li>\n<li><a href=\"https://github.com/react-guide\" target=\"_blank\" rel=\"external\">高质量的 React 相关文档和翻译</a></li>\n</ol>\n<h2 id=\"相关工具\"><a href=\"#相关工具\" class=\"headerlink\" title=\"相关工具:\"></a>相关工具:</h2><ol>\n<li><a href=\"https://github.com/ruanyf/react-babel-webpack-boilerplate\" target=\"_blank\" rel=\"external\">react-babel-webpack-boilerplate</a></li>\n<li><a href=\"https://github.com/react-webpack-generators/generator-react-webpack\" target=\"_blank\" rel=\"external\">react-webpack-generators</a></li>\n<li><a href=\"http://www.overreact.io/\" target=\"_blank\" rel=\"external\">React项目可视化生成器</a></li>\n<li><a href=\"https://github.com/bodyno/react-starter-kit\" target=\"_blank\" rel=\"external\">react-starter-kit</a></li>\n</ol>\n<h2 id=\"规范\"><a href=\"#规范\" class=\"headerlink\" title=\"规范\"></a>规范</h2><ol>\n<li><a href=\"https://github.com/cllgeek/react-style-guide\" target=\"_blank\" rel=\"external\">react-style-guide</a></li>\n</ol>\n<h2 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h2><ol>\n<li><a href=\"https://cllgeek.github.io/gallery-by-react\" target=\"_blank\" rel=\"external\">gallery-by-react</a> 地址:<a href=\"https://github.com/cllgeek/gallery-by-react\" target=\"_blank\" rel=\"external\">https://github.com/cllgeek/gallery-by-react</a></li>\n<li><a href=\"https://github.com/reactjs/react-router-tutorial\" target=\"_blank\" rel=\"external\">react-router-tutorial</a></li>\n<li><a href=\"https://github.com/react-guide/redux-tutorial-cn\" target=\"_blank\" rel=\"external\">redux-tutorial</a></li>\n</ol>\n","excerpt":"","more":"<p> react-tutorial<br>a tutorial react collection and sort,let you easily get started and organized</p>\n<p>主要是搜集整理react从入门到深入的教程、工具和自己做的demo,以便日后查阅</p>\n<h2 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程:\"></a>教程:</h2><ol>\n<li><a href=\"http://geek.csdn.net/news/detail/88222\">为你定制的 React 学习路线</a></li>\n<li><a href=\"http://www.runoob.com/react/react-tutorial.html\">菜鸟教程react入门</a></li>\n<li><a href=\"https://github.com/cllgeek/react-demos\">阮一峰老师的入门react-demo</a></li>\n<li><a href=\"http://reactjs.cn/react/docs/getting-started.html\">React文档</a></li>\n<li><a href=\"http://react-guide.github.io/react-router-cn/\">React Router文档</a></li>\n<li><a href=\"http://cn.redux.js.org/index.html\">Redux文档</a></li>\n<li><a href=\"https://github.com/kenberkeley/redux-simple-tutorial\">Redux 莞式教程</a></li>\n<li><a href=\"https://github.com/lewis617/react-redux-tutorial\">react-redux-tutorial</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html\">React 技术栈系列教程</a></li>\n</ol>\n<h2 id=\"相关好文\"><a href=\"#相关好文\" class=\"headerlink\" title=\"相关好文:\"></a>相关好文:</h2><ol>\n<li><a href=\"http://hustlzp.com/post/2016/03/react-first-blood\">React初体验</a></li>\n<li><a href=\"http://www.v2ex.com/t/274697\">React 最佳实践——那些 React 没告诉你但很重要的事</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000005933397\">Redux 状态管理方法与实例</a></li>\n<li><a href=\"https://github.com/react-guide\">高质量的 React 相关文档和翻译</a></li>\n</ol>\n<h2 id=\"相关工具\"><a href=\"#相关工具\" class=\"headerlink\" title=\"相关工具:\"></a>相关工具:</h2><ol>\n<li><a href=\"https://github.com/ruanyf/react-babel-webpack-boilerplate\">react-babel-webpack-boilerplate</a></li>\n<li><a href=\"https://github.com/react-webpack-generators/generator-react-webpack\">react-webpack-generators</a></li>\n<li><a href=\"http://www.overreact.io/\">React项目可视化生成器</a></li>\n<li><a href=\"https://github.com/bodyno/react-starter-kit\">react-starter-kit</a></li>\n</ol>\n<h2 id=\"规范\"><a href=\"#规范\" class=\"headerlink\" title=\"规范\"></a>规范</h2><ol>\n<li><a href=\"https://github.com/cllgeek/react-style-guide\">react-style-guide</a></li>\n</ol>\n<h2 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h2><ol>\n<li><a href=\"https://cllgeek.github.io/gallery-by-react\">gallery-by-react</a> 地址:<a href=\"https://github.com/cllgeek/gallery-by-react\">https://github.com/cllgeek/gallery-by-react</a></li>\n<li><a href=\"https://github.com/reactjs/react-router-tutorial\">react-router-tutorial</a></li>\n<li><a href=\"https://github.com/react-guide/redux-tutorial-cn\">redux-tutorial</a></li>\n</ol>\n"},{"title":"Redis几种数据结构的基本操作","date":"2014-06-12T15:50:15.000Z","_content":"\nRedis的命令总是很难记，每次用到都去网上查一下，最近得空整理一下，一方面加深印象，另一方面再用的时候也方便查阅。<!-- more --> \n\n*参考：*\n\n 1. [Redis 命令参考-中文版](http://redisdoc.com/)\n 2. [ Redis Command Reference](http://redis.io/commands)\n 3. [Redis Documentation](http://redis.io/documentation)\n\n\n\n\n### set的基本操作\n\n[添加](#setadd)   [查询](#setsee)     [删除](#setdel)    [集合关系操作](#setrelation)\n\n#### <span id = \"setadd\">添加数据</span>\n\n> sadd key  value1 value2 value3...\n\n    dev:0>sadd test:set:01 \"hello\"\n    1     //1表示成功插入一条数据\n    dev:0>sadd test:set:01 \"redis\"\n    1\n    dev:0>sadd test:set:01 \"hello\" \"world\"\n    1     //这里我虽然一次插入两个value，但是返回1，因为\"hello\"已存在\n    dev:0>smembers test:set:01   //查看该key下的value分布：smembers key（see members）\n    \"world\"\n    \"redis\"\n    \"hello\"\n\n#### <span id = \"setsee\">查询数据</span>\n\n - 获取set指定key的所有member\n\n> smembers key   //abbr. of \"see members\"\n\n    dev:0>smembers test:set:01\n    \"world\"\n    \"redis\"\n    \"hello\"\n\n - 判断值是否是set的member。如果值是返回1，否则返回0\n\n> sismember key member  //abbr. of \"see is member\"\n\n    dev:0>sismember test:set:01 \"hello\"\n    1\n    dev:0>sismember test:set:01 \"hi\"\n    0\n\n - 返回set的member个数，如果set不存在，返回0\n\n> scard key\n\n    dev:0>smembers test:set:01\n    \"hell\"\n    \"world\"\n    \"hello\"\n    \"redis\"\n    \"worl\"\n    dev:0>scard test:set:01\n    5\n\n - 从set中返回一个随机member\n\n> srandmember key  //abbr. of \"see random member\"，随机抽奖\n\n    dev:0>srandmember test:set:01\n    \"world\"\n\n#### <span id = \"setdel\">删除数据</span>\n\n - 随机删除指定key的一个value\n\n> spop key   //set pop\n\n    dev:0>spop test:set:01\n    \"redis\"\n    dev:0>smembers test:set:01\n    \"world\"\n    \"hello\"\n    \"worl\"\n    \"hell\"\n\n - 删除指定key的指定value\n\n> srem key member [member ...] \n\n    dev:0>srem test:set:01 \"hell\" 1\n    dev:0>smembers test:set:01\n    \"world\"\n    \"hello\"\n    \"worl\"\n\n - 将source key中的members移动到destination key中\n\n> smove source_key destination_key member\n\n    dev:0>smembers test:set:01\n    \"world\"\n    \"hello\"\n    \"worl\"\n    dev:0>smembers test:set:001\n    \"world\"\n    \"redis\"\n    \"hi\"\n    dev:0>smove test:set:01 test:set:001 \"hello\"\n    1\n    dev:0>smembers test:set:001\n    \"world\"\n    \"hello\"\n    \"redis\"\n    \"hi\"\n    dev:0>smembers test:set:01\n    \"world\"\n    \"worl\"\n\n#### <span id = \"setrelation\">集合关系操作</span>\n\n - 多个set的并集\n\n> sunion key1 key2 key3...  //注意只是求并集，并没有将其存储\n\n    dev:0>smembers set2\n    \"ache\"\n    \"ello\"\n    \"edis\"\n    \"orld\"\n    dev:0>smembers set1\n    \"world\"\n    \"cache\"\n    \"redis\"\n    \"hello\"\n    dev:0>sunion set1 set2\n    \"world\"\n    \"cache\"\n    \"redis\"\n    \"hello\"\n    \"orld\"\n    \"edis\"\n    \"ello\"\n    \"ache\"\n\n - 求并集并将结果存储到set\n\n> sunionstore destination key [key ...]\n\n    dev:0>smembers set1\n    \"world\"\n    \"redis\"\n    dev:0>smembers set2\n    \"ache\"\n    \"orld\"\n    dev:0>sunionstore all set1 set2\n    4\n    dev:0>smembers all\n    \"world\"\n    \"ache\"\n    \"redis\"\n    \"orld\"\n\n - 多个set求交集\n\n> sinter key[key...]  \n> sinterstore destination key [key ...] \n\n    dev:0>smembers set1\n    \"world\"\n    \"redis\"\n    dev:0>smembers set2\n    \"redis\"\n    \"ache\"\n    dev:0>sinter set1 set2\n    \"redis\"\n\n - set中在其他set中不存在member\n\n>  sdiff key[key ...]  \n>  sdiffstore destination key[key...]\n\n    dev:0>smembers set1\n    \"world\"\n    \"redis\"\n    dev:0>smembers set2\n    \"redis\"\n    \"ache\"\n    dev:0>sdiff set1 set2\n    \"world\"\n\n### sorted set的基本操作\n\n[添加](#zsetadd)   [查询](#zsetsee)   [更新](#zsetupdate)    [删除](#zsetdel)    [集合关系操作](#setrelation)\n\n#### <span id = \"zsetadd\">添加/查询数据</span>\n\n> zadd key score member [[score member] [score member] ...]\n\n    local:0>zadd zset:set1 111 redis  \n    local:0>zadd zset:set1 110 hello\n    local:0>zrange zset:set1 0 -1  \n    hello  \n    redis\n\n\n#### <span id = \"zsetsee\">查询数据</span>\n\n> 语法：zrange key start stop [withscores]\n> 解释：返回有序集key中指定范围[通过索引 start stop]的member[及其score]；\n\n    local:0>zrange zset:set1 0 -1  \n    hello  \n    redis\n    local:0>zrange zset:set1 0 -1 withscores \n\thello   \n\t110\n\tredis\n\t111\n**注意：**返回数据自动按照score排序，start参数0表示第一个元素开始；stop参数-1表示至最后一个元素，-2表示至倒数第二个元素\n\n>语法： zcount key min max \n>解释：统计key中score值介于min 和max之间的member个数\n\n    local:0>zrange zset:set1 0 -1 withscores\n    hello\n    110\n    redis\n    111\n    local:0>zcount zset:set1 0 200\n    2\n    local:0>zcount zset:set1 0 110\n    1\n\n> 语法：zscore key member \n> 解释：返回有续集key中member的score\n\t\n\tlocal:0>zscore zset:set1 hello\n\t110\n> \n> \n> 语法：zrevrange key start stop [withscores]\n> 解释：根据score按降序排列返回有续集key中指定范围[通过索引start stop]的member[及score]\n\n    local:0>zrevrange zset:set1 0 -1 withscores\n    redis\n    111\n    hello\n    110\n\n> 语法：zrangebyscore key min max [withscores] [limit offset count]\n> 解释：返回有续集key中，score大于等于min并且小于等于max的member。返回结果按照score递增的次序排列。可选参数limit\n> 指定返回结果的数量区间。\n\n    local:0>zrange zset:set1 0 -1 withscores\n    world\n    50\n    hello\n    110\n    redis\n    111\n    local:0>zrangebyscore zset:set1 0 200 limit 0 2\n    world\n    hello\n\n**注意：** zrevrangebyscore参数同理返回倒序排列的指定数据\n\n> 语法：zrevrank key member \n> 解释：根据score从高到低排序，返回member在有序集key中的index\n\n    local:0>zrange zset:set1 0 -1\n    world\n    hello\n    redis\n    local:0>zrank zset:set1 redis\n    2\n\n> 语法：zcard key \n> 解释：返回有续集key的基数\n\nlocal:0>zcard zset:set1\n3\n\n#### <span id = \"zsetupdate\">更新数据</span>\n\n> 语法：zincrby key increment member\n> 解释：有续集key的member增加增量increment，返回增加后的score\n\n    local:0>zscore zset:set1 redis\n    111\n    local:0>zincrby zset:set1 500 redis\n    611\n    local:0>zscore zset:set1 redis\n    611\n\n#### <span id = \"zsetdel\">更新数据</span>\n\n> 语法：zrem key member [member ...] \n> 解释：移除有续集中的一个或多个member，返回移除member的个数\n\n    local:0>zrem zset:set1 world\n    1\n    local:0>zrange zset:set1 0 -1\n    hello\n    redis\n\n\n> 语法：zremrangebyrank key start stop \n> 解释：移除有续集中指定排名范围[start stop]的元素，返回移除元素个数\n\n    redis 127.0.0.1:6379> zrange score 0 -1\n    1) \"zhangsan\"\n    2) \"lisi\"\n    3) \"wangwu\"\n    4) \"liuli\"\n    redis 127.0.0.1:6379> zremrangebyrank score 0 1\n    (integer) 2\n    redis 127.0.0.1:6379> zrange score 0 -1\n    1) \"wangwu\"\n    2) \"liuli\"\n\n> 语法：zremrangebyscore key min max\n> 解释：移除有续集中的member，移除member的score大于等于min小于等于max；返回移除元素个数\n\n    redis 127.0.0.1:6379> zrange score 0 -1 withscores\n    1) \"wangwu\"\n    2) \"249\"\n    3) \"liuli\"\n    4) \"400\"\n    redis 127.0.0.1:6379> zremrangebyscore score 248 250\n    (integer) 1\n    redis 127.0.0.1:6379> zrange score 0 -1 withscores\n    1) \"liuli\"\n    2) \"400\"\n\n<br>\nString、Hash以及List未完待续。。。","source":"_posts/redis.md","raw":"title: Redis几种数据结构的基本操作\ndate: 2014-06-12 23:50:15\ncategories: Tools\ntags: [Tools, 筆記,redis]\n---\n\nRedis的命令总是很难记，每次用到都去网上查一下，最近得空整理一下，一方面加深印象，另一方面再用的时候也方便查阅。<!-- more --> \n\n*参考：*\n\n 1. [Redis 命令参考-中文版](http://redisdoc.com/)\n 2. [ Redis Command Reference](http://redis.io/commands)\n 3. [Redis Documentation](http://redis.io/documentation)\n\n\n\n\n### set的基本操作\n\n[添加](#setadd)   [查询](#setsee)     [删除](#setdel)    [集合关系操作](#setrelation)\n\n#### <span id = \"setadd\">添加数据</span>\n\n> sadd key  value1 value2 value3...\n\n    dev:0>sadd test:set:01 \"hello\"\n    1     //1表示成功插入一条数据\n    dev:0>sadd test:set:01 \"redis\"\n    1\n    dev:0>sadd test:set:01 \"hello\" \"world\"\n    1     //这里我虽然一次插入两个value，但是返回1，因为\"hello\"已存在\n    dev:0>smembers test:set:01   //查看该key下的value分布：smembers key（see members）\n    \"world\"\n    \"redis\"\n    \"hello\"\n\n#### <span id = \"setsee\">查询数据</span>\n\n - 获取set指定key的所有member\n\n> smembers key   //abbr. of \"see members\"\n\n    dev:0>smembers test:set:01\n    \"world\"\n    \"redis\"\n    \"hello\"\n\n - 判断值是否是set的member。如果值是返回1，否则返回0\n\n> sismember key member  //abbr. of \"see is member\"\n\n    dev:0>sismember test:set:01 \"hello\"\n    1\n    dev:0>sismember test:set:01 \"hi\"\n    0\n\n - 返回set的member个数，如果set不存在，返回0\n\n> scard key\n\n    dev:0>smembers test:set:01\n    \"hell\"\n    \"world\"\n    \"hello\"\n    \"redis\"\n    \"worl\"\n    dev:0>scard test:set:01\n    5\n\n - 从set中返回一个随机member\n\n> srandmember key  //abbr. of \"see random member\"，随机抽奖\n\n    dev:0>srandmember test:set:01\n    \"world\"\n\n#### <span id = \"setdel\">删除数据</span>\n\n - 随机删除指定key的一个value\n\n> spop key   //set pop\n\n    dev:0>spop test:set:01\n    \"redis\"\n    dev:0>smembers test:set:01\n    \"world\"\n    \"hello\"\n    \"worl\"\n    \"hell\"\n\n - 删除指定key的指定value\n\n> srem key member [member ...] \n\n    dev:0>srem test:set:01 \"hell\" 1\n    dev:0>smembers test:set:01\n    \"world\"\n    \"hello\"\n    \"worl\"\n\n - 将source key中的members移动到destination key中\n\n> smove source_key destination_key member\n\n    dev:0>smembers test:set:01\n    \"world\"\n    \"hello\"\n    \"worl\"\n    dev:0>smembers test:set:001\n    \"world\"\n    \"redis\"\n    \"hi\"\n    dev:0>smove test:set:01 test:set:001 \"hello\"\n    1\n    dev:0>smembers test:set:001\n    \"world\"\n    \"hello\"\n    \"redis\"\n    \"hi\"\n    dev:0>smembers test:set:01\n    \"world\"\n    \"worl\"\n\n#### <span id = \"setrelation\">集合关系操作</span>\n\n - 多个set的并集\n\n> sunion key1 key2 key3...  //注意只是求并集，并没有将其存储\n\n    dev:0>smembers set2\n    \"ache\"\n    \"ello\"\n    \"edis\"\n    \"orld\"\n    dev:0>smembers set1\n    \"world\"\n    \"cache\"\n    \"redis\"\n    \"hello\"\n    dev:0>sunion set1 set2\n    \"world\"\n    \"cache\"\n    \"redis\"\n    \"hello\"\n    \"orld\"\n    \"edis\"\n    \"ello\"\n    \"ache\"\n\n - 求并集并将结果存储到set\n\n> sunionstore destination key [key ...]\n\n    dev:0>smembers set1\n    \"world\"\n    \"redis\"\n    dev:0>smembers set2\n    \"ache\"\n    \"orld\"\n    dev:0>sunionstore all set1 set2\n    4\n    dev:0>smembers all\n    \"world\"\n    \"ache\"\n    \"redis\"\n    \"orld\"\n\n - 多个set求交集\n\n> sinter key[key...]  \n> sinterstore destination key [key ...] \n\n    dev:0>smembers set1\n    \"world\"\n    \"redis\"\n    dev:0>smembers set2\n    \"redis\"\n    \"ache\"\n    dev:0>sinter set1 set2\n    \"redis\"\n\n - set中在其他set中不存在member\n\n>  sdiff key[key ...]  \n>  sdiffstore destination key[key...]\n\n    dev:0>smembers set1\n    \"world\"\n    \"redis\"\n    dev:0>smembers set2\n    \"redis\"\n    \"ache\"\n    dev:0>sdiff set1 set2\n    \"world\"\n\n### sorted set的基本操作\n\n[添加](#zsetadd)   [查询](#zsetsee)   [更新](#zsetupdate)    [删除](#zsetdel)    [集合关系操作](#setrelation)\n\n#### <span id = \"zsetadd\">添加/查询数据</span>\n\n> zadd key score member [[score member] [score member] ...]\n\n    local:0>zadd zset:set1 111 redis  \n    local:0>zadd zset:set1 110 hello\n    local:0>zrange zset:set1 0 -1  \n    hello  \n    redis\n\n\n#### <span id = \"zsetsee\">查询数据</span>\n\n> 语法：zrange key start stop [withscores]\n> 解释：返回有序集key中指定范围[通过索引 start stop]的member[及其score]；\n\n    local:0>zrange zset:set1 0 -1  \n    hello  \n    redis\n    local:0>zrange zset:set1 0 -1 withscores \n\thello   \n\t110\n\tredis\n\t111\n**注意：**返回数据自动按照score排序，start参数0表示第一个元素开始；stop参数-1表示至最后一个元素，-2表示至倒数第二个元素\n\n>语法： zcount key min max \n>解释：统计key中score值介于min 和max之间的member个数\n\n    local:0>zrange zset:set1 0 -1 withscores\n    hello\n    110\n    redis\n    111\n    local:0>zcount zset:set1 0 200\n    2\n    local:0>zcount zset:set1 0 110\n    1\n\n> 语法：zscore key member \n> 解释：返回有续集key中member的score\n\t\n\tlocal:0>zscore zset:set1 hello\n\t110\n> \n> \n> 语法：zrevrange key start stop [withscores]\n> 解释：根据score按降序排列返回有续集key中指定范围[通过索引start stop]的member[及score]\n\n    local:0>zrevrange zset:set1 0 -1 withscores\n    redis\n    111\n    hello\n    110\n\n> 语法：zrangebyscore key min max [withscores] [limit offset count]\n> 解释：返回有续集key中，score大于等于min并且小于等于max的member。返回结果按照score递增的次序排列。可选参数limit\n> 指定返回结果的数量区间。\n\n    local:0>zrange zset:set1 0 -1 withscores\n    world\n    50\n    hello\n    110\n    redis\n    111\n    local:0>zrangebyscore zset:set1 0 200 limit 0 2\n    world\n    hello\n\n**注意：** zrevrangebyscore参数同理返回倒序排列的指定数据\n\n> 语法：zrevrank key member \n> 解释：根据score从高到低排序，返回member在有序集key中的index\n\n    local:0>zrange zset:set1 0 -1\n    world\n    hello\n    redis\n    local:0>zrank zset:set1 redis\n    2\n\n> 语法：zcard key \n> 解释：返回有续集key的基数\n\nlocal:0>zcard zset:set1\n3\n\n#### <span id = \"zsetupdate\">更新数据</span>\n\n> 语法：zincrby key increment member\n> 解释：有续集key的member增加增量increment，返回增加后的score\n\n    local:0>zscore zset:set1 redis\n    111\n    local:0>zincrby zset:set1 500 redis\n    611\n    local:0>zscore zset:set1 redis\n    611\n\n#### <span id = \"zsetdel\">更新数据</span>\n\n> 语法：zrem key member [member ...] \n> 解释：移除有续集中的一个或多个member，返回移除member的个数\n\n    local:0>zrem zset:set1 world\n    1\n    local:0>zrange zset:set1 0 -1\n    hello\n    redis\n\n\n> 语法：zremrangebyrank key start stop \n> 解释：移除有续集中指定排名范围[start stop]的元素，返回移除元素个数\n\n    redis 127.0.0.1:6379> zrange score 0 -1\n    1) \"zhangsan\"\n    2) \"lisi\"\n    3) \"wangwu\"\n    4) \"liuli\"\n    redis 127.0.0.1:6379> zremrangebyrank score 0 1\n    (integer) 2\n    redis 127.0.0.1:6379> zrange score 0 -1\n    1) \"wangwu\"\n    2) \"liuli\"\n\n> 语法：zremrangebyscore key min max\n> 解释：移除有续集中的member，移除member的score大于等于min小于等于max；返回移除元素个数\n\n    redis 127.0.0.1:6379> zrange score 0 -1 withscores\n    1) \"wangwu\"\n    2) \"249\"\n    3) \"liuli\"\n    4) \"400\"\n    redis 127.0.0.1:6379> zremrangebyscore score 248 250\n    (integer) 1\n    redis 127.0.0.1:6379> zrange score 0 -1 withscores\n    1) \"liuli\"\n    2) \"400\"\n\n<br>\nString、Hash以及List未完待续。。。","slug":"redis","published":1,"updated":"2017-02-20T03:11:08.180Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizdjab6l001br4l1pmv61jxi","content":"<p>Redis的命令总是很难记，每次用到都去网上查一下，最近得空整理一下，一方面加深印象，另一方面再用的时候也方便查阅。<a id=\"more\"></a> </p>\n<p><em>参考：</em></p>\n<ol>\n<li><a href=\"http://redisdoc.com/\" target=\"_blank\" rel=\"external\">Redis 命令参考-中文版</a></li>\n<li><a href=\"http://redis.io/commands\" target=\"_blank\" rel=\"external\"> Redis Command Reference</a></li>\n<li><a href=\"http://redis.io/documentation\" target=\"_blank\" rel=\"external\">Redis Documentation</a></li>\n</ol>\n<h3 id=\"set的基本操作\"><a href=\"#set的基本操作\" class=\"headerlink\" title=\"set的基本操作\"></a>set的基本操作</h3><p><a href=\"#setadd\">添加</a>   <a href=\"#setsee\">查询</a>     <a href=\"#setdel\">删除</a>    <a href=\"#setrelation\">集合关系操作</a></p>\n<h4 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a><span id=\"setadd\">添加数据</span></h4><blockquote>\n<p>sadd key  value1 value2 value3…</p>\n</blockquote>\n<pre><code>dev:0&gt;sadd test:set:01 &quot;hello&quot;\n1     //1表示成功插入一条数据\ndev:0&gt;sadd test:set:01 &quot;redis&quot;\n1\ndev:0&gt;sadd test:set:01 &quot;hello&quot; &quot;world&quot;\n1     //这里我虽然一次插入两个value，但是返回1，因为&quot;hello&quot;已存在\ndev:0&gt;smembers test:set:01   //查看该key下的value分布：smembers key（see members）\n&quot;world&quot;\n&quot;redis&quot;\n&quot;hello&quot;\n</code></pre><h4 id=\"查询数据\"><a href=\"#查询数据\" class=\"headerlink\" title=\"查询数据\"></a><span id=\"setsee\">查询数据</span></h4><ul>\n<li>获取set指定key的所有member</li>\n</ul>\n<blockquote>\n<p>smembers key   //abbr. of “see members”</p>\n</blockquote>\n<pre><code>dev:0&gt;smembers test:set:01\n&quot;world&quot;\n&quot;redis&quot;\n&quot;hello&quot;\n</code></pre><ul>\n<li>判断值是否是set的member。如果值是返回1，否则返回0</li>\n</ul>\n<blockquote>\n<p>sismember key member  //abbr. of “see is member”</p>\n</blockquote>\n<pre><code>dev:0&gt;sismember test:set:01 &quot;hello&quot;\n1\ndev:0&gt;sismember test:set:01 &quot;hi&quot;\n0\n</code></pre><ul>\n<li>返回set的member个数，如果set不存在，返回0</li>\n</ul>\n<blockquote>\n<p>scard key</p>\n</blockquote>\n<pre><code>dev:0&gt;smembers test:set:01\n&quot;hell&quot;\n&quot;world&quot;\n&quot;hello&quot;\n&quot;redis&quot;\n&quot;worl&quot;\ndev:0&gt;scard test:set:01\n5\n</code></pre><ul>\n<li>从set中返回一个随机member</li>\n</ul>\n<blockquote>\n<p>srandmember key  //abbr. of “see random member”，随机抽奖</p>\n</blockquote>\n<pre><code>dev:0&gt;srandmember test:set:01\n&quot;world&quot;\n</code></pre><h4 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a><span id=\"setdel\">删除数据</span></h4><ul>\n<li>随机删除指定key的一个value</li>\n</ul>\n<blockquote>\n<p>spop key   //set pop</p>\n</blockquote>\n<pre><code>dev:0&gt;spop test:set:01\n&quot;redis&quot;\ndev:0&gt;smembers test:set:01\n&quot;world&quot;\n&quot;hello&quot;\n&quot;worl&quot;\n&quot;hell&quot;\n</code></pre><ul>\n<li>删除指定key的指定value</li>\n</ul>\n<blockquote>\n<p>srem key member [member …] </p>\n</blockquote>\n<pre><code>dev:0&gt;srem test:set:01 &quot;hell&quot; 1\ndev:0&gt;smembers test:set:01\n&quot;world&quot;\n&quot;hello&quot;\n&quot;worl&quot;\n</code></pre><ul>\n<li>将source key中的members移动到destination key中</li>\n</ul>\n<blockquote>\n<p>smove source_key destination_key member</p>\n</blockquote>\n<pre><code>dev:0&gt;smembers test:set:01\n&quot;world&quot;\n&quot;hello&quot;\n&quot;worl&quot;\ndev:0&gt;smembers test:set:001\n&quot;world&quot;\n&quot;redis&quot;\n&quot;hi&quot;\ndev:0&gt;smove test:set:01 test:set:001 &quot;hello&quot;\n1\ndev:0&gt;smembers test:set:001\n&quot;world&quot;\n&quot;hello&quot;\n&quot;redis&quot;\n&quot;hi&quot;\ndev:0&gt;smembers test:set:01\n&quot;world&quot;\n&quot;worl&quot;\n</code></pre><h4 id=\"集合关系操作\"><a href=\"#集合关系操作\" class=\"headerlink\" title=\"集合关系操作\"></a><span id=\"setrelation\">集合关系操作</span></h4><ul>\n<li>多个set的并集</li>\n</ul>\n<blockquote>\n<p>sunion key1 key2 key3…  //注意只是求并集，并没有将其存储</p>\n</blockquote>\n<pre><code>dev:0&gt;smembers set2\n&quot;ache&quot;\n&quot;ello&quot;\n&quot;edis&quot;\n&quot;orld&quot;\ndev:0&gt;smembers set1\n&quot;world&quot;\n&quot;cache&quot;\n&quot;redis&quot;\n&quot;hello&quot;\ndev:0&gt;sunion set1 set2\n&quot;world&quot;\n&quot;cache&quot;\n&quot;redis&quot;\n&quot;hello&quot;\n&quot;orld&quot;\n&quot;edis&quot;\n&quot;ello&quot;\n&quot;ache&quot;\n</code></pre><ul>\n<li>求并集并将结果存储到set</li>\n</ul>\n<blockquote>\n<p>sunionstore destination key [key …]</p>\n</blockquote>\n<pre><code>dev:0&gt;smembers set1\n&quot;world&quot;\n&quot;redis&quot;\ndev:0&gt;smembers set2\n&quot;ache&quot;\n&quot;orld&quot;\ndev:0&gt;sunionstore all set1 set2\n4\ndev:0&gt;smembers all\n&quot;world&quot;\n&quot;ache&quot;\n&quot;redis&quot;\n&quot;orld&quot;\n</code></pre><ul>\n<li>多个set求交集</li>\n</ul>\n<blockquote>\n<p>sinter key[key…]<br>sinterstore destination key [key …] </p>\n</blockquote>\n<pre><code>dev:0&gt;smembers set1\n&quot;world&quot;\n&quot;redis&quot;\ndev:0&gt;smembers set2\n&quot;redis&quot;\n&quot;ache&quot;\ndev:0&gt;sinter set1 set2\n&quot;redis&quot;\n</code></pre><ul>\n<li>set中在其他set中不存在member</li>\n</ul>\n<blockquote>\n<p> sdiff key[key …]<br> sdiffstore destination key[key…]</p>\n</blockquote>\n<pre><code>dev:0&gt;smembers set1\n&quot;world&quot;\n&quot;redis&quot;\ndev:0&gt;smembers set2\n&quot;redis&quot;\n&quot;ache&quot;\ndev:0&gt;sdiff set1 set2\n&quot;world&quot;\n</code></pre><h3 id=\"sorted-set的基本操作\"><a href=\"#sorted-set的基本操作\" class=\"headerlink\" title=\"sorted set的基本操作\"></a>sorted set的基本操作</h3><p><a href=\"#zsetadd\">添加</a>   <a href=\"#zsetsee\">查询</a>   <a href=\"#zsetupdate\">更新</a>    <a href=\"#zsetdel\">删除</a>    <a href=\"#setrelation\">集合关系操作</a></p>\n<h4 id=\"添加-查询数据\"><a href=\"#添加-查询数据\" class=\"headerlink\" title=\"添加/查询数据\"></a><span id=\"zsetadd\">添加/查询数据</span></h4><blockquote>\n<p>zadd key score member [[score member] [score member] …]</p>\n</blockquote>\n<pre><code>local:0&gt;zadd zset:set1 111 redis  \nlocal:0&gt;zadd zset:set1 110 hello\nlocal:0&gt;zrange zset:set1 0 -1  \nhello  \nredis\n</code></pre><h4 id=\"查询数据-1\"><a href=\"#查询数据-1\" class=\"headerlink\" title=\"查询数据\"></a><span id=\"zsetsee\">查询数据</span></h4><blockquote>\n<p>语法：zrange key start stop [withscores]<br>解释：返回有序集key中指定范围[通过索引 start stop]的member[及其score]；</p>\n</blockquote>\n<pre><code>local:0&gt;zrange zset:set1 0 -1  \nhello  \nredis\nlocal:0&gt;zrange zset:set1 0 -1 withscores \nhello   \n110\nredis\n111\n</code></pre><p><strong>注意：</strong>返回数据自动按照score排序，start参数0表示第一个元素开始；stop参数-1表示至最后一个元素，-2表示至倒数第二个元素</p>\n<blockquote>\n<p>语法： zcount key min max<br>解释：统计key中score值介于min 和max之间的member个数</p>\n</blockquote>\n<pre><code>local:0&gt;zrange zset:set1 0 -1 withscores\nhello\n110\nredis\n111\nlocal:0&gt;zcount zset:set1 0 200\n2\nlocal:0&gt;zcount zset:set1 0 110\n1\n</code></pre><blockquote>\n<p>语法：zscore key member<br>解释：返回有续集key中member的score</p>\n</blockquote>\n<pre><code>local:0&gt;zscore zset:set1 hello\n110\n</code></pre><blockquote>\n<p>语法：zrevrange key start stop [withscores]<br>解释：根据score按降序排列返回有续集key中指定范围[通过索引start stop]的member[及score]</p>\n</blockquote>\n<pre><code>local:0&gt;zrevrange zset:set1 0 -1 withscores\nredis\n111\nhello\n110\n</code></pre><blockquote>\n<p>语法：zrangebyscore key min max [withscores] [limit offset count]<br>解释：返回有续集key中，score大于等于min并且小于等于max的member。返回结果按照score递增的次序排列。可选参数limit<br>指定返回结果的数量区间。</p>\n</blockquote>\n<pre><code>local:0&gt;zrange zset:set1 0 -1 withscores\nworld\n50\nhello\n110\nredis\n111\nlocal:0&gt;zrangebyscore zset:set1 0 200 limit 0 2\nworld\nhello\n</code></pre><p><strong>注意：</strong> zrevrangebyscore参数同理返回倒序排列的指定数据</p>\n<blockquote>\n<p>语法：zrevrank key member<br>解释：根据score从高到低排序，返回member在有序集key中的index</p>\n</blockquote>\n<pre><code>local:0&gt;zrange zset:set1 0 -1\nworld\nhello\nredis\nlocal:0&gt;zrank zset:set1 redis\n2\n</code></pre><blockquote>\n<p>语法：zcard key<br>解释：返回有续集key的基数</p>\n</blockquote>\n<p>local:0&gt;zcard zset:set1<br>3</p>\n<h4 id=\"更新数据\"><a href=\"#更新数据\" class=\"headerlink\" title=\"更新数据\"></a><span id=\"zsetupdate\">更新数据</span></h4><blockquote>\n<p>语法：zincrby key increment member<br>解释：有续集key的member增加增量increment，返回增加后的score</p>\n</blockquote>\n<pre><code>local:0&gt;zscore zset:set1 redis\n111\nlocal:0&gt;zincrby zset:set1 500 redis\n611\nlocal:0&gt;zscore zset:set1 redis\n611\n</code></pre><h4 id=\"更新数据-1\"><a href=\"#更新数据-1\" class=\"headerlink\" title=\"更新数据\"></a><span id=\"zsetdel\">更新数据</span></h4><blockquote>\n<p>语法：zrem key member [member …]<br>解释：移除有续集中的一个或多个member，返回移除member的个数</p>\n</blockquote>\n<pre><code>local:0&gt;zrem zset:set1 world\n1\nlocal:0&gt;zrange zset:set1 0 -1\nhello\nredis\n</code></pre><blockquote>\n<p>语法：zremrangebyrank key start stop<br>解释：移除有续集中指定排名范围[start stop]的元素，返回移除元素个数</p>\n</blockquote>\n<pre><code>redis 127.0.0.1:6379&gt; zrange score 0 -1\n1) &quot;zhangsan&quot;\n2) &quot;lisi&quot;\n3) &quot;wangwu&quot;\n4) &quot;liuli&quot;\nredis 127.0.0.1:6379&gt; zremrangebyrank score 0 1\n(integer) 2\nredis 127.0.0.1:6379&gt; zrange score 0 -1\n1) &quot;wangwu&quot;\n2) &quot;liuli&quot;\n</code></pre><blockquote>\n<p>语法：zremrangebyscore key min max<br>解释：移除有续集中的member，移除member的score大于等于min小于等于max；返回移除元素个数</p>\n</blockquote>\n<pre><code>redis 127.0.0.1:6379&gt; zrange score 0 -1 withscores\n1) &quot;wangwu&quot;\n2) &quot;249&quot;\n3) &quot;liuli&quot;\n4) &quot;400&quot;\nredis 127.0.0.1:6379&gt; zremrangebyscore score 248 250\n(integer) 1\nredis 127.0.0.1:6379&gt; zrange score 0 -1 withscores\n1) &quot;liuli&quot;\n2) &quot;400&quot;\n</code></pre><p><br><br>String、Hash以及List未完待续。。。</p>\n","excerpt":"<p>Redis的命令总是很难记，每次用到都去网上查一下，最近得空整理一下，一方面加深印象，另一方面再用的时候也方便查阅。","more":"</p>\n<p><em>参考：</em></p>\n<ol>\n<li><a href=\"http://redisdoc.com/\">Redis 命令参考-中文版</a></li>\n<li><a href=\"http://redis.io/commands\"> Redis Command Reference</a></li>\n<li><a href=\"http://redis.io/documentation\">Redis Documentation</a></li>\n</ol>\n<h3 id=\"set的基本操作\"><a href=\"#set的基本操作\" class=\"headerlink\" title=\"set的基本操作\"></a>set的基本操作</h3><p><a href=\"#setadd\">添加</a>   <a href=\"#setsee\">查询</a>     <a href=\"#setdel\">删除</a>    <a href=\"#setrelation\">集合关系操作</a></p>\n<h4 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a><span id = \"setadd\">添加数据</span></h4><blockquote>\n<p>sadd key  value1 value2 value3…</p>\n</blockquote>\n<pre><code>dev:0&gt;sadd test:set:01 &quot;hello&quot;\n1     //1表示成功插入一条数据\ndev:0&gt;sadd test:set:01 &quot;redis&quot;\n1\ndev:0&gt;sadd test:set:01 &quot;hello&quot; &quot;world&quot;\n1     //这里我虽然一次插入两个value，但是返回1，因为&quot;hello&quot;已存在\ndev:0&gt;smembers test:set:01   //查看该key下的value分布：smembers key（see members）\n&quot;world&quot;\n&quot;redis&quot;\n&quot;hello&quot;\n</code></pre><h4 id=\"查询数据\"><a href=\"#查询数据\" class=\"headerlink\" title=\"查询数据\"></a><span id = \"setsee\">查询数据</span></h4><ul>\n<li>获取set指定key的所有member</li>\n</ul>\n<blockquote>\n<p>smembers key   //abbr. of “see members”</p>\n</blockquote>\n<pre><code>dev:0&gt;smembers test:set:01\n&quot;world&quot;\n&quot;redis&quot;\n&quot;hello&quot;\n</code></pre><ul>\n<li>判断值是否是set的member。如果值是返回1，否则返回0</li>\n</ul>\n<blockquote>\n<p>sismember key member  //abbr. of “see is member”</p>\n</blockquote>\n<pre><code>dev:0&gt;sismember test:set:01 &quot;hello&quot;\n1\ndev:0&gt;sismember test:set:01 &quot;hi&quot;\n0\n</code></pre><ul>\n<li>返回set的member个数，如果set不存在，返回0</li>\n</ul>\n<blockquote>\n<p>scard key</p>\n</blockquote>\n<pre><code>dev:0&gt;smembers test:set:01\n&quot;hell&quot;\n&quot;world&quot;\n&quot;hello&quot;\n&quot;redis&quot;\n&quot;worl&quot;\ndev:0&gt;scard test:set:01\n5\n</code></pre><ul>\n<li>从set中返回一个随机member</li>\n</ul>\n<blockquote>\n<p>srandmember key  //abbr. of “see random member”，随机抽奖</p>\n</blockquote>\n<pre><code>dev:0&gt;srandmember test:set:01\n&quot;world&quot;\n</code></pre><h4 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a><span id = \"setdel\">删除数据</span></h4><ul>\n<li>随机删除指定key的一个value</li>\n</ul>\n<blockquote>\n<p>spop key   //set pop</p>\n</blockquote>\n<pre><code>dev:0&gt;spop test:set:01\n&quot;redis&quot;\ndev:0&gt;smembers test:set:01\n&quot;world&quot;\n&quot;hello&quot;\n&quot;worl&quot;\n&quot;hell&quot;\n</code></pre><ul>\n<li>删除指定key的指定value</li>\n</ul>\n<blockquote>\n<p>srem key member [member …] </p>\n</blockquote>\n<pre><code>dev:0&gt;srem test:set:01 &quot;hell&quot; 1\ndev:0&gt;smembers test:set:01\n&quot;world&quot;\n&quot;hello&quot;\n&quot;worl&quot;\n</code></pre><ul>\n<li>将source key中的members移动到destination key中</li>\n</ul>\n<blockquote>\n<p>smove source_key destination_key member</p>\n</blockquote>\n<pre><code>dev:0&gt;smembers test:set:01\n&quot;world&quot;\n&quot;hello&quot;\n&quot;worl&quot;\ndev:0&gt;smembers test:set:001\n&quot;world&quot;\n&quot;redis&quot;\n&quot;hi&quot;\ndev:0&gt;smove test:set:01 test:set:001 &quot;hello&quot;\n1\ndev:0&gt;smembers test:set:001\n&quot;world&quot;\n&quot;hello&quot;\n&quot;redis&quot;\n&quot;hi&quot;\ndev:0&gt;smembers test:set:01\n&quot;world&quot;\n&quot;worl&quot;\n</code></pre><h4 id=\"集合关系操作\"><a href=\"#集合关系操作\" class=\"headerlink\" title=\"集合关系操作\"></a><span id = \"setrelation\">集合关系操作</span></h4><ul>\n<li>多个set的并集</li>\n</ul>\n<blockquote>\n<p>sunion key1 key2 key3…  //注意只是求并集，并没有将其存储</p>\n</blockquote>\n<pre><code>dev:0&gt;smembers set2\n&quot;ache&quot;\n&quot;ello&quot;\n&quot;edis&quot;\n&quot;orld&quot;\ndev:0&gt;smembers set1\n&quot;world&quot;\n&quot;cache&quot;\n&quot;redis&quot;\n&quot;hello&quot;\ndev:0&gt;sunion set1 set2\n&quot;world&quot;\n&quot;cache&quot;\n&quot;redis&quot;\n&quot;hello&quot;\n&quot;orld&quot;\n&quot;edis&quot;\n&quot;ello&quot;\n&quot;ache&quot;\n</code></pre><ul>\n<li>求并集并将结果存储到set</li>\n</ul>\n<blockquote>\n<p>sunionstore destination key [key …]</p>\n</blockquote>\n<pre><code>dev:0&gt;smembers set1\n&quot;world&quot;\n&quot;redis&quot;\ndev:0&gt;smembers set2\n&quot;ache&quot;\n&quot;orld&quot;\ndev:0&gt;sunionstore all set1 set2\n4\ndev:0&gt;smembers all\n&quot;world&quot;\n&quot;ache&quot;\n&quot;redis&quot;\n&quot;orld&quot;\n</code></pre><ul>\n<li>多个set求交集</li>\n</ul>\n<blockquote>\n<p>sinter key[key…]<br>sinterstore destination key [key …] </p>\n</blockquote>\n<pre><code>dev:0&gt;smembers set1\n&quot;world&quot;\n&quot;redis&quot;\ndev:0&gt;smembers set2\n&quot;redis&quot;\n&quot;ache&quot;\ndev:0&gt;sinter set1 set2\n&quot;redis&quot;\n</code></pre><ul>\n<li>set中在其他set中不存在member</li>\n</ul>\n<blockquote>\n<p> sdiff key[key …]<br> sdiffstore destination key[key…]</p>\n</blockquote>\n<pre><code>dev:0&gt;smembers set1\n&quot;world&quot;\n&quot;redis&quot;\ndev:0&gt;smembers set2\n&quot;redis&quot;\n&quot;ache&quot;\ndev:0&gt;sdiff set1 set2\n&quot;world&quot;\n</code></pre><h3 id=\"sorted-set的基本操作\"><a href=\"#sorted-set的基本操作\" class=\"headerlink\" title=\"sorted set的基本操作\"></a>sorted set的基本操作</h3><p><a href=\"#zsetadd\">添加</a>   <a href=\"#zsetsee\">查询</a>   <a href=\"#zsetupdate\">更新</a>    <a href=\"#zsetdel\">删除</a>    <a href=\"#setrelation\">集合关系操作</a></p>\n<h4 id=\"添加-查询数据\"><a href=\"#添加-查询数据\" class=\"headerlink\" title=\"添加/查询数据\"></a><span id = \"zsetadd\">添加/查询数据</span></h4><blockquote>\n<p>zadd key score member [[score member] [score member] …]</p>\n</blockquote>\n<pre><code>local:0&gt;zadd zset:set1 111 redis  \nlocal:0&gt;zadd zset:set1 110 hello\nlocal:0&gt;zrange zset:set1 0 -1  \nhello  \nredis\n</code></pre><h4 id=\"查询数据-1\"><a href=\"#查询数据-1\" class=\"headerlink\" title=\"查询数据\"></a><span id = \"zsetsee\">查询数据</span></h4><blockquote>\n<p>语法：zrange key start stop [withscores]<br>解释：返回有序集key中指定范围[通过索引 start stop]的member[及其score]；</p>\n</blockquote>\n<pre><code>local:0&gt;zrange zset:set1 0 -1  \nhello  \nredis\nlocal:0&gt;zrange zset:set1 0 -1 withscores \nhello   \n110\nredis\n111\n</code></pre><p><strong>注意：</strong>返回数据自动按照score排序，start参数0表示第一个元素开始；stop参数-1表示至最后一个元素，-2表示至倒数第二个元素</p>\n<blockquote>\n<p>语法： zcount key min max<br>解释：统计key中score值介于min 和max之间的member个数</p>\n</blockquote>\n<pre><code>local:0&gt;zrange zset:set1 0 -1 withscores\nhello\n110\nredis\n111\nlocal:0&gt;zcount zset:set1 0 200\n2\nlocal:0&gt;zcount zset:set1 0 110\n1\n</code></pre><blockquote>\n<p>语法：zscore key member<br>解释：返回有续集key中member的score</p>\n</blockquote>\n<pre><code>local:0&gt;zscore zset:set1 hello\n110\n</code></pre><blockquote>\n<p>语法：zrevrange key start stop [withscores]<br>解释：根据score按降序排列返回有续集key中指定范围[通过索引start stop]的member[及score]</p>\n</blockquote>\n<pre><code>local:0&gt;zrevrange zset:set1 0 -1 withscores\nredis\n111\nhello\n110\n</code></pre><blockquote>\n<p>语法：zrangebyscore key min max [withscores] [limit offset count]<br>解释：返回有续集key中，score大于等于min并且小于等于max的member。返回结果按照score递增的次序排列。可选参数limit<br>指定返回结果的数量区间。</p>\n</blockquote>\n<pre><code>local:0&gt;zrange zset:set1 0 -1 withscores\nworld\n50\nhello\n110\nredis\n111\nlocal:0&gt;zrangebyscore zset:set1 0 200 limit 0 2\nworld\nhello\n</code></pre><p><strong>注意：</strong> zrevrangebyscore参数同理返回倒序排列的指定数据</p>\n<blockquote>\n<p>语法：zrevrank key member<br>解释：根据score从高到低排序，返回member在有序集key中的index</p>\n</blockquote>\n<pre><code>local:0&gt;zrange zset:set1 0 -1\nworld\nhello\nredis\nlocal:0&gt;zrank zset:set1 redis\n2\n</code></pre><blockquote>\n<p>语法：zcard key<br>解释：返回有续集key的基数</p>\n</blockquote>\n<p>local:0&gt;zcard zset:set1<br>3</p>\n<h4 id=\"更新数据\"><a href=\"#更新数据\" class=\"headerlink\" title=\"更新数据\"></a><span id = \"zsetupdate\">更新数据</span></h4><blockquote>\n<p>语法：zincrby key increment member<br>解释：有续集key的member增加增量increment，返回增加后的score</p>\n</blockquote>\n<pre><code>local:0&gt;zscore zset:set1 redis\n111\nlocal:0&gt;zincrby zset:set1 500 redis\n611\nlocal:0&gt;zscore zset:set1 redis\n611\n</code></pre><h4 id=\"更新数据-1\"><a href=\"#更新数据-1\" class=\"headerlink\" title=\"更新数据\"></a><span id = \"zsetdel\">更新数据</span></h4><blockquote>\n<p>语法：zrem key member [member …]<br>解释：移除有续集中的一个或多个member，返回移除member的个数</p>\n</blockquote>\n<pre><code>local:0&gt;zrem zset:set1 world\n1\nlocal:0&gt;zrange zset:set1 0 -1\nhello\nredis\n</code></pre><blockquote>\n<p>语法：zremrangebyrank key start stop<br>解释：移除有续集中指定排名范围[start stop]的元素，返回移除元素个数</p>\n</blockquote>\n<pre><code>redis 127.0.0.1:6379&gt; zrange score 0 -1\n1) &quot;zhangsan&quot;\n2) &quot;lisi&quot;\n3) &quot;wangwu&quot;\n4) &quot;liuli&quot;\nredis 127.0.0.1:6379&gt; zremrangebyrank score 0 1\n(integer) 2\nredis 127.0.0.1:6379&gt; zrange score 0 -1\n1) &quot;wangwu&quot;\n2) &quot;liuli&quot;\n</code></pre><blockquote>\n<p>语法：zremrangebyscore key min max<br>解释：移除有续集中的member，移除member的score大于等于min小于等于max；返回移除元素个数</p>\n</blockquote>\n<pre><code>redis 127.0.0.1:6379&gt; zrange score 0 -1 withscores\n1) &quot;wangwu&quot;\n2) &quot;249&quot;\n3) &quot;liuli&quot;\n4) &quot;400&quot;\nredis 127.0.0.1:6379&gt; zremrangebyscore score 248 250\n(integer) 1\nredis 127.0.0.1:6379&gt; zrange score 0 -1 withscores\n1) &quot;liuli&quot;\n2) &quot;400&quot;\n</code></pre><p><br><br>String、Hash以及List未完待续。。。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cizdjaaim0000r4l13p6t4x9g","category_id":"cizdjaait0002r4l1zkd5f94r","_id":"cizdjaaj60009r4l1srd65ae8"},{"post_id":"cizdjaaiq0001r4l1w4xi5ajf","category_id":"cizdjaaj40007r4l1tdvzd4g7","_id":"cizdjaaj8000cr4l1lk4qhmpf"},{"post_id":"cizdjaaiw0004r4l136u2cdwu","category_id":"cizdjaaj40007r4l1tdvzd4g7","_id":"cizdjaajb000gr4l1gxfvp5z7"},{"post_id":"cizdjaaiy0005r4l1c7lcnb4s","category_id":"cizdjaaj40007r4l1tdvzd4g7","_id":"cizdjaajg000lr4l1cdyt98qm"},{"post_id":"cizdjaaj10006r4l137id4p4y","category_id":"cizdjaaj40007r4l1tdvzd4g7","_id":"cizdjaajh000nr4l1bdbmeryx"},{"post_id":"cizdjab6l001br4l1pmv61jxi","category_id":"cizdjaaj40007r4l1tdvzd4g7","_id":"cizdjab6s001gr4l1dafsyrgl"},{"post_id":"cizdjab6j0019r4l12w5o8n0l","category_id":"cizdjab6o001dr4l166zw9u1p","_id":"cizdjab6t001ir4l12b7ogezf"}],"PostTag":[{"post_id":"cizdjaaim0000r4l13p6t4x9g","tag_id":"cizdjaaiw0003r4l1ows82prl","_id":"cizdjaaja000fr4l179z6mxah"},{"post_id":"cizdjaaim0000r4l13p6t4x9g","tag_id":"cizdjaaj50008r4l1qtjimy1c","_id":"cizdjaajd000ir4l1pt8gjgf4"},{"post_id":"cizdjaaim0000r4l13p6t4x9g","tag_id":"cizdjaaj7000br4l1x8qd1r2f","_id":"cizdjaajf000kr4l1q1pbf940"},{"post_id":"cizdjaaiq0001r4l1w4xi5ajf","tag_id":"cizdjaaj9000er4l1qe8amz4r","_id":"cizdjaaji000pr4l1tafv9vt7"},{"post_id":"cizdjaaiq0001r4l1w4xi5ajf","tag_id":"cizdjaaj50008r4l1qtjimy1c","_id":"cizdjaaji000qr4l13yykvzyu"},{"post_id":"cizdjaaiq0001r4l1w4xi5ajf","tag_id":"cizdjaajh000mr4l1x5dp7vij","_id":"cizdjaajj000sr4l123e6sndr"},{"post_id":"cizdjaaiw0004r4l136u2cdwu","tag_id":"cizdjaaj9000er4l1qe8amz4r","_id":"cizdjaajn000vr4l16cl002tx"},{"post_id":"cizdjaaiw0004r4l136u2cdwu","tag_id":"cizdjaaj50008r4l1qtjimy1c","_id":"cizdjaajo000wr4l1e1l6m5ks"},{"post_id":"cizdjaaiw0004r4l136u2cdwu","tag_id":"cizdjaajl000tr4l1ewpqv6ox","_id":"cizdjaajr000yr4l104qjsjff"},{"post_id":"cizdjaaiy0005r4l1c7lcnb4s","tag_id":"cizdjaaj9000er4l1qe8amz4r","_id":"cizdjaajt0011r4l1fr99uqva"},{"post_id":"cizdjaaiy0005r4l1c7lcnb4s","tag_id":"cizdjaaj50008r4l1qtjimy1c","_id":"cizdjaaju0012r4l1wt1yzho0"},{"post_id":"cizdjaaiy0005r4l1c7lcnb4s","tag_id":"cizdjaajr000zr4l1dj7q908d","_id":"cizdjaajw0014r4l1olgtm7iy"},{"post_id":"cizdjaaj10006r4l137id4p4y","tag_id":"cizdjaaj9000er4l1qe8amz4r","_id":"cizdjaak00016r4l120o70ny1"},{"post_id":"cizdjaaj10006r4l137id4p4y","tag_id":"cizdjaaj50008r4l1qtjimy1c","_id":"cizdjaak00017r4l1wlunm3f3"},{"post_id":"cizdjaaj10006r4l137id4p4y","tag_id":"cizdjaajx0015r4l14jy4vpwd","_id":"cizdjaak00018r4l1yothqptg"},{"post_id":"cizdjab6j0019r4l12w5o8n0l","tag_id":"cizdjab6p001er4l1g58za7m4","_id":"cizdjab6v001kr4l1pqdowd4r"},{"post_id":"cizdjab6j0019r4l12w5o8n0l","tag_id":"cizdjaaj50008r4l1qtjimy1c","_id":"cizdjab6w001lr4l1h90dppeg"},{"post_id":"cizdjab6j0019r4l12w5o8n0l","tag_id":"cizdjab6t001hr4l19jsw5n5e","_id":"cizdjab6x001mr4l16lswgrv6"},{"post_id":"cizdjab6l001br4l1pmv61jxi","tag_id":"cizdjaaj9000er4l1qe8amz4r","_id":"cizdjab6x001nr4l1zp67d4k6"},{"post_id":"cizdjab6l001br4l1pmv61jxi","tag_id":"cizdjaaj50008r4l1qtjimy1c","_id":"cizdjab6y001or4l1fzddlks6"},{"post_id":"cizdjab6l001br4l1pmv61jxi","tag_id":"cizdjab6u001jr4l1kzu2bzbt","_id":"cizdjab6z001pr4l1odt50g3y"}],"Tag":[{"name":"CSS","_id":"cizdjaaiw0003r4l1ows82prl"},{"name":"筆記","_id":"cizdjaaj50008r4l1qtjimy1c"},{"name":"CSS3","_id":"cizdjaaj7000br4l1x8qd1r2f"},{"name":"Tools","_id":"cizdjaaj9000er4l1qe8amz4r"},{"name":"Flagcounter","_id":"cizdjaajh000mr4l1x5dp7vij"},{"name":"heroku","_id":"cizdjaajl000tr4l1ewpqv6ox"},{"name":"git","_id":"cizdjaajr000zr4l1dj7q908d"},{"name":"markdown","_id":"cizdjaajx0015r4l14jy4vpwd"},{"name":"Javascript","_id":"cizdjab6p001er4l1g58za7m4"},{"name":"react","_id":"cizdjab6t001hr4l19jsw5n5e"},{"name":"redis","_id":"cizdjab6u001jr4l1kzu2bzbt"}]}}